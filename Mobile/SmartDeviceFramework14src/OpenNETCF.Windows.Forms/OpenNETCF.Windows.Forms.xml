<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OpenNETCF.Windows.Forms13</name>
    </assembly>
    <members>
        <member name="T:OpenNETCF.Win32.CB">
            <summary>
            ComboBox Messages.
            <para><b>New in v1.3</b></para>
            </summary>
        </member>
        <member name="T:OpenNETCF.Win32.CBS">
            <summary>
            Combobox control styles.
            <para><b>New in v1.3</b></para>
            </summary>
        </member>
        <member name="T:OpenNETCF.Win32.EM">
            <summary>
            Edit control Messages.
            <para><b>New in v1.3</b></para>
            </summary>
        </member>
        <member name="T:OpenNETCF.Win32.ES">
            <summary>
            Edit control styles.
            <para><b>New in v1.3</b></para>
            </summary>
        </member>
        <member name="T:OpenNETCF.Win32.GW">
            <summary>
            Window relationships used with GetWindow.
            <para><b>New in v1.3</b></para>
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.GW.HWNDFIRST">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.GW.HWNDLAST">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.GW.HWNDNEXT">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.GW.HWNDPREV">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.GW.OWNER">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.GW.CHILD">
            <summary>
            
            </summary>
        </member>
        <member name="T:OpenNETCF.Win32.GWL">
            <summary>
            Parameters for GetWindowLong.
            <para><b>New in v1.3</b></para>
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.GWL.WNDPROC">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.GWL.HINSTANCE">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.GWL.HWNDPARENT">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.GWL.STYLE">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.GWL.EXSTYLE">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.GWL.USERDATA">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.GWL.ID">
            <summary>
            
            </summary>
        </member>
        <member name="T:OpenNETCF.Win32.HWND">
            <summary>
            Preset window handles.
            <para><b>New in v1.3</b></para>
            </summary>
        </member>
        <member name="T:OpenNETCF.Win32.LBS">
            <summary>
            Listbox control styles.
            <para><b>New in v1.3</b></para>
            </summary>
        </member>
        <member name="T:OpenNETCF.Win32.LVM">
            <summary>
            ListView Messages.
            <para><b>New in v1.3</b></para>
            </summary>
        </member>
        <member name="T:OpenNETCF.Win32.SWP">
            <summary>
            Flags used with SetWindowPos.
            <para><b>New in v1.3</b></para>
            </summary>
        </member>
        <member name="T:OpenNETCF.Win32.TCN">
            <summary>
            Notification Messages.
            <para><b>New in v1.3</b></para>
            </summary>
        </member>
        <member name="T:OpenNETCF.Win32.Win32Window">
            <summary>
            A helper class for working with native windows.
            </summary>
        </member>
        <member name="M:OpenNETCF.Win32.Win32Window.CreateWindowEx(System.Int32,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
            This function creates an overlapped, pop-up, or child window with an extended style; otherwise, this function is identical to the CreateWindow function.
            </summary>
            <param name="dwExStyle">Specifies the extended style of the window</param>
            <param name="lpClassName"></param>
            <param name="lpWindowName"></param>
            <param name="dwStyle">Specifies the style of the window being created.</param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="nWidth"></param>
            <param name="nHeight"></param>
            <param name="hWndParent"></param>
            <param name="hMenu"></param>
            <param name="hInstance"></param>
            <param name="lpParam"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Win32.Win32Window.DestroyWindow(System.IntPtr)">
            <summary>
            This function destroys the specified window.
            </summary>
            <param name="hWnd">Handle to the window to be destroyed.</param>
            <returns>Nonzero indicates success.</returns>
        </member>
        <member name="M:OpenNETCF.Win32.Win32Window.FindWindow(System.String,System.String)">
            <summary>
            This function retrieves the handle to the top-level window whose class name and window name match the specified strings.
            </summary>
            <param name="className">The class name.</param>
            <param name="wndName">The window name (the window's title). If this parameter is NULL, all window names match.</param>
            <returns>A handle to the window that has the specified class name and window name indicates success. NULL indicates failure.</returns>
        </member>
        <member name="M:OpenNETCF.Win32.Win32Window.GetWindow(System.IntPtr,OpenNETCF.Win32.GW)">
            <summary>
            Retrieves the handle to a window that has the specified relationship to the specified window.
            </summary>
            <param name="hWnd">Handle to a window.</param>
            <param name="nCmd">Specifies the relationship between the specified window and the window whose handle is to be retrieved.</param>
            <returns>A window handle indicates success. NULL indicates that no window exists with the specified relationship to the specified window.</returns>
        </member>
        <member name="M:OpenNETCF.Win32.Win32Window.GetWindow(OpenNETCF.Win32.GW)">
            <summary>
            Retrieves the handle to a window that has the specified relationship to the Win32Window.
            </summary>
            <param name="nCmd">Specifies the relationship between the specified window and the window which is to be retrieved.</param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Win32.Win32Window.GetWindowText">
            <summary>
            Copies the text of the specified window's title bar or controls body.
            </summary>
            <returns>The window text.</returns>
        </member>
        <member name="M:OpenNETCF.Win32.Win32Window.GetWindowRect(System.IntPtr)">
            <summary>
            Returns a Rectangle representing the bounds of the window
            </summary>
            <param name="hWnd">a valid window handle</param>
            <returns>A <see cref="T:System.Drawing.Rectangle"/> representing the bounds of the specified window.</returns>
        </member>
        <member name="M:OpenNETCF.Win32.Win32Window.GetActiveWindow">
            <summary>
            Retrieves the window handle to the active window associated with the thread that calls the function.
            </summary>
            <returns>The handle to the active window associated with the calling thread's message queue indicates success. NULL indicates failure.</returns>
        </member>
        <member name="M:OpenNETCF.Win32.Win32Window.GetFocus">
            <summary>
            Retrieves the handle to the keyboard focus window associated with the thread that called the function.
            </summary>
            <returns>The handle to the window with the keyboard focus indicates success. NULL indicates that the calling thread's message queue does not have an associated window with the keyboard focus.</returns>
        </member>
        <member name="M:OpenNETCF.Win32.Win32Window.GetCapture">
            <summary>
            Retrieves the handle to the window, if any, that has captured the mouse or stylus input. Only one window at a time can capture the mouse or stylus input.
            </summary>
            <returns>The handle of the capture window associated with the current thread indicates success. NULL indicates that no window in the current thread has captured the mouse.</returns>
        </member>
        <member name="M:OpenNETCF.Win32.Win32Window.GetWindowLong(System.IntPtr,System.Int32)">
            <summary>
            Retrieves information about the specified window.
            </summary>
            <param name="hWnd">Handle to the window and, indirectly, the class to which the window belongs.</param>
            <param name="nItem">Specifies the zero-based offset to the value to be retrieved. Valid values are in the range zero through the number of bytes of extra window memory, minus four; for example, if you specified 12 or more bytes of extra memory, a value of 8 would be an index to the third 32-bit integer.</param>
            <returns>The requested 32-bit value indicates success. Zero indicates failure.</returns>
        </member>
        <member name="M:OpenNETCF.Win32.Win32Window.MoveWindow(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            This function changes the position and dimensions of the specified window. For a top-level window, the position and dimensions are relative to the upper-left corner of the screen. For a child window, they are relative to the upper-left corner of the parent window's client area.
            </summary>
            <param name="hWnd">Handle to the window.</param>
            <param name="X">Specifies the new position of the left side of the window.</param>
            <param name="Y">Specifies the new position of the top of the window.</param>
            <param name="cx">Specifies the new width of the window.</param>
            <param name="cy">Specifies the new height of the window.</param>
            <returns>Nonzero indicates success. Zero indicates failure.</returns>
        </member>
        <member name="M:OpenNETCF.Win32.Win32Window.PostMessage(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
            Places a message in the message queue associated with the thread that created the specified window and then returns without waiting for the thread to process the message.
            </summary>
            <param name="hWnd">Handle to the window whose window procedure is to receive the message.</param>
            <param name="msg">Specifies the message to be posted.</param>
            <param name="wParam">Specifies additional message-specific information.</param>
            <param name="lParam">Specifies additional message-specific information.</param>
            <returns>Nonzero indicates success. Zero indicates failure.</returns>
        </member>
        <member name="M:OpenNETCF.Win32.Win32Window.SetWindowLong(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Changes an attribute of the specified window.
            </summary>
            <param name="hWnd">Handle to the window and, indirectly, the class to which the window belongs.</param>
            <param name="GetWindowLongParam">Specifies the zero-based offset to the value to be set.</param>
            <param name="nValue">Specifies the replacement value.</param>
        </member>
        <member name="M:OpenNETCF.Win32.Win32Window.EnableWindow(System.IntPtr,System.Boolean)">
            <summary>
            enables or disables mouse and keyboard input to the specified window or control. When input is disabled, the window does not receive input such as mouse clicks and key presses. When input is enabled, the window receives all input.
            </summary>
            <param name="hWnd">Handle to the window to be enabled or disabled.</param>
            <param name="bEnable">Boolean that specifies whether to enable or disable the window. If this parameter is TRUE, the window is enabled. If the parameter is FALSE, the window is disabled.</param>
            <returns>Nonzero indicates that the window was previously disabled. Zero indicates that the window was not previously disabled.</returns>
        </member>
        <member name="M:OpenNETCF.Win32.Win32Window.RegisterWindowMessage(System.String)">
            <summary>
            Defines a new window message that is guaranteed to be unique throughout the system. The returned message value can be used when calling the SendMessage or PostMessage function.
            </summary>
            <param name="lpMsg">String that specifies the message to be registered.</param>
            <returns>A message identifier in the range 0xC000 through 0xFFFF indicates that the message is successfully registered. Zero indicates failure.</returns>
        </member>
        <member name="M:OpenNETCF.Win32.Win32Window.SetFocus(System.IntPtr)">
            <summary>
            Sets the keyboard focus to the specified window. All subsequent keyboard input is directed to this window. The window, if any, that previously had the keyboard focus loses it.
            </summary>
            <param name="hWnd">Handle to the window that will receive the keyboard input.
            If this parameter is NULL, keystrokes are ignored.</param>
            <returns>The handle to the window that previously had the keyboard focus indicates success. NULL indicates that the hWnd parameter is invalid or the window is not associated with the calling thread's message queue.</returns>
        </member>
        <member name="M:OpenNETCF.Win32.Win32Window.SetForegroundWindow(System.IntPtr)">
            <summary>
            Puts the thread that created the specified window into the foreground and activates the window.
            </summary>
            <param name="hWnd">Handle to the window that should be activated and brought to the foreground.</param>
            <returns>Nonzero indicates that the window was brought to the foreground. Zero indicates that the window was not brought to the foreground.</returns>
        </member>
        <member name="M:OpenNETCF.Win32.Win32Window.SetParent(System.IntPtr,System.IntPtr)">
            <summary>
            This function changes the parent window of the specified child window.
            </summary>
            <param name="hWChild">Handle to the child window.</param>
            <param name="hwParent">Handle to the new parent window. If this parameter is NULL, the desktop window becomes the new parent window.</param>
            <returns>A handle to the previous parent window indicates success. NULL indicates failure.</returns>
        </member>
        <member name="T:OpenNETCF.Win32.NMHDR">
            <summary>
            Notification header returned in WM_NOTIFY lParam
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.NMHDR.hwndFrom">
            <summary>
            Window that has sent WM_NOTIFY
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.NMHDR.idFrom">
            <summary>
            Control ID of the window that sent the notification
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.NMHDR.code">
            <summary>
            Notification code
            </summary>
        </member>
        <member name="T:OpenNETCF.Win32.WM">
            <summary>
            Window Messages.
            <para><b>New in v1.3</b></para>
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.WM.LBUTTONDOWN">
            <summary>   
            This message is posted when the user presses the touch-screen in the client area of a window.   
            </summary>      
        </member>
        <member name="F:OpenNETCF.Win32.WM.USER">
            <summary>   
            This message is used by applications to help define private messages.   
            </summary> 
        </member>
        <member name="T:OpenNETCF.Win32.WS">
            <summary>
            Listbox control styles.
            <para><b>New in v1.3</b></para>
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.WS.BORDER">
            <summary>
            Creates a window that has a thin-line border. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.WS.CAPTION">
            <summary>
            Creates a window that has a title bar (includes the BORDER style). 
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.WS.CHILD">
            <summary>
            Creates a child window. This style cannot be used with the POPUP style. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.WS.CHILDWINDOW">
            <summary>
            Same as the CHILD style. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.WS.CLIPSIBLINGS">
            <summary>
            Clips child windows relative to each other; that is, when a particular child window receives a WM_PAINT message, the CLIPSIBLINGS style clips all other overlapping child windows out of the region of the child window to be updated. If CLIPSIBLINGS is not specified and child windows overlap, it is possible, when drawing within the client area of a child window, to draw within the client area of a neighboring child window. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.WS.DISABLED">
            <summary>
            Creates a window that is initially disabled. A disabled window cannot receive input from the user. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.WS.DLGFRAME">
            <summary>
            Creates a window that has a border of a style typically used with dialog boxes. A window with this style cannot have a title bar. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.WS.GROUP">
            <summary>
            Specifies the first control of a group of controls. The group consists of this first control and all controls defined after it, up to the next control with the GROUP style. The first control in each group usually has the TABSTOP style so that the user can move from group to group. The user can subsequently change the keyboard focus from one control in the group to the next control in the group by using the direction keys. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.WS.HSCROLL">
            <summary>
            Creates a window that has a horizontal scroll bar. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.WS.ICONIC">
            <summary>
            Creates a window that is initially minimized. Same as the MINIMIZE style. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.WS.MAXIMIZE">
            <summary>
            Creates a window that is initially maximized. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.WS.MAXIMIZEBOX">
            <summary>
            Creates a window that has a Maximize button. Cannot be combined with the EX_CONTEXTHELP style.  
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.WS.MINIMIZE">
            <summary>
            Creates a window that is initially minimized. Same as the ICONIC style. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.WS.MINIMIZEBOX">
            <summary>
            Creates a window that has a Minimize button. Cannot be combined with the EX_CONTEXTHELP style.  
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.WS.OVERLAPPED">
            <summary>
            Creates an overlapped window. An overlapped window has a title bar and a border. Same as the TILED style. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.WS.OVERLAPPEDWINDOW">
            <summary>
            Creates an overlapped window with the OVERLAPPED, CAPTION, SYSMENU, THICKFRAME, MINIMIZEBOX, and MAXIMIZEBOX styles. Same as the TILEDWINDOW style.  
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.WS.POPUP">
            <summary>
            Creates a pop-up window. This style cannot be used with the CHILD style. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.WS.POPUPWINDOW">
            <summary>
            Creates a pop-up window with BORDER, POPUP, and SYSMENU styles. The CAPTION and POPUPWINDOW styles must be combined to make the window menu visible. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.WS.SIZEBOX">
            <summary>
            Creates a window that has a sizing border. Same as the THICKFRAME style. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.WS.SYSMENU">
            <summary>
            Creates a window that has a Close (X) button in the non-client area. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.WS.TABSTOP">
            <summary>
            Specifies a control that can receive the keyboard focus when the user presses the TAB key. Pressing the TAB key changes the keyboard focus to the next control with the TABSTOP style. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.WS.THICKFRAME">
            <summary>
            Creates a window that has a sizing border. Same as the SIZEBOX style. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.WS.TILED">
            <summary>
            Creates an overlapped window. An overlapped window has a title bar and a border. Same as the OVERLAPPED style.  
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.WS.TILEDWINDOW">
            <summary>
            Creates an overlapped window with the OVERLAPPED, CAPTION, SYSMENU, THICKFRAME, MINIMIZEBOX, and MAXIMIZEBOX styles. Same as the OVERLAPPEDWINDOW style.  
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.WS.VISIBLE">
            <summary>
            Creates a window that is initially visible. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.WS.VSCROLL">
            <summary>
            Creates a window that has a vertical scroll bar. 
            </summary>
        </member>
        <member name="T:OpenNETCF.Win32.WS_EX">
            <summary>
            Extended control styles.
            <para><b>New in v1.3</b></para>
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.WS_EX.ACCEPTFILES">
            <summary>
            Specifies that a window created with this style accepts drag-drop files. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.WS_EX.APPWINDOW">
            <summary>
            Forces a top-level window onto the taskbar when the window is visible.  
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.WS_EX.CLIENTEDGE">
            <summary>
            Specifies that a window has a border with a sunken edge. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.WS_EX.DLGMODALFRAME">
            <summary>
            Creates a window that has a double border; the window can, optionally, be created with a title bar by specifying the WS_CAPTION style in the dwStyle parameter. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.WS_EX.LEFT">
            <summary>
            Creates a window that has generic "left-aligned" properties. This is the default. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.WS_EX.LEFTSCROLLBAR">
            <summary>
            If the shell language is Hebrew, Arabic, or another language that supports reading order alignment, the vertical scroll bar (if present) is to the left of the client area. For other languages, the style is ignored. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.WS_EX.LTRREADING">
            <summary>
            The window text is displayed using left-to-right reading-order properties. This is the default. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.WS_EX.MDICHILD">
            <summary>
            Creates an MDI child window. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.WS_EX.NOACTIVATE">
            <summary>
            A top-level window created with this style cannot be activated. If a child window has this style, tapping it does not cause its top-level parent to be activated. A window that has this style receives stylus events, but neither it nor its child windows can get the focus. Supported in Windows CE versions 2.0 and later. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.WS_EX.NOANIMATION">
            <summary>
            A window created with this style does not show animated exploding and imploding rectangles, and does not have a button on the taskbar. Supported in Windows CE versions 2.0 and later. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.WS_EX.NOPARENTNOTIFY">
            <summary>
            Specifies that a child window created with this style does not send the WM_PARENTNOTIFY message to its parent window when it is created or destroyed. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.WS_EX.OVERLAPPEDWINDOW">
            <summary>
            Combines the CLIENTEDGE and WINDOWEDGE styles. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.WS_EX.PALETTEWINDOW">
            <summary>
            Combines the WINDOWEDGE, TOOLWINDOW, and TOPMOST styles. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.WS_EX.RIGHT">
            <summary>
            The window has generic "right-aligned" properties. This depends on the window class. This style has an effect only if the shell language is Hebrew, Arabic, or another language that supports reading-order alignment; otherwise, the style is ignored. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.WS_EX.RIGHTSCROLLBAR">
            <summary>
            Vertical scroll bar (if present) is to the right of the client area. This is the default. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.WS_EX.RTLREADING">
            <summary>
            If the shell language is Hebrew, Arabic, or another language that supports reading-order alignment, the window text is displayed using right-to-left reading-order properties. For other languages, the style is ignored. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.WS_EX.STATICEDGE">
            <summary>
            Creates a window with a three-dimensional border style intended to be used for items that do not accept user input. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.WS_EX.TOOLWINDOW">
            <summary>
            Creates a tool window; that is, a window intended to be used as a floating toolbar. A tool window has a title bar that is shorter than a normal title bar, and the window title is drawn using a smaller font. A tool window does not appear in the taskbar or in the dialog that appears when the user presses ALT+TAB. If a tool window has a system menu, its icon is not displayed on the title bar. However, you can display the system menu by right-clicking or by typing ALT+SPACE.  
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.WS_EX.TOPMOST">
            <summary>
            Specifies that a window created with this style should be placed above all non-topmost windows and should stay above them, even when the window is deactivated. To add or remove this style, use the SetWindowPos function. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.WS_EX.TRANSPARENT">
            <summary>
            Specifies that a window created with this style should not be painted until siblings beneath the window (that were created by the same thread) have been painted. The window appears transparent because the bits of underlying sibling windows have already been painted. To achieve transparency without these restrictions, use the SetWindowRgn function.
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.WS_EX.WINDOWEDGE">
            <summary>
            Specifies that a window has a border with a raised edge. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.WS_EX.NONE">
            <summary>
            Additional value for Completeness
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.DrawDirection">
            <summary>
            The direction of the animiation in the AnimateCtl.
            <para><b>New in v1.1</b></para>
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.AnimateCtl">
            <summary>
            Displays an animation.
            <para><b>New in v1.1</b></para>
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.IWin32Window">
            <summary>
            Provides an interface to expose Win32 HWND handles.
            </summary>
            <remarks>This interface is implemented on objects that expose Win32 HWND handles.
            The resultant handle can be used with Win32 API calls.
            <para>Unlike the desktop .NET Framework this interface is not implemented in the base <see cref="T:System.Windows.Forms.Control"/> class.
            However you can implement it on any class which derives from <see cref="T:System.Windows.Forms.Control"/> or <see cref="T:System.Windows.Forms.Form"/>.
            The <see cref="P:OpenNETCF.Windows.Forms.IWin32Window.Handle"/> property can then be passed to native API functions such as those contained in the <see cref="T:OpenNETCF.Win32.Win32Window"/> class.</para></remarks>
            <example>
            <code>
            [VB]
            Imports OpenNETCF.Windows.Forms
            Imports OpenNETCF.Win32
            
            Public Class MyControl
            	Inherits System.Windows.Forms.Control
            	Implements IWin32Window
            	
            	Overridable ReadOnly Property Handle() As System.IntPtr
            		Get
            			Me.Capture = True
            			Dim thishandle As IntPtr
            			thishandle = Win32Window.GetCapture()
            			Me.Capture = False
            
            			Handle = thishandle
            		End Get
            	End Property
            	
            End Class
            </code>
            <code>
            [C#]
            using OpenNETCF.Windows.Forms;
            using OpenNETCF.Win32;
            
            public class MyControl : Control, IWin32Window
            {
            	
            	public IntPtr Handle
            	{
            		get
            		{
            			this.Capture = true;
            			IntPtr thishandle = Win32Window.GetCapture();
            			this.Capture = false;
            			
            			return thishandle;
            		}
            	}
            }</code>
            </example>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.IWin32Window.Handle">
            <summary>
            Gets the handle to the window represented by the implementer.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.AnimateCtl._bitmap">
            <summary>
            The bitmap to animate.  Can be a GIF or BMP
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.AnimateCtl._frameCount">
            <summary>
            The number of frames in the image
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.AnimateCtl._frameWidth">
            <summary>
            The width of a frame
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.AnimateCtl._frameHeight">
            <summary>
            The Height of the frame
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.AnimateCtl.animating">
            <summary>
            Value to see if the control is animating
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.AnimateCtl._currentFrame">
            <summary>
            Number of frames available
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.AnimateCtl._loopCount">
            <summary>
            Number of times to loop the animation
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.AnimateCtl._loopCounter">
            <summary>
            Number of times the animation as looped
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.AnimateCtl._delayInterval">
            <summary>
            Delay interval for the animation
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.AnimateCtl._tag">
            <summary>
            Tag Name as in the full framework
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.AnimateCtl._name">
            <summary>
            Name of the control as in the full framework
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.AnimateCtl._hWnd">
            <summary>
            The Windows Handle to the control
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.AnimateCtl.fTimer">
            <summary>
            The timer for the animation
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.AnimateCtl.drawDirection">
            <summary>
            The direction of the animiation
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.AnimateCtl.#ctor">
            <summary>
            Default contructor
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.AnimateCtl.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Override the painBackground to avoid flickering
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.AnimateCtl.StartAnimation">
            <summary>
            Begin animating the image
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.AnimateCtl.StopAnimation">
            <summary>
            Stops the current animation
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.AnimateCtl.DrawFrame(System.Drawing.Graphics)">
            <summary>
            Draw the frame
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.AnimateCtl.Draw(System.Int32,System.Drawing.Graphics)">
            <summary>
            Draw the image
            </summary>
            <param name="iframe"></param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.AnimateCtl.BackgroundImageColor(System.Drawing.Image)">
            <summary>
            Gets the background color to make transparent
            </summary>
            <param name="image"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.AnimateCtl.ResizeControl">
            <summary>
            Resize the animation control
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.AnimateCtl.AnimDrawDirection">
            <summary>
            </summary>
            <value>Data about the control.  The default is an empty string</value>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.AnimateCtl.Image">
            <summary>
            The bitmap object to animate
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.AnimateCtl.Tag">
            <summary>
            </summary>
            <value>Data about the control.  The default is an empty string</value>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.AnimateCtl.FrameWidth">
            <summary>
            Get/Set the width of the frame to animate
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.AnimateCtl.DelayInterval">
            <summary>
            Get/Set the delay interval for the control
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.AnimateCtl.LoopCount">
            <summary>
            Get/Set the amount of times to loop the animation
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.AnimateCtl.Name">
            <summary>
            Gets or sets the name of the control.
            </summary>
            <value>The name of the control. The default is an empty string ("").</value>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.AnimateCtl.Handle">
            <summary>
            Gets the window handle that the control is bound to.
            </summary>
            <value>An <see cref="T:System.IntPtr"/> that contains the window handle (HWND) of the control.</value>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.ApplicationEx">
            <summary>
            Provides static (Shared in Visual Basic) methods and properties to manage an application, such as methods to start and stop an application, to process Windows messages, and properties to get information about an application. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.ApplicationEx.Run">
            <summary>
            Begins running a standard application message loop on the current thread, without a form
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.ApplicationEx.Run(System.Windows.Forms.Form)">
            <summary>
            Begins running a standard application message loop on the current thread, and makes the specified form visible.
            <seealso cref="T:System.Windows.Forms.Form"/>
            </summary>
            <param name="mainForm">Begins running a standard application message loop on the current thread, and makes the specified form visible.</param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.ApplicationEx.Exit">
            <summary>
            Informs all message pumps that they must terminate, and then closes all application windows after the messages have been processed.
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.ApplicationEx.DoEvents">
            <summary>
            Processes all Windows messages currently in the message queue.
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.ApplicationEx.AddMessageFilter(OpenNETCF.Windows.Forms.IMessageFilter)">
            <summary>
            Adds a message filter to monitor Windows messages as they are routed to their destinations
            <seealso cref="T:OpenNETCF.Windows.Forms.IMessageFilter"/>
            </summary>
            <param name="value">The implementation of the IMessageFilter interface you want to install</param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.ApplicationEx.RemoveMessageFilter(OpenNETCF.Windows.Forms.IMessageFilter)">
            <summary>
            Removes a message filter from the message pump of the application
            <seealso cref="T:OpenNETCF.Windows.Forms.IMessageFilter"/>
            </summary>
            <param name="value">The implementation of the IMessageFilter to remove from the application.</param>
        </member>
        <member name="E:OpenNETCF.Windows.Forms.ApplicationEx.ThreadExit">
            <summary>
            Occurs when ApplicationEx.Run exits
            <seealso cref="M:OpenNETCF.Windows.Forms.ApplicationEx.Exit"/>
            </summary>
        </member>
        <member name="E:OpenNETCF.Windows.Forms.ApplicationEx.ApplicationExit">
            <summary>
            Occurs when the application is about to shut down.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ApplicationEx.MessageLoop">
            <summary>
            Gets a value indicating whether a message loop exists on this thread. 
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ApplicationEx.StartupPath">
            <summary>
            Gets the path for the currently executing assembly file, not including the executable name.
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.BatteryChargeStatus">
            <summary>
            Defines identifiers that indicate the current battery charge level or charging state information.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.BatteryChargeStatus.High">
            <summary>
            Indicates a high level of battery charge.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.BatteryChargeStatus.Low">
            <summary>
            Indicates a low level of battery charge.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.BatteryChargeStatus.Critical">
            <summary>
            Indicates a critically low level of battery charge.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.BatteryChargeStatus.Charging">
            <summary>
            Indicates a battery is charging.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.BatteryChargeStatus.NoSystemBattery">
            <summary>
            Indicates that no battery is present.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.BatteryChargeStatus.Unknown">
            <summary>
            Indicates an unknown battery condition.
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.ACPowerStatusEnum">
            <summary>
            Specifies valid values used in representing the status of AC power to the device.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.ACPowerStatusEnum.Offline">
            <summary>
            Disconnected from AC power.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.ACPowerStatusEnum.Online">
            <summary>
            Connected to AC power.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.ACPowerStatusEnum.Unknown">
            <summary>
            Unknown whether connected/disconnected to/from AC power.
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.BatteryChargeStatusEnum">
            <summary>
            Specifies valid values used in representing the status of the battery charge.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.BatteryChargeStatusEnum.High">
            <summary>
            Battery charge is in the high range.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.BatteryChargeStatusEnum.Low">
            <summary>
            Battery charge is in the low range.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.BatteryChargeStatusEnum.Critical">
            <summary>
            Battery charge is in the critical range.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.BatteryChargeStatusEnum.Charging">
            <summary>
            Battery is charging.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.BatteryChargeStatusEnum.NoSystemBattery">
            <summary>
            No system battery exists.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.BatteryChargeStatusEnum.Unknown">
            <summary>
            Battery charge status is unknown.
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.BatteryLife">
            <summary>
            Creates a simple custom progress bar to display the percentage of battery 
            life left on a device.
            </summary>
            <remarks>This control will not work as expected on the emulator.</remarks>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.BatteryLife.#ctor">
            <summary>
            Initializes a new instance of the BatteryLife class.
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.BatteryLife.Finalize">
            <summary>
            Destroys this BatteryLife object.
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.BatteryLife.Dispose">
            <summary>
            Releases all resources used by this BatteryLife object.
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.BatteryLife.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by this BatteryLife object and optionally releases the managed resources.
            </summary>
            <param name="disposing"><b>true</b> to release both managed and unmanaged resources; <b>false</b> to release only unmanaged resources.</param>
            <remarks>This method is called by the public Dispose() method and the Finalize method. <b>Dispose()</b> invokes the protected <b>Dispose(Boolean)</b> method with the disposing parameter set to <b>true</b>. <b>Finalize</b> invokes <b>Dispose</b> with <i>disposing</i> set to <b>false</b>.</remarks>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.BatteryLife.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the background of the control.
            </summary>
            <param name="e">A PaintEventArgs that contains information about the control to paint.</param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.BatteryLife.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the Paint event.
            </summary>
            <param name="e">A PaintEventArgs that contains the event data.</param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.BatteryLife.OnResize(System.EventArgs)">
            <summary>
            Raises the Resize event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.BatteryLife.UpdateBatteryLife">
            <summary>
            Forces an update of the progress bar that represents the battery life percentage. 
            </summary>
            <returns><b>true</b> if successful, otherwise <b>false</b></returns>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.BatteryLife.ForeColor">
            <summary>
            The color used to display the battery life percentage.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.BatteryLife.BorderColor">
            <summary>
            The color used to display the 1 pixel border around the control.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.BatteryLife.StatusBarColor">
            <summary>
            The color used to display the status bar representing the percentage of battery life.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.BatteryLife.ACPowerStatus">
            <summary>
            Gets a value that represents the status of AC power to the device.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.BatteryLife.BatteryChargeStatus">
            <summary>
            Gets a value that represents the status of the battery charge.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.BatteryLife.BatteryLifePercent">
            <summary>
            Gets a value that represents the percentage of battery life left in the device.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.BatteryLife.BatteryLifeTime">
            <summary>
            Gets a value that represents the number of seconds of battery life remaining, or -1 if remaining seconds are unknown.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.BatteryLife.BatteryFullLifeTime">
            <summary>
            Gets a value that represents the number of seconds of battery life when at full charge, or -1 if full lifetime is unknown.
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.BatteryMonitor">
            <summary>
            Provides a mechanism for monitoring certain aspects of the system power.
            </summary>
            <example>
            public class Form1 : System.Windows.Forms.Form
            {
            private OpenNETCF.Windows.Forms.BatteryMonitor batteryMonitor1 = new OpenNETCF.Windows.Forms.BatteryMonitor();
            public Form1()
            {
            	batteryMonitor1.PrimaryBatteryLifeTrigger = 50;
            	batteryMonitor1.PrimaryBatteryLifeNotification += new EventHandler(batteryMonitor1_PrimaryBatteryLifeNotification);
            	batteryMonitor1.Enabled = true;
            }
            }
            </example>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.BatteryMonitor.DefaultBatteryLifePercent">
            <summary>
            Specifies the default value for the PrimaryBatteryLifeTrigger property.
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.BatteryMonitor.#ctor">
            <summary>
            Initializes a new instance of the BatteryMonitor class.
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.BatteryMonitor.OnPrimaryBatteryLifeNotification(System.EventArgs)">
            <summary>
            Raises the PrimaryBatteryLifeNotification event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.BatteryMonitor.internalTimer_Tick(System.Object,System.EventArgs)">
            <summary>
            The event handler used to determine if notifications should be sent to subscribers.
            </summary>
            <param name="sender">The internal poll timer.</param>
            <param name="e">The EventArgs event data.</param>
        </member>
        <member name="E:OpenNETCF.Windows.Forms.BatteryMonitor.PrimaryBatteryLifeNotification">
            <summary>
            Occurs when the primary battery life percentage is equal to the trigger value, indicated 
            by the PrimaryBatteryLifeTrigger property.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.BatteryMonitor.PrimaryBatteryLifeTrigger">
            <summary>
            Gets or sets a value (percentage) that will trigger the PrimaryBatteryLifeNotification event.
            </summary>
            <value>An integer that represents the percentage that will trigger the notification event. The default is the value of the DefaultBatteryLifePercent constant.</value>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.BatteryMonitor.Enabled">
            <summary>
            Gets or sets a value that will start or stop the components event notifications.
            </summary>
            <value>A boolean that represents the state of event notifications for this component. The default is False.</value>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.BatteryMonitor.Interval">
            <summary>
            Gets or sets a value that will determine how often the component checks the system power to determine if an event notification should be sent.
            </summary>
            <value>An integer that represents the time, in milliseconds, that should exist between two consecutive comparisons between the current system power and any triggers. The default is 1000 (1 second).</value>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.ButtonEx">
            <summary>
            Represents a Windows button control.
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.ButtonEx.#ctor">
            <summary>
            Initializes a new instance of the Button class.
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.ButtonEx.PerformClick">
            <summary>
            Generates a Click event for a button.
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.ButtonEx.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the background of the control.
            </summary>
            <param name="e">A PaintEventArgs that contains information about the control to paint.</param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.ButtonEx.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the Paint event.
            </summary>
            <param name="e">A PaintEventArgs that contains the event data.</param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.ButtonEx.OnClick(System.EventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.ButtonEx.OnEnabledChanged(System.EventArgs)">
            <summary>
            Raises the EnabledChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.ButtonEx.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseDown event.
            </summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.ButtonEx.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseMove event.
            </summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.ButtonEx.OnResize(System.EventArgs)">
            <summary>
            Raises the Resize event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.ButtonEx.OnTextChanged(System.EventArgs)">
            <summary>
            Raises the TextChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.ButtonEx.BackgroundImageColor(System.Drawing.Image)">
            <summary>
            Gets the background color to make transparent
            </summary>
            <param name="image"></param>
            <returns></returns>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ButtonEx.TransparentImage">
            <summary>
            Gets or sets the value indicating whether image should be transparent
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ButtonEx.BackColor">
            <summary>
            Gets or sets the background color for the control.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ButtonEx.ActiveBackColor">
            <summary>
            Gets or sets the background color for the control when it is active (clicked/tapped).
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ButtonEx.DisabledBackColor">
            <summary>
            Gets or sets the background color for the control when it is disabled.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ButtonEx.BorderStyle">
            <summary>
            Gets or sets the border style for the control.
            </summary>
            <remarks>If set to <see cref="T:System.Windows.Forms.BorderStyle">BorderStyle.Fixed3D</see> the <see cref="P:OpenNETCF.Windows.Forms.ButtonEx.BorderColor"/> property is ignored and system colors are used to present the 3D effect border.
            This setting is only recommended for CE.NET Platforms where the standard UI is rendered with a 3D look, for Pocket PC use <see cref="T:System.Windows.Forms.BorderStyle">BorderStyle.FixedSingle</see> instead.</remarks>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ButtonEx.BorderColor">
            <summary>
            Gets or sets the border color for the control.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ButtonEx.DisabledBorderColor">
            <summary>
            Gets or sets the border color for the control when it is disabled.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ButtonEx.BackgroundImagePressed">
            <summary>
            The background image displayed in the control when the button is pressed.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ButtonEx.BackgroundImageDisabled">
            <summary>
            The background image displayed in the control when the button is disabled.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ButtonEx.DialogResult">
            <summary>
            Gets or sets a dialog result that is returned to the parent form when the button is activated (clicked/tapped).
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ButtonEx.AutoSize">
            <summary>
            Gets or sets the value indicating whether the control should be autosized to the backgroundimage size.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ButtonEx.Font">
            <summary>
            Gets or sets the font of the text displayed by the control.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ButtonEx.ForeColor">
            <summary>
            Gets or sets the text color for the control.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ButtonEx.ActiveForeColor">
            <summary>
            Gets or sets the text color for the control when it is active (clicked/tapped).
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ButtonEx.DisabledForeColor">
            <summary>
            Gets or sets the text color for the control when it is disabled.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ButtonEx.Image">
            <summary>
            Gets or sets the image that is displayed on the control.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ButtonEx.ImageAlign">
            <summary>
            Gets or sets the alignment of the image on the control.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ButtonEx.TextAlign">
            <summary>
            Gets or sets the alignment of the text on the control.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ButtonEx.Handle">
            <summary>
            Gets the window handle that the control is bound to.
            <para><b>New in v1.3</b></para>
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ButtonEx.Name">
            <summary>
            Gets the name of the control. 
            <para><b>New in v1.3</b></para>
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.CheckBoxEx">
            <summary>
            Represents a check box.  
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.CheckBoxEx.OnCheckStateChanged(System.EventArgs)">
            <summary>
            Raises the System.Windows.Forms.CheckBox.CheckStateChanged event.  
            </summary>
            <param name="e">An System.EventArgs that contains the event data.</param>
        </member>
        <member name="E:OpenNETCF.Windows.Forms.CheckBoxEx.CheckStateChanged">
            <summary>
            Occurs when the value of the CheckBox.CheckState property changes.  
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.CheckBoxEx.BorderStyle">
            <summary>
            Gets or sets the border style color of the control. 
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.CheckBoxEx.ForeColor">
            <summary>
            Gets or sets the foreground color of the control. 
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.CheckBoxEx.TextColor">
            <summary>
            Gets or sets the color of the text of the control. 
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.CheckBoxEx.AutoCheck">
            <summary>
             Gets or set a value indicating whether the Checked or CheckState values and the check box's appearance are automatically changed when the check box is clicked.  
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.CheckBoxEx.BackColor">
            <summary>
            Gets or sets the background color for the control.  
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.CheckBoxEx.CheckState">
            <summary>
            Gets or sets the state of the check box.  
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.CheckBoxEx.Checked">
            <summary>
            Gets or set a value indicating whether the check box is in the checked state.  
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.CheckBoxEx.Handle">
            <summary>
            Gets the window handle that the control is bound to.
            <para><b>New in v1.3</b></para>
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.CheckBoxEx.Name">
            <summary>
            Gets the name of the control.  
            <para><b>New in v1.3</b></para>
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.CheckBoxEx.Tag">
            <summary>
            Gets or sets the object that contains data about the control.
            <para><b>New in v1.3</b></para>
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.Clipboard">
            <summary>
            Provides methods to place data on and retrieve data from the system clipboard.
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.Clipboard.SetClipboardText(System.String)">
            <summary>
            <b>Obsolete</b> Places specified text onto the clipboard
            </summary>
            <param name="text">Text to be added to the clipboard</param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.Clipboard.SetText(System.String)">
            <summary>
            Places specified text onto the clipboard.
            <para><b>New in v1.3</b></para>
            </summary>
            <param name="text">Text to be added to the clipboard.</param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.Clipboard.Clear">
            <summary>
            Clears the contents of the Clipboard.
            <para><b>New in v1.3</b></para>
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.Clipboard.GetClipboardText">
            <summary>
            <b>Obsolete</b> Retrieves data from the clipboard as text
            </summary>
            <returns>Text representation of clipboard contents</returns>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.Clipboard.GetText">
            <summary>
            Retrieves text from the Clipboard.
            <para><b>New in v1.3</b></para>
            </summary>
            <returns>Clipboard contents as text.</returns>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.Clipboard.SetDataObject(OpenNETCF.Windows.Forms.IDataObject)">
            <summary>
            Places nonpersistent data on the system clipboard.
            </summary>
            <param name="data">The data to place on the clipboard.</param>
            <exception cref="T:System.ArgumentNullException">The value of data is null.</exception>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.Clipboard.GetDataObject">
            <summary>
            Retrieves the data that is currently on the system clipboard.
            </summary>
            <returns>An <see cref="T:OpenNETCF.Windows.Forms.IDataObject"/> that represents the data currently on the clipboard, or null if there is no data on the clipboard.</returns>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.DataFormats">
            <summary>
            Provides static, predefined <see cref="T:OpenNETCF.Windows.Forms.Clipboard"/> format names.
            Use them to identify the format of data that you store in an <see cref="T:OpenNETCF.Windows.Forms.IDataObject"/>.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.DataFormats.Bitmap">
            <summary>
            Specifies a Windows bitmap format.
            <para>Not currently supported</para>
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.DataFormats.Dib">
            <summary>
            Specifies the Windows Device Independent Bitmap (DIB) format.
            <para>Not currently supported</para>
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.DataFormats.Dif">
            <summary>
            Specifies the Windows Data Interchange Format (DIF), which Windows Forms does not directly use.
            <para>Not currently supported</para>
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.DataFormats.OemText">
            <summary>
            Specifies the standard Windows original equipment manufacturer (OEM) text format.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.DataFormats.Palette">
            <summary>
            Specifies the Windows palette format.
            <para>Not currently supported</para>
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.DataFormats.PenData">
            <summary>
            Specifies the Windows pen data format, which consists of pen strokes for handwriting software; Windows Forms does not use this format.
            <para>Not currently supported</para>
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.DataFormats.Riff">
            <summary>
            Specifies the Resource Interchange File Format (RIFF) audio format, which Windows Forms does not directly use.
            <para>Not currently supported</para>
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.DataFormats.SymbolicLink">
            <summary>
            Specifies the Windows symbolic link format, which Windows Forms does not directly use.
            <para>Not currently supported</para>
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.DataFormats.Text">
            <summary>
            Specifies the standard ANSI text format.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.DataFormats.Tiff">
            <summary>
            Specifies the Tagged Image File Format (TIFF), which Windows Forms does not directly use.
            <para>Not currently supported</para>
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.DataFormats.UnicodeText">
            <summary>
            Specifies the standard Windows Unicode text format.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.DataFormats.WaveAudio">
            <summary>
            Specifies the wave audio format, which Windows Forms does not directly use.
            <para>Not currently supported</para>
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.DataFormats.GetFormat(System.Int32)">
            <summary>
            Returns a <see cref="T:OpenNETCF.Windows.Forms.DataFormats.Format"/> with the Windows Clipboard numeric ID and name for the specified ID.
            </summary>
            <param name="id">The format ID.</param>
            <returns>A <see cref="T:OpenNETCF.Windows.Forms.DataFormats.Format"/> that has the Windows Clipboard numeric ID and the name of the format.</returns>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.DataFormats.GetFormat(System.String)">
            <summary>
            Returns an OpenNETCF.Windows.Forms.DataFormats.Format with the Windows Clipboard numeric ID and name for the specified format.
            </summary>
            <param name="format">The format name.</param>
            <returns>An OpenNETCF.Windows.Forms.DataFormats.Format that has the Windows Clipboard numeric ID and the name of the format.</returns>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.DataFormats.Format">
            <summary>
            Represents a clipboard format type.
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.DataFormats.Format.#ctor(System.String,System.Int32)">
            <summary>
            Create a new instance of Format.
            </summary>
            <param name="name">Name of the format.</param>
            <param name="id">ID number of the format.</param>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.DataFormats.Format.Name">
            <summary>
            Gets the name of this format.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.DataFormats.Format.Id">
            <summary>
            Gets the ID number for this format.
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.IDataObject">
            <summary>
            Provides a format-independent mechanism for transferring data.
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.IDataObject.GetData(System.String)">
            <summary>
            Retrieves the data associated with the specified data format.
            </summary>
            <param name="format">The format of the data to retrieve.
            See <see cref="T:OpenNETCF.Windows.Forms.DataFormats"/> for predefined formats.</param>
            <returns>The data associated with the specified format, or a null reference (Nothing in Visual Basic).</returns>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.IDataObject.GetDataPresent(System.String)">
            <summary>
            Determines whether data stored in this instance is associated with, or can be converted to, the specified format.
            </summary>
            <param name="format">The format for which to check.
            See <see cref="T:OpenNETCF.Windows.Forms.DataFormats"/> for predefined formats.</param>
            <returns>true if data stored in this instance is associated with, or can be converted to, the specified format; otherwise false.</returns>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.IDataObject.SetData(System.String,System.Object)">
            <summary>
            Stores the specified data in this instance, using the class of the data for the format.
            </summary>
            <param name="format">The format associated with the data.
            See <see cref="T:OpenNETCF.Windows.Forms.DataFormats"/> for predefined formats.</param>
            <param name="data">The data to store.</param>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.DataObject">
            <summary>
            Implements a basic data transfer mechanism.
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.DataObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenNETCF.Windows.Forms.DataObject"/> class, which can store arbitrary data.
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.DataObject.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenNETCF.Windows.Forms.DataObject"/> class, containing the specified data and its associated format.
            </summary>
            <param name="format">The class type associated with the data. See <see cref="T:OpenNETCF.Windows.Forms.DataFormats"/> for the predefined formats.</param>
            <param name="data">The data to store.</param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.DataObject.GetData(System.String)">
            <summary>
            Returns the data associated with the specified data format.
            </summary>
            <param name="format">The format of the data to retrieve. See <see cref="T:OpenNETCF.Windows.Forms.DataFormats"/> for predefined formats.</param>
            <returns>The data associated with the specified format, or null.</returns>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.DataObject.GetDataPresent(System.String)">
            <summary>
            Determines whether data stored in this instance is associated with, or can be converted to, the specified format.
            </summary>
            <param name="format">The format to check for. See <see cref="T:OpenNETCF.Windows.Forms.DataFormats"/> for predefined formats.</param>
            <returns>true if data stored in this instance is associated with, or can be converted to, the specified format; otherwise, false.</returns>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.DataObject.SetData(System.String,System.Object)">
            <summary>
            Stores the specified format and data in this instance.
            </summary>
            <param name="format">The format associated with the data. See <see cref="T:OpenNETCF.Windows.Forms.DataFormats"/> for predefined formats.</param>
            <param name="data">The data to store.</param>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.ColorDialog">
            <summary>
            Represents a common dialog box that displays available colors along with controls that allow the user to define custom colors.
            </summary>
            <remarks>The inherited member <see cref="M:OpenNETCF.Windows.Forms.ColorDialog.ShowDialog(OpenNETCF.Windows.Forms.IWin32Window)"/> must be invoked to create this specific common dialog box.
            Use <see cref="P:OpenNETCF.Windows.Forms.ColorDialog.Color"/> to retrieve the color selected by the user.
            <para>When you create an instance of ColorDialog, some of the read/write properties are set to initial values.
            For a list of these values, see the ColorDialog constructor.</para></remarks>
            <platform><frameworks><compact>true</compact></frameworks></platform>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.ColorDialog.#ctor">
            <summary>
            Initializes a new instance of the <b>ColorDialog</b> class.
            </summary>
            <remarks>When you create an instance of ColorDialog, the following read/write properties are set to initial values.
            <list type="table"><listheader><term>Property</term><term>Initial Value</term></listheader>
            <item><term>AllowFullOpen</term><term>true</term></item> 
            <item><term>Color</term><term>Color.Black</term></item>
            <item><term>CustomColors</term><term>A null reference (Nothing in Visual Basic)</term></item>
            <item><term>FullOpen</term><term>false</term></item></list>
            
            <para>You can change the value for any of these properties through a separate call to the property.</para></remarks>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.ColorDialog.Dispose">
            <summary>
            Free up resources used by the ColorDialog
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.ColorDialog.ShowDialog(OpenNETCF.Windows.Forms.IWin32Window)">
            <summary>
            Runs a common dialog box with the specified owner.
            </summary>
            <param name="owner">Any object that implements <see cref="T:OpenNETCF.Windows.Forms.IWin32Window"/> that represents the top-level window that will own the modal dialog box.</param>
            <returns><see cref="T:System.Windows.Forms.DialogResult">DialogResult.OK</see> if the user clicks <b>OK</b> in the dialog box; otherwise, <see cref="T:System.Windows.Forms.DialogResult">DialogResult.Cancel</see>.</returns>
            <remarks>This version of the ShowDialog method allows you to specify a specific form or control that will own the dialog box that is shown.</remarks>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.ColorDialog.ShowDialog">
            <summary>
            Runs a common dialog box.
            </summary>
            <returns>DialogResult.OK if the user clicks <b>OK</b> in the dialog box; otherwise, DialogResult.Cancel.</returns>
            <example>The following example uses the ColorDialog and illustrates creating and showing a dialog box.
            This example assumes that the method is called from within an existing form, that has a TextBox and Button placed on it.
            <para>Note:   This example shows how to use one of the overloaded versions of ShowDialog.
            For other examples that might be available, see the individual overload topics.</para>
            <code>[VB]
            Protected Sub button1_Click(sender As Object, e As System.EventArgs)
            	Dim MyDialog As New ColorDialog()
            	' Keeps the user from selecting a custom color.
            	MyDialog.AllowFullOpen = False
            	' Sets the initial color select to the current text color,
            	MyDialog.Color = textBox1.ForeColor
            	' Update the text box color if the user clicks OK 
            	If (MyDialog.ShowDialog() = DialogResult.OK) Then
            		textBox1.ForeColor =  MyDialog.Color
            End Sub</code>
            <code>[C#]
            protected void button1_Click(object sender, System.EventArgs e)
            {
            	ColorDialog MyDialog = new ColorDialog();
            	// Keeps the user from selecting a custom color.
            	MyDialog.AllowFullOpen = false ;
            	// Sets the initial color select to the current text color.
            	MyDialog.Color = textBox1.ForeColor ;
            	// Update the text box color if the user clicks OK 
            	if (MyDialog.ShowDialog() == DialogResult.OK)
            		textBox1.ForeColor =  MyDialog.Color;
            }
            </code></example>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.ColorDialog.RunDialog(System.IntPtr)">
            <summary>
            Specifies a common dialog box.
            </summary>
            <param name="hwndOwner">A value that represents the window handle of the owner window for the common dialog box.</param>
            <returns>true if the dialog box was successfully run; otherwise, false.</returns>
            <remarks>This method is invoked when the user of a common dialog box calls <see cref="M:OpenNETCF.Windows.Forms.ColorDialog.ShowDialog(OpenNETCF.Windows.Forms.IWin32Window)"/>.</remarks>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ColorDialog.AllowFullOpen">
             <summary>
             Gets or sets a value indicating whether the user can use the dialog box to define custom colors.
             </summary>
             <value>true if the user can define custom colors; otherwise, false. The default is true</value>
             <remarks>When set to false, the associated button in the dialog box is disabled and the user cannot access the custom colors control in the dialog box.
             Windows CE supports the button, Pocket PC does not and this property has no effect.</remarks>
             <example>[Visual Basic, C#] The following example illustrates the creation of new ColorDialog.
             This example assumes that the method is called from within an existing form, that has a TextBox and Button placed on it.
             <code>[Visual Basic] 
             Protected Sub button1_Click(sender As Object, e As System.EventArgs)
            			Dim MyDialog As New ColorDialog()
            			' Keeps the user from selecting a custom color.
            			MyDialog.AllowFullOpen = False
            			' Sets the initial color select to the current text color,
            			MyDialog.Color = textBox1.ForeColor
            			
            			' Update the text box color if the user clicks OK 
            			If (MyDialog.ShowDialog() = DialogResult.OK) Then
            					textBox1.ForeColor =  MyDialog.Color
            			End If
            
            	End Sub 'button1_Click</code>
            	<code>[C#] 
            protected void button1_Click(object sender, System.EventArgs e)
            {
            		ColorDialog MyDialog = new ColorDialog();
            		// Keeps the user from selecting a custom color.
            		MyDialog.AllowFullOpen = false ;
            		// Sets the initial color select to the current text color.
            		MyDialog.Color = textBox1.ForeColor ;
            
            		// Update the text box color if the user clicks OK 
            		if (MyDialog.ShowDialog() == DialogResult.OK)
            			textBox1.ForeColor =  MyDialog.Color;
            }</code>
            </example>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ColorDialog.AnyColor">
            <summary>
            Gets or sets a value indicating whether the dialog box displays all available colors in the set of basic colors.
            </summary>
            <value>true if the dialog box displays all available colors in the set of basic colors; otherwise, false.
            The default value is false.</value>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ColorDialog.Color">
             <summary>
             Gets or sets the color selected by the user.
             </summary>
             <value>The color selected by the user.
             If a color is not selected, the default value is black.</value>
             <remarks>The color selected by the user in the dialog box at run time, as defined in <see cref="T:System.Drawing.Color"/> structure</remarks>
             <example>[Visual Basic, C#] The following example illustrates the creation of new ColorDialog.
             This example assumes that the method is called from within an existing form, that has a TextBox and Button placed on it.
             <code>[Visual Basic] 
             Protected Sub button1_Click(sender As Object, e As System.EventArgs)
            			Dim MyDialog As New ColorDialog()
            			' Keeps the user from selecting a custom color.
            			MyDialog.AllowFullOpen = False
            			' Sets the initial color select to the current text color,
            			MyDialog.Color = textBox1.ForeColor
            			
            			' Update the text box color if the user clicks OK 
            			If (MyDialog.ShowDialog() = DialogResult.OK) Then
            					textBox1.ForeColor =  MyDialog.Color
            			End If
            
            	End Sub 'button1_Click</code>
            	<code>[C#] 
            protected void button1_Click(object sender, System.EventArgs e)
            {
            		ColorDialog MyDialog = new ColorDialog();
            		// Keeps the user from selecting a custom color.
            		MyDialog.AllowFullOpen = false ;
            		// Sets the initial color select to the current text color.
            		MyDialog.Color = textBox1.ForeColor ;
            
            		// Update the text box color if the user clicks OK 
            		if (MyDialog.ShowDialog() == DialogResult.OK)
            			textBox1.ForeColor =  MyDialog.Color;
            }</code>
            </example>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ColorDialog.CustomColors">
            <summary>
            Gets or sets the set of custom colors shown in the dialog box.
            </summary>
            <value>A set of custom colors shown by the dialog box.
            The default value is a null reference (Nothing in Visual Basic).</value>
            <remarks>Users can create their own set of custom colors.
            These colors are contained in an Int32 composed of the ARGB component (alpha, red, green, and blue) values necessary to create the color.
            For more information on the structure of this data, see <see cref="T:System.Drawing.Color"/>.
            Custom colors can only be defined if <see cref="P:OpenNETCF.Windows.Forms.ColorDialog.AllowFullOpen"/> is set to true (Not supported on Pocket PC).</remarks>
            <example>[Visual Basic, C#] The following example shows how to add an array of type Int32 representing custom colors to CustomColors.
            This example assumes that the code is run from within a Form.
            <code>[Visual Basic] 
            Dim MyDialog = New ColorDialog()
            'Allows the user to select or edit a custom color.
            MyDialog.AllowFullOpen = True
            'Assigns an array of custom colors to the CustomColors property.
            MyDialog.CustomColors = New Integer() {6916092, 15195440, 16107657, 1836924, _
            	3758726, 12566463, 7526079, 7405793, 6945974, 241502, 2296476, 5130294, _
            	3102017, 7324121, 14993507, 11730944}
            'Sets the initial color select to the current text color,
            'so that if the user cancels out, the original color is restored.
            MyDialog.Color = Me.BackColor
            MyDialog.ShowDialog()
            Me.BackColor = MyDialog.Color</code>
            <code>[C#] 
            System.Windows.Forms.ColorDialog MyDialog = new ColorDialog();
            // Allows the user to select or edit a custom color.
            MyDialog.AllowFullOpen = true ;
            // Assigns an array of custom colors to the CustomColors property
            MyDialog.CustomColors = new int[] {6916092, 15195440, 16107657, 1836924,
            	3758726, 12566463, 7526079, 7405793, 6945974, 241502, 2296476, 5130294,
            	3102017, 7324121, 14993507, 11730944,};
            // Sets the initial color select to the current text color,
            // so that if the user cancels out, the original color is restored.
            MyDialog.Color = this.BackColor;
            MyDialog.ShowDialog();
            this.BackColor =  MyDialog.Color;</code>
            </example>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ColorDialog.FullOpen">
            <summary>
            Gets or sets a value indicating whether the controls used to create custom colors are visible when the dialog box is opened.
            </summary>
            <value>true if the custom color controls are available when the dialog box is opened; otherwise, false.
            The default value is false.</value>
            <remarks>By default, the custom color controls are not visible when the dialog box is first opened.
            You must click the Custom Colors button to display them.
            <para>Note   If <see cref="P:OpenNETCF.Windows.Forms.ColorDialog.AllowFullOpen"/> is false, then <b>FullOpen</b> has no effect.</para></remarks>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ColorDialog.SolidColorOnly">
            <summary>
            Gets or sets a value indicating whether the dialog box will restrict users to selecting solid colors only.
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.ComboBoxEx">
            <summary>
            Extended ComboBox control.
            <para><b>New in v1.3</b></para>
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.ComboBoxEx.BeginUpdate">
            <summary>
            Maintains performance when items are added to the <see cref="T:OpenNETCF.Windows.Forms.ComboBoxEx"/> one at a time.
            <para><b>New in v1.3</b></para>
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.ComboBoxEx.EndUpdate">
            <summary>
            Resumes painting the <see cref="T:OpenNETCF.Windows.Forms.ComboBoxEx"/> control after painting is suspended by the <see cref="M:OpenNETCF.Windows.Forms.ComboBoxEx.BeginUpdate"/> method.
            <para><b>New in v1.3</b></para>
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.ComboBoxEx.FindString(System.String)">
            <summary>
            Finds the first item in the combo box that starts with the specified string.
            <para><b>New in v1.3</b></para>
            </summary>
            <param name="s">The <see cref="T:System.String"/> to search for.</param>
            <returns>The zero-based index of the first item found; returns -1 if no match is found.</returns>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.ComboBoxEx.FindString(System.String,System.Int32)">
            <summary>
            Finds the first item in the combo box that starts with the specified string.
            <para><b>New in v1.3</b></para>
            </summary>
            <param name="s">The <see cref="T:System.String"/> to search for.</param>
            <param name="startIndex">The zero-based index of the item before the first item to be searched. Set to -1 to search from the beginning of the control.</param>
            <returns>The zero-based index of the first item found; returns -1 if no match is found.</returns>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.ComboBoxEx.FindStringExact(System.String)">
            <summary>
            Finds the first item in the combo box that matches the specified string.
            <para><b>New in v1.3</b></para>
            </summary>
            <param name="s">The <see cref="T:System.String"/> to search for.</param>
            <returns>The zero-based index of the first item found; returns -1 if no match is found.</returns>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.ComboBoxEx.FindStringExact(System.String,System.Int32)">
            <summary>
            Finds the first item after the specified index that matches the specified string.
            <para><b>New in v1.3</b></para>
            </summary>
            <param name="s">The <see cref="T:System.String"/> to search for.</param>
            <param name="startIndex">The zero-based index of the item before the first item to be searched. Set to -1 to search from the beginning of the control.</param>
            <returns>The zero-based index of the first item found; returns -1 if no match is found.</returns>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ComboBoxEx.DropDownWidth">
            <summary>
            Gets or sets the width of the of the drop-down portion of a combo box.
            <para><b>New in v1.3</b></para>
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ComboBoxEx.DroppedDown">
            <summary>
            Gets a value indicating whether the combo box is displaying its drop-down portion.
            <para><b>New in v1.3</b></para>
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ComboBoxEx.Handle">
            <summary>
            Gets the window handle that the control is bound to.
            <para><b>New in v1.3</b></para>
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ComboBoxEx.Name">
            <summary>
            Gets the name of the control.  
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ComboBoxEx.SelectedIndex">
            <summary>
            Get or Set the selected index in collection.
            <para><b>New in v1.3</b></para>
            </summary>
            <remarks>Overridden to overcome issue with setting value to -1 (http://support.microsoft.com/default.aspx?scid=kb;en-us;327244)</remarks>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ComboBoxEx.Tag">
            <summary>
            Gets or sets the object that contains data about the control.
            <para><b>New in v1.3</b></para>
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.ControlEx">
            <summary>
            Extends the standard <see cref="T:System.Windows.Forms.Control"/> class.
            <para><b>New in v1.3</b></para>
            </summary>
            <seealso cref="T:System.Windows.Forms.Control"/>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.ControlEx.#ctor(System.Boolean)">
            <summary>
            Creates a new ControlEx object.
            </summary>
            <param name="native">If true initialises members for hosting a native control.</param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.ControlEx.CreateControl">
            <summary>
            Forces the creation of the control, including the creation of the handle and any child controls.
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.ControlEx.OnGotFocus(System.EventArgs)">
            <summary>
            Passes the focus to a hosted native control, or does the default behaviour.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.ControlEx.OnParentChanged(System.EventArgs)">
            <summary>
            Occurs when the control is associated with a new Parent.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.ControlEx.OnResize(System.EventArgs)">
            <summary>
            Handles changes in the controls size.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.ControlEx.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the bounds of the control to the specified location and size.
            </summary>
            <param name="x">The new <see cref="P:System.Windows.Forms.Control.Left"/> property value of the control.</param>
            <param name="y">The new <see cref="P:System.Windows.Forms.Control.Top"/> property value of the control.</param>
            <param name="width">The new <see cref="P:System.Windows.Forms.Control.Width"/> property value of the control.</param>
            <param name="height"> The new <see cref="P:System.Windows.Forms.Control.Height"/> property value of the control.</param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.ControlEx.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:OpenNETCF.Windows.Forms.ControlEx"/> and its child controls and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.ControlEx.GetHandle(System.Windows.Forms.Control)">
            <summary>
            Return the native window handle for a control.
            </summary>
            <param name="c"></param>
            <returns>HWnd of selected control or IntPtr.Zero on failure.</returns>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.ControlEx.GetControlByName(System.Windows.Forms.Control,System.String)">
            <summary>
            Gets the control on the specified Form or container with the supplied name.
            </summary>
            <param name="parent">Parent control, e.g. Form</param>
            <param name="name">Control name.</param>
            <returns>Control or null (Nothing in VB) on failure.</returns>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.ControlEx.GetName(System.Windows.Forms.Control)">
            <summary>
            Returns the name of the control specified.
            </summary>
            <param name="control">Control.</param>
            <returns>Name as defined when control was created.</returns>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ControlEx.BorderStyle">
            <summary>
            Gets or sets the border style for the control.
            </summary>
            <value>One of the <see cref="P:OpenNETCF.Windows.Forms.ControlEx.BorderStyle"/> values.
            Fixed3D is interpreted the same as FixedSingle.</value>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ControlEx.ChildHandle">
            <summary>
            Window Handle of child native control (if present)
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ControlEx.Created">
            <summary>
            Gets a value indicating whether the control has been created.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ControlEx.CreateParams">
            <summary>
            Gets the required creation parameters when the control handle is created.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ControlEx.Handle">
            <summary>
            Gets the window handle that the control is bound to.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ControlEx.Instance">
            <summary>
            Returns the native instance handle of the calling process.
            </summary>
            <remarks>Required for creating some native controls.</remarks>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ControlEx.Name">
            <summary>
            Gets the name of the control.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ControlEx.RecreatingHandle">
            <summary>
            Gets a value indicating whether the control is currently re-creating its handle.
            </summary>
            <remarks>true if the control is currently re-creating its handle; otherwise, false.</remarks>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ControlEx.Tag">
            <summary>
            Gets or sets the object that contains data about the control.
            </summary>
            <value>An <see cref="T:System.Object"/> that contains data about the control.
            The default is null.</value>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.CreateParams">
            <summary>
            Encapsulates the information needed when creating a control.
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.CreateParams.#ctor">
            <summary>
            Initializes a new instance of the CreateParams class.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.CreateParams.Caption">
            <summary>
            Gets or sets the control's initial text.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.CreateParams.ClassName">
            <summary>
            Gets or sets the name of the Windows class to derive the control from.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.CreateParams.ClassStyle">
            <summary>
            Gets or sets a bitwise combination of class style values.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.CreateParams.ExStyle">
            <summary>
            Gets or sets a bitwise combination of extended window style values.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.CreateParams.Height">
            <summary>
            Gets or sets the initial height of the control.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.CreateParams.Parent">
            <summary>
            Gets or sets the control's parent.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.CreateParams.Width">
            <summary>
            Gets or sets the initial width of the control.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.CreateParams.X">
            <summary>
            Gets or sets the initial left position of the control.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.CreateParams.Y">
            <summary>
            Gets or sets the initial top position of the control.
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.DateRangeEventArgs">
            <summary>
            Provides data for the <see cref="E:OpenNETCF.Windows.Forms.MonthCalendar.DateChanged"/> or <see cref="E:OpenNETCF.Windows.Forms.MonthCalendar.DateSelected"/> events of the <see cref="T:OpenNETCF.Windows.Forms.MonthCalendar"/> control.
            <para><b>New in v1.1</b></para>
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.DateRangeEventArgs.#ctor(System.DateTime,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenNETCF.Windows.Forms.DateRangeEventArgs"/> class.
            </summary>
            <param name="start">The first date/time value in the range that the user has selected.</param>
            <param name="end">The last date/time value in the range that the user has selected.</param>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.DateRangeEventArgs.Start">
            <summary>
            Gets the first date/time value in the range that the user has selected.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.DateRangeEventArgs.End">
            <summary>
            Gets the last date/time value in the range that the user has selected.
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.DateRangeEventHandler">
            <summary>
            Provides data for the <see cref="E:OpenNETCF.Windows.Forms.MonthCalendar.DateChanged"/> or <see cref="E:OpenNETCF.Windows.Forms.MonthCalendar.DateSelected"/> events of the <see cref="T:OpenNETCF.Windows.Forms.MonthCalendar"/> control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:OpenNETCF.Windows.Forms.DateRangeEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.DateTimePicker">
            <summary>
            Represents a Windows date/time picker control.
            <para><b>Revised in v1.3</b></para>
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.DateTimePicker.SetDTPStyle">
            <summary>
            Sets the current style of the DateTimePicker with all the values specified in this wrapper.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.DateTimePicker.MaxDateTime">
            <summary>
            Specifies the maximum date value of the date/time picker control.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.DateTimePicker.MinDateTime">
            <summary>
            Specifies the minimum date value of the date/time picker control.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.DateTimePicker.Value">
            <summary>
            Gets or sets the date/time value assigned to the control.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.DateTimePicker.MinDate">
            <summary>
            Gets or sets the minimum date and time that can be selected in the control.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.DateTimePicker.MaxDate">
            <summary>
            Gets or sets the maximum date and time that can be selected in the control.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.DateTimePicker.CustomFormat">
            <summary>
            Gets or sets the custom date/time format string.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.DateTimePicker.ShowCheckBox">
            <summary>
            Determines whether a check box is displayed in the control.  
            When the check box is unchecked, no value is selected.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.DateTimePicker.ShowUpDown">
            <summary>
            Controls whether an up-Down(spin) button is used to modify dates instead of a drop-down calendar.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.DateTimePicker.Format">
            <summary>
            Gets or sets the format of the date and time displayed in the control.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.DateTimePicker.CalendarForeColor">
            <summary>
            The color used to display text within a month.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.DateTimePicker.CalendarMonthBackground">
            <summary>
            The background color displayed within the month.
            This is not supported in Windows CE?
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.DateTimePicker.CalendarTitleBackColor">
            <summary>
            The background color displayed in the calendar's title.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.DateTimePicker.CalendarTitleForeColor">
            <summary>
            The color used to display text within the calendar's title.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.DateTimePicker.CalendarTrailingForeColor">
            <summary>
            The color used to display the header and trailing day text.
            Header and trailing days are the days from the previous and following months that appear on the current month calendar.
            </summary>
        </member>
        <member name="E:OpenNETCF.Windows.Forms.DateTimePicker.ValueChanged">
            <summary>
            Occurs when the S<see cref="P:OpenNETCF.Windows.Forms.DateTimePicker.Value"/> property changes.
            </summary>
        </member>
        <member name="E:OpenNETCF.Windows.Forms.DateTimePicker.DropDown">
            <summary>
            Occurs when the drop-down calendar is shown.
            </summary>
        </member>
        <member name="E:OpenNETCF.Windows.Forms.DateTimePicker.CloseUp">
            <summary>
            Occurs when the drop-down calendar is dismissed and disappears.
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.DateTimePickerFormat">
            <summary>
            Specifies the date and time format the <see cref="T:OpenNETCF.Windows.Forms.DateTimePicker"/> control displays.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.DateTimePickerFormat.Time">
            <summary>
            The <see cref="T:OpenNETCF.Windows.Forms.DateTimePicker"/> control displays the date/time value in the time format set by the user's operating system. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.DateTimePickerFormat.Short">
            <summary>
            The <see cref="T:OpenNETCF.Windows.Forms.DateTimePicker"/> control displays the date/time value in the short date format set by the user's operating system.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.DateTimePickerFormat.Long">
            <summary>
            The <see cref="T:OpenNETCF.Windows.Forms.DateTimePicker"/> control displays the date/time value in the long date format set by the user's operating system.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.DateTimePickerFormat.Custom">
            <summary>
            The <see cref="T:OpenNETCF.Windows.Forms.DateTimePicker"/> control displays the date/time value in a custom format.
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.Day">
            <summary>
            Specifies the day of the week.
            <para><b>New in v1.1</b></para>
            </summary>
            <seealso cref="!:System.Windows.Forms.Day"/>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.Day.Default">
            <summary>
            A default day of the week specified by the application.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.Day.Monday">
            <summary>
            The day Monday.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.Day.Tuesday">
            <summary>
            The day Tuesday.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.Day.Wednesday">
            <summary>
            The day Wednesday.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.Day.Thursday">
            <summary>
            The day Thursday.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.Day.Friday">
            <summary>
            The day Friday.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.Day.Saturday">
            <summary>
            The day Saturday.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.Day.Sunday">
            <summary>
            The day Sunday.
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.GroupBox">
            <summary>
            Represents a Windows group box.
            </summary>
            <remarks>The <b>GroupBox</b> displays a frame around a group of controls with or without a caption.
            Use a <b>GroupBox</b> to logically group a collection of controls on a form.
            The group box is a container control that can be used to define groups of controls.</remarks>
            <seealso cref="T:System.Windows.Forms.GroupBox">System.Windows.Forms.GroupBox Control</seealso>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.GroupBox.#ctor">
            <summary>
            Initializes a new instance of the <b>GroupBox</b> class.
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.GroupBox.Finalize">
            <summary>
            Destroys this instance of the GroupBox class.
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.GroupBox.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the Paint event.
            </summary>
            <param name="e">A PaintEventArgs that contains the event data.</param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.GroupBox.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the background of the control. Overriden to prevent flicker.
            </summary>
            <param name="e">A PaintEventArgs that contains information about the control to paint.</param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.GroupBox.OnResize(System.EventArgs)">
            <summary>
            Raises the Resize event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.GroupBox.OnTextChanged(System.EventArgs)">
            <summary>
            Raises the TextChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.GroupBox.BorderStyle">
            <summary>
            Gets or sets the border style for the control.
            </summary>
            <value>One of the <see cref="T:System.Windows.Forms.BorderStyle"/> values.
            The default is BorderStyle.FixedSingle.</value>
            <remarks>On CE.NET devices where the intrinisic controls are rendered with a 3D look, you should use BorderStyle.Fixed3D.
            For Pocket PC and similar where a flat UI is used use the default BorderStyle.FixedSingle value.
            BorderStyle.None will not draw a border around the group. If you are not using the Text property you should consider using the <see cref="T:System.Windows.Forms.Panel"/> control instead.</remarks>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.GroupBox.ForeColor">
            <summary>
            Gets or sets the foreground color of the control.
            </summary>
            <value>The foreground <see cref="T:System.Drawing.Color"/> of the control. The default is the value of the DefaultForeColor property.</value>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.GroupBox.Handle">
            <summary>
            Gets the window handle that the control is bound to.
            </summary>
            <value>An <see cref="T:System.IntPtr"/> that contains the window handle (HWND) of the control.</value>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.GroupBox.Tag">
            <summary>
            Gets or sets the object that contains data about the control.
            <para><b>New in v1.3</b></para>
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.GroupBox.Name">
            <summary>
            Gets the name of the control.
            <para><b>New in v1.3</b></para>
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.Help">
            <summary>
            Encapsulates the PegHelp HTML Help engine.
            </summary>
            <remarks>You cannot create a new instance of the Help class.
            To provide Help to an application, call the static ShowHelp method.</remarks>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.Help.ShowHelp(System.Windows.Forms.Control,System.String)">
            <summary>
            Displays the contents of the Help file at the specified URL.
            </summary>
            <param name="parent">A <see cref="T:System.Windows.Forms.Control"/> that identifies the parent of the Help dialog box.</param>
            <param name="url">The path and name of the Help file.</param>
            <example>The following code example demonstrates the ShowHelp method.
            To run this example paste the following code in a form that contains a button named Button1.
            Ensure the button's click event is connected to the event-handling method in this example.
            <code>[Visual Basic] 
            ' Open the Help file for the application.  
            Private Sub Button1_Click(ByVal sender As System.Object, _
            	ByVal e As System.EventArgs) Handles Button1.Click
            	
            	Help.ShowHelp(TextBox1, "\windows\myapp.htm")
            End Sub</code>
            <code>[C#]
            // Open the Help file for the application.  
            private void Button1_Click(System.Object sender, System.EventArgs e)
            {
            	Help.ShowHelp(TextBox1, "\\windows\\myapp.htm");
            }</code></example>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.Help.ShowHelp(System.Windows.Forms.Control,System.String,OpenNETCF.Windows.Forms.HelpNavigator)">
            <summary>
            Displays the contents of the Help file found at the specified URL for a specific topic.
            </summary>
            <param name="parent">A <see cref="T:System.Windows.Forms.Control"/> that identifies the parent of the Help dialog box.</param>
            <param name="url">The path and name of the Help file.</param>
            <param name="navigator">One of the <see cref="T:OpenNETCF.Windows.Forms.HelpNavigator"/> values.</param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.Help.ShowHelp(System.Windows.Forms.Control,System.String,System.String)">
            <summary>
            Displays the contents of the Help file found at the specified URL for a specific topic.
            </summary>
            <param name="parent">A <see cref="T:System.Windows.Forms.Control"/> that identifies the parent of the Help dialog box.</param>
            <param name="url">The path and name of the Help file.</param>
            <param name="topic">The topic to display Help for.</param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.Help.ShowHelp(System.Windows.Forms.Control,System.String,OpenNETCF.Windows.Forms.HelpNavigator,System.String)">
            <summary>
            Displays the contents of the Help file located at the URL supplied.
            </summary>
            <param name="parent">A <see cref="T:System.Windows.Forms.Control"/> that identifies the parent of the Help dialog box.</param>
            <param name="url">The path and name of the Help file.</param>
            <param name="command">One of the <see cref="T:OpenNETCF.Windows.Forms.HelpNavigator"/> values.</param>
            <param name="param">The anchor name of the topic to display</param>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.HelpNavigator">
            <summary>
            Specifies constants indicating which elements of the Help file to display.
            </summary>
            <seealso cref="T:System.Windows.Forms.HelpNavigator">System.Windows.Forms.HelpNavigator Enum</seealso>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.HelpNavigator.Find">
            <summary>
            Specifies that the search page of a specified URL is displayed.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.HelpNavigator.TableOfContents">
            <summary>
            Specifies that the table of contents of the specfied URL is displayed.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.HelpNavigator.Topic">
            <summary>
            Specifies that the topic referenced by the specified URL is displayed.
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.IMessageFilter">
            <summary>
            Defines a message filter interface.
            </summary>
            <remarks>This interface allows an application to capture a message before it is dispatched to a control or form.
            <para>A class that implements the IMessageFilter interface can be added to the application's message pump to filter out a message or perform other operations before the message is dispatched to a form or control. To add the message filter to an application's message pump, use the <see cref="M:OpenNETCF.Windows.Forms.ApplicationEx.AddMessageFilter(OpenNETCF.Windows.Forms.IMessageFilter)"/> method in the <see cref="T:OpenNETCF.Windows.Forms.ApplicationEx"/> class.</para></remarks>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.IMessageFilter.PreFilterMessage(OpenNETCF.Windows.Forms.Message@)">
            <summary>
            Filters out a message before it is dispatched.
            </summary>
            <param name="m">The message to be dispatched. You cannot modify this message.</param>
            <returns>true to filter the message and stop it from being dispatched; false to allow the message to continue to the next filter or control.</returns>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.Message">
            <summary>
            Implements a Windows message.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.Message.HWnd">
            <summary>
            Gets or sets the window handle of the message.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.Message.Msg">
            <summary>
            Gets or sets the ID number for the message.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.Message.WParam">
            <summary>
            Gets or sets the WParam field of the message.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.Message.LParam">
            <summary>
            Specifies the LParam field of the message.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.Message.Result">
            <summary>
            Specifies the value that is returned to Windows in response to handling the message.
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.LampPosition">
            <summary>
            Position of Lamp relative to RoundGauge.
            <para><b>New in v1.1</b></para>
            <seealso cref="T:OpenNETCF.Windows.Forms.Lamp"/>
            <seealso cref="T:OpenNETCF.Windows.Forms.RoundGauge"/>
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.LampPosition.UpperLeft">
            <summary>
            Upper Left
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.LampPosition.UpperRight">
            <summary>
            Upper Right
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.LampPosition.LowerLeft">
            <summary>
            Lower Left
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.LampPosition.LowerRight">
            <summary>
            Lower Right
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.Lamp">
            <summary>
            Indicator Lamp class
            <para><b>New in v1.1</b></para>
            </summary>
            <seealso cref="T:OpenNETCF.Windows.Forms.RoundGauge"/>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.Lamp.#ctor">
            <summary>
            Lamp constructor
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.Lamp.Visible">
            <summary>
            Sets whether the lamp is Visible or not
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.Lamp.Position">
            <summary>
            The position of the lamp relative to its parent RoundGauge
            <seealso cref="T:OpenNETCF.Windows.Forms.RoundGauge"/>
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.Lamp.State">
            <summary>
            The state (on or off) of the Lamp
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.Lamp.OnColor">
            <summary>
            The lamp's color when its State is <b>true</b>
            <seealso cref="P:OpenNETCF.Windows.Forms.Lamp.State"/>
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.Lamp.OffColor">
            <summary>
            The lamp's color when its State is <b>false</b>
            <seealso cref="P:OpenNETCF.Windows.Forms.Lamp.State"/>
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.Lamp.BezelColor">
            <summary>
            The border (bezel) color of the lamp
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.Lamp.BezelWidth">
            <summary>
            The border (bezel) width of the lamp
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.Lamps">
            <summary>
            A Collection of Lamp classes
            <para><b>New in v1.1</b></para>
            </summary>
            <seealso cref="T:OpenNETCF.Windows.Forms.Lamp"/>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.Lamps.Add(OpenNETCF.Windows.Forms.Lamp)">
            <summary>
            Adds a Lamp to the collection
            <seealso cref="T:OpenNETCF.Windows.Forms.Lamp"/>
            </summary>
            <param name="newLamp"></param>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.Lamps.Item(System.Int32)">
            <summary>
            Retrieves the Lamp at a specific <b>index</b>
            <seealso cref="T:OpenNETCF.Windows.Forms.Lamp"/>
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.LinkBehavior">
            <summary>
            Specifies the behavior of a link in a <see cref="T:OpenNETCF.Windows.Forms.LinkLabel"/>.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.LinkBehavior.AlwaysUnderline">
            <summary>
            The link always displays with underlined text.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.LinkBehavior.NeverUnderline">
            <summary>
            The link text is never underlined. The link can still be distinguished from other text by use of the LinkColor property of the LinkLabel control.
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.LinkLabelLinkClickedEventArgs">
            <summary>
            Provides data for the OnLinkClicked event.
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.LinkLabelLinkClickedEventArgs.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the LinkLabelLinkClickedEventArgs class, given the link data.
            </summary>
            <param name="linkData">The LinkData of the LinkLabel instance.</param>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.LinkLabelLinkClickedEventArgs.LinkData">
            <summary>
            Gets the data associated with the link.
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.LinkLabelLinkClickedEventHandler">
            <summary>
            Represents the method that will handle the LinkClicked event of a LinkLabel.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A LinkLabelLinkClickedEventArgs that contains the event data.</param>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.LinkLabel">
            <summary>
            Represents a Windows label control that can display hyperlinks.
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.LinkLabel.#ctor">
            <summary>
            Initializes a new default instance of the LinkLabel class.
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.LinkLabel.OnEnabledChanged(System.EventArgs)">
            <summary>
            Raises the EnabledChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.LinkLabel.OnTextChanged(System.EventArgs)">
            <summary>
            Raises the TextChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.LinkLabel.OnResize(System.EventArgs)">
            <summary>
            Raises the Resize event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.LinkLabel.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the background of the control.
            </summary>
            <param name="e">A PaintEventArgs that contains information about the control to paint.</param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.LinkLabel.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the Paint event.
            </summary>
            <param name="e">A PaintEventArgs that contains the event data.</param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.LinkLabel.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseDown event.
            </summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.LinkLabel.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseUp event.
            </summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.LinkLabel.OnClick(System.EventArgs)">
            <summary>
            Raises the Click event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.LinkLabel.OnLinkClicked(OpenNETCF.Windows.Forms.LinkLabelLinkClickedEventArgs)">
            <summary>
            Raises the LinkClicked event.
            </summary>
            <param name="e">A LinkLabelLinkClickedEventArgs that contains the event data.</param>
        </member>
        <member name="E:OpenNETCF.Windows.Forms.LinkLabel.LinkClicked">
            <summary>
            Occurs when a link is clicked within the control.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.LinkLabel.AutoSize">
            <summary>
            Gets or sets a value indicating whether the control is automatically resized to display its entire contents.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.LinkLabel.BackColor">
            <summary>
            Gets or sets the background color for the control.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.LinkLabel.Font">
            <summary>
            Gets or sets the font of the text displayed by the control.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.LinkLabel.ActiveLinkColor">
            <summary>
            Gets or sets the color used to display an active link.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.LinkLabel.LinkColor">
            <summary>
            Gets or sets the color used when displaying a normal link.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.LinkLabel.DisabledLinkColor">
            <summary>
            Gets or sets the color used when displaying a disabled link.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.LinkLabel.VisitedLinkColor">
            <summary>
            Gets or sets the color used when displaying a link that that has been previously visited.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.LinkLabel.LinkBehavior">
            <summary>
            Gets or sets a value that represents the behavior of a link.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.LinkLabel.LinkData">
            <summary>
            Gets or sets the data associated with the link.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.LinkLabel.LinkVisited">
            <summary>
            Gets or sets a value indicating whether a link should be displayed as though it were visited.
            </summary>
            <remarks>
            A LinkLabel control does not automatically denote that a link is a visited link. 
            To display the link as a visited link, you can set the value of this property to true 
            in an event handler for the LinkClicked event of a LinkLabel.
            </remarks>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.LinkLabel.Handle">
            <summary>
            Gets the window handle that the control is bound to.
            </summary>
            <value>An IntPtr that contains the window handle (HWND) of the control.</value>
            <remarks>The value of the Handle property is a Windows HWND.</remarks>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.ListBoxEx">
            <summary>
            Initializes a new instance of the ListBoxEx class with default values.
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.OwnerDrawnList">
            <summary>
            Summary description for OwnerDrawnList.
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.OwnerDrawnList.#ctor">
            <summary>
            Initializes a new instance of the OwnerDrawnList class with default values.
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.OwnerDrawnList.EnsureVisible(System.Int32)">
            <summary>
            Ensures that the specified item is visible within the control, scrolling the contents of the control if necessary.  
            </summary>
            <param name="index">The zero-based index of the item to scroll into view.</param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.OwnerDrawnList.OnSelectedIndexChanged(System.EventArgs)">
            <summary>
            Raises the SelectedIndexChanged event.  
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.OwnerDrawnList.OnDrawItem(System.Object,OpenNETCF.Windows.Forms.DrawItemEventArgs)">
            <summary>
            Raises the DrawItem event.  
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.OwnerDrawnList.RefreshItems">
            <summary>
            Forces the control to invalidate its client area and immediately redraw itself and any items in the list.   
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.OwnerDrawnList.BeginUpdate">
            <summary>
            Prevents the control from drawing until the EndUpdate method is called.  
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.OwnerDrawnList.EndUpdate">
            <summary>
            Resumes drawing of the list view control after drawing is suspended by the BeginUpdate method.  
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.OwnerDrawnList.OnDataSourceChanged(System.EventArgs)">
            <summary>
            Raises the ListBoxEx.DataSourceChanged event.  
            </summary>
            <param name="e">The EventArgs that will be passed to any handlers
            of the DataSourceChanged event.</param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.OwnerDrawnList.OnDisplayMemberChanged(System.EventArgs)">
            <summary>
            Raises the DataMemberChanged event.
            </summary>
            <param name="e">The EventArgs that will be passed to any handlers
            of the DataMemberChanged event.</param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.OwnerDrawnList.OnBindingContextChanged(System.EventArgs)">
            <summary>
            Handles binding context changes
            </summary>
            <param name="e">The EventArgs that will be passed to any handlers
            of the BindingContextChanged event.</param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.OwnerDrawnList.BuildItemForRow(System.Object)">
            <summary>
            Adds item to the items collection.
            </summary>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="E:OpenNETCF.Windows.Forms.OwnerDrawnList.DataSourceChanged">
            <summary>
            Raised when the DataSource property changes.
            </summary>
        </member>
        <member name="E:OpenNETCF.Windows.Forms.OwnerDrawnList.DisplayMemberChanged">
             <summary>
             Raised when the DataMember property changes.
            </summary>
        </member>
        <member name="E:OpenNETCF.Windows.Forms.OwnerDrawnList.DrawItem">
            <summary>
            Occurs when the DrawItem has changed
            </summary>
        </member>
        <member name="E:OpenNETCF.Windows.Forms.OwnerDrawnList.SelectedIndexChanged">
            <summary>
            Occurs when the SelectedIndex property has changed.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.OwnerDrawnList.ShowScrollbar">
            <summary>
            Get/set the ShowScrollbar property.  
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.OwnerDrawnList.TopIndex">
            <summary>
            Gets or sets the index of the first visible item in the OwnerDrawnList. 
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.OwnerDrawnList.BaseItems">
            <summary>
            Gets the items of the List.  
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.OwnerDrawnList.ItemHeight">
            <summary>
            Gets or sets a ItemHeight
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.OwnerDrawnList.SelectedIndex">
            <summary>
            Gets or sets the zero-based index of the currently selected item in a OwnerDrawnList.  
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.OwnerDrawnList.BackgroundImage">
            <summary>
            Gets or sets the background image for the control.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.OwnerDrawnList.Height">
            <summary>
            Gets or sets the height of the control.  
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.OwnerDrawnList.DataSource">
            <summary>
            Gets or sets the data source for this ListBoxEx control.  
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.OwnerDrawnList.DisplayMember">
            <summary>
            Gets or sets a string that specifies the property of the data source whose contents you want to display.
            </summary>
            <value>A <see cref="T:System.String"/> specifying the name of a property of the object specified by the <see cref="P:OpenNETCF.Windows.Forms.OwnerDrawnList.DataSource"/> property.
            The default is an empty string ("").</value>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.ListBoxEx.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ListBoxEx.Items">
            <summary>
            Gets the items of the ListBoxEx .
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ListBoxEx.BaseItems">
            <summary>
            Gets a items collection.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ListBoxEx.EvenItemColor">
            <summary>
            Gets or sets the background color of the even item.  
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ListBoxEx.LineColor">
            <summary>
            Gets or sets the color of the lines. 
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ListBoxEx.ShowLines">
            <summary>
            Gets or sets text wrapping in the list items
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ListBoxEx.WrapText">
            <summary>
            Gets or sets text wrapping in the list items
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ListBoxEx.ImageList">
            <summary>
            Gets or sets the System.Windows.Forms.ImageList to use when displaying item's icons in the control.  
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ListBoxEx.ItemHeight">
            <summary>
            Gets or sets the item height
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.ListBoxEx.ItemCollection">
            <summary>
            Represents the collection of items in a ListBoxEx . 
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.ListBoxEx.ItemCollection.Add(OpenNETCF.Windows.Forms.ListItem)">
            <summary>
            Adds an item to the list of items for a ListBoxEx . 
            </summary>
            <param name="value">ListItem to add</param>
            <returns>Newly created ListItem</returns>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.ListBoxEx.ItemCollection.Add(System.String)">
            <summary>
            Adds an item to the list of items for a ListBoxEx . 
            </summary>
            <param name="value">string for text property</param>
            <returns>Newly created ListItem</returns>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.ListBoxEx.ItemCollection.Remove(OpenNETCF.Windows.Forms.ListItem)">
            <summary>
            Removes the specified object from the collection.
            </summary>
            <param name="value">ListItem to remove</param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.ListBoxEx.ItemCollection.Insert(System.Int32,OpenNETCF.Windows.Forms.ListItem)">
            <summary>
            Inserts an item into the list box at the specified index.  
            </summary>
            <param name="index">The zero-based index location where the item is inserted.</param>
            <param name="value">An object representing the item to insert.</param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.ListBoxEx.ItemCollection.Contains(OpenNETCF.Windows.Forms.ListItem)">
            <summary>
            Determines whether the specified item is located within the collection.  
            </summary>
            <param name="value">An object representing the item to locate in the collection.</param>
            <returns>true if the item is located within the collection; otherwise, false .</returns>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.ListBoxEx.ItemCollection.Clear">
            <summary>
            Removes all elements from the System.Collections.ArrayList.  
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.ListBoxEx.ItemCollection.IndexOf(OpenNETCF.Windows.Forms.ListItem)">
            <summary>
            Returns the index within the collection of the specified item
            </summary>
            <param name="value">An object representing the item to locate in the collection.</param>
            <returns>The zero-based index where the item is located within the collection; otherwise, negative one (-1). </returns>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ListBoxEx.ItemCollection.Item(System.Int32)">
            <summary>
            Gets or sets the item.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ListBoxEx.ItemCollection.Item(System.String)">
            <summary>
            Gets the item.
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.ListItem">
            <summary>
            Represents an item in a <see cref="T:OpenNETCF.Windows.Forms.ListBoxEx"/> control.
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.ListItem.#ctor">
            <summary>
            Initializes a new instance of the ListItem class with default values.
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.ListItem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ListItem class with specified item text.
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.ListItem.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the ListItem class with specified item text and ImageIndex.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ListItem.Text">
            <summary>
            Gets or sets the text associated with this item.   
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ListItem.Font">
            <summary>
            Gets or sets the font associated with this item.   
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ListItem.ForeColor">
            <summary>
            Gets or sets the foreground color of the item's text.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ListItem.ImageList">
            <summary>
            Gets the <see cref="P:OpenNETCF.Windows.Forms.ListItem.ImageList"/> that contains the image displayed with the item.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ListItem.ImageIndex">
            <summary>
            Gets or sets the ImageIndex associated with this item.   
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.MonthCalendar">
            <summary>
            Represents a standard Windows month calendar control.
            <para><b>New in v1.1</b></para>
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.MonthCalendar.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenNETCF.Windows.Forms.MonthCalendar"/> class.
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.MonthCalendar.HitTest(System.Int32,System.Int32)">
            <summary>
             Returns <see cref="T:OpenNETCF.Windows.Forms.MonthCalendar.HitTestInfo"/> with information on which portion of a month calendar control is at a specified x and y location.
            </summary>
            <param name="x">The <see cref="P:System.Drawing.Point.X"/> coordinate of the point to be hit-tested.</param>
            <param name="y">The <see cref="P:System.Drawing.Point.Y"/> coordinate of the point to be hit-tested.</param>
            <returns>A System.Windows.Forms.MonthCalendar.HitTestInfo that contains information about the specified point on the <see cref="T:OpenNETCF.Windows.Forms.MonthCalendar"/>.</returns>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.MonthCalendar.HitTest(System.Drawing.Point)">
            <summary>
            Returns an object with information on which portion of a month calendar control is at a location specified by <see cref="T:System.Drawing.Point"/>.
            </summary>
            <param name="point">A <see cref="T:System.Drawing.Point"/> containing the <see cref="P:System.Drawing.Point.X"/> and <see cref="P:System.Drawing.Point.Y"/> coordinates of the point to be hit-tested.</param>
            <returns>A System.Windows.Forms.MonthCalendar.HitTestInfo that contains information about the specified point on the <see cref="T:OpenNETCF.Windows.Forms.MonthCalendar"/>.</returns>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.MonthCalendar.SetDate(System.DateTime)">
            <summary>
            Sets a date as the current selected date.
            </summary>
            <param name="date">The date to be selected.</param>
            <exception cref="T:System.ArgumentException">The value is less than the minimum allowable date.
            -or- The value is greater than the maximum allowable date.</exception>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.MonthCalendar.OnDateSelected(OpenNETCF.Windows.Forms.DateRangeEventArgs)">
            <summary>
            Raises <see cref="E:OpenNETCF.Windows.Forms.MonthCalendar.DateSelected"/> event.
            </summary>
            <param name="drevent">A <see cref="T:OpenNETCF.Windows.Forms.DateRangeEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.MonthCalendar.OnDateChanged(OpenNETCF.Windows.Forms.DateRangeEventArgs)">
            <summary>
            Raises the <see cref="E:OpenNETCF.Windows.Forms.MonthCalendar.DateChanged"/> event.
            </summary>
            <param name="drevent">A <see cref="T:OpenNETCF.Windows.Forms.DateRangeEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.MonthCalendar.OnNoneSelected(System.EventArgs)">
            <summary>
            Raises the <see cref="E:OpenNETCF.Windows.Forms.MonthCalendar.NoneSelected"/> event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.MonthCalendar.BackColor">
            <summary>
            Gets or sets the background color of the control.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.MonthCalendar.ForeColor">
            <summary>
            Gets or sets the foreground color of the control.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.MonthCalendar.TitleBackColor">
            <summary>
            Gets or sets a value indicating the background color of the title area of the calendar.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.MonthCalendar.TitleForeColor">
            <summary>
            Gets or sets a value indicating the foreground color of the title area of the calendar.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.MonthCalendar.TrailingForeColor">
            <summary>
            Gets or sets a value indicating the color of days in months that are not fully displayed in the control.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.MonthCalendar.FirstDayOfWeek">
            <summary>
            Gets or sets the first day of the week as displayed in the month calendar.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.MonthCalendar.MaxDate">
            <summary>
            Gets or sets the maximum allowable date.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.MonthCalendar.MaxSelectionCount">
            <summary>
            Gets or sets the maximum number of days that can be selected in a month calendar control.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.MonthCalendar.MinDate">
            <summary>
            Gets or sets the minimum allowable date.
            </summary>
            <exception cref="T:System.ArgumentException">The date set is greater than the <see cref="P:OpenNETCF.Windows.Forms.MonthCalendar.MaxDate"/>.</exception>
            <exception cref="T:System.ArgumentException">The date set is earlier than 01/01/1753.</exception>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.MonthCalendar.ScrollChange">
            <summary>
            Gets or sets the scroll rate for a month calendar control.  
            </summary>
            <exception cref="T:System.ArgumentException">The value is less than zero.  -or- The value is greater than 20,000.</exception>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.MonthCalendar.SelectionStart">
            <summary>
            Gets or sets the start date of the selected range of dates.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.MonthCalendar.SelectionRange">
            <summary>
            Gets or sets the selected range of dates for a month calendar control.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.MonthCalendar.SelectionEnd">
            <summary>
            Gets or sets the end date of the selected range of dates.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.MonthCalendar.ShowNone">
            <summary>
            Gets or sets whether the None button is displayed
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.MonthCalendar.ShowToday">
            <summary>
            Gets or sets a value indicating whether the date represented by the <see cref="P:OpenNETCF.Windows.Forms.MonthCalendar.TodayDate"/> property is displayed at the bottom of the control.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.MonthCalendar.ShowTodayCircle">
            <summary>
            Gets or sets a value indicating whether today's date is circled.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.MonthCalendar.ShowWeekNumbers">
            <summary>
            Gets or sets a value indicating whether the month calendar control displays week numbers (1-52) to the left of each row of days.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.MonthCalendar.SingleMonthSize">
            <summary>
            Gets the minimum size to display one month of the calendar.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.MonthCalendar.TodayDate">
            <summary>
            Gets or sets the value that is used by <see cref="T:OpenNETCF.Windows.Forms.MonthCalendar"/> as today's date.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.MonthCalendar.AnnuallyBoldedDates">
            <summary>
            Gets or sets the array of <see cref="T:System.DateTime"/> objects that determines which annual days are displayed in bold.
            </summary>
            <value>An array of <see cref="T:System.DateTime"/> objects.</value>
            <remarks>Provided for compatibility only, this property always returns an empty collection.</remarks>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.MonthCalendar.BoldedDates">
            <summary>
            Gets or sets the array of <see cref="T:System.DateTime"/> objects that determines which nonrecurring dates are displayed in bold.
            </summary>
            <value>The array of bolded dates.</value>
            <remarks>Provided for compatibility only, this property always returns an empty collection.</remarks>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.MonthCalendar.MonthlyBoldedDates">
            <summary>
            Gets or sets the array of <see cref="T:System.DateTime"/> objects that determine which monthly days to bold.
            </summary>
            <value>An array of <see cref="T:System.DateTime"/> objects.</value>
            <remarks>Provided for compatibility only, this property always returns an empty collection.</remarks>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.MonthCalendar.CalendarDimensions">
            <summary>
            Gets or sets the number of columns and rows of months displayed.
            </summary>
            <value>A <see cref="T:System.Drawing.Size"/> with the number of columns and rows to use to display the calendar.</value>
            <remarks>Provided for compatibility, in current version this property always returns 1x1.</remarks>
        </member>
        <member name="E:OpenNETCF.Windows.Forms.MonthCalendar.DateSelected">
            <summary>
            Occurs when the user makes an explicit date selection using the mouse.
            </summary>
        </member>
        <member name="E:OpenNETCF.Windows.Forms.MonthCalendar.DateChanged">
            <summary>
            Occurs when the date selected in the <see cref="T:OpenNETCF.Windows.Forms.MonthCalendar"/> changes.
            </summary>
        </member>
        <member name="E:OpenNETCF.Windows.Forms.MonthCalendar.NoneSelected">
            <summary>
            Occurs when the user selects the "None" button (if set).
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.MonthCalendar.HitArea">
            <summary>
            Defines constants that represent areas in an <see cref="T:OpenNETCF.Windows.Forms.MonthCalendar"/> control.
            <para><b>New in v1.1</b></para>
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.MonthCalendar.HitArea.TodayLink">
            <summary>
            The specified point is on the today link at the bottom of the month calendar control.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.MonthCalendar.HitArea.NoneLink">
            <summary>
            The specified point is on the "None" link at the bottom of the month calendar control.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.MonthCalendar.HitArea.Nowhere">
            <summary>
            The specified point is either not on the month calendar control, or it is in an inactive portion of the control.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.MonthCalendar.HitArea.TitleBackground">
            <summary>
            The specified point is over the background of a month's title.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.MonthCalendar.HitArea.TitleMonth">
            <summary>
            The specified point is in a month's title bar, over a month name.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.MonthCalendar.HitArea.TitleYear">
            <summary>
            The specified point is in a month's title bar, over the year value.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.MonthCalendar.HitArea.NextMonthButton">
            <summary>
            The specified point is over the button at the upper-right corner of the control.
            If the user clicks here, the month calendar scrolls its display to the next month or set of months.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.MonthCalendar.HitArea.PrevMonthButton">
            <summary>
            The specified point is over the button at the upper-left corner of the control.
            If the user clicks here, the month calendar scrolls its display to the previous month or set of months.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.MonthCalendar.HitArea.CalendarBackground">
            <summary>
            The specified point is part of the calendar's background.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.MonthCalendar.HitArea.Date">
            <summary>
            The specified point is on a date within the calendar.
            The <see cref="P:OpenNETCF.Windows.Forms.MonthCalendar.HitTestInfo.Time"/> property of <see cref="T:OpenNETCF.Windows.Forms.MonthCalendar.HitTestInfo"/> is set to the date at the specified point.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.MonthCalendar.HitArea.NextMonthDate">
            <summary>
            The specified point is over a date from the next month (partially displayed at the end of the currently displayed month).
            If the user clicks here, the month calendar scrolls its display to the next month or set of months.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.MonthCalendar.HitArea.PrevMonthDate">
            <summary>
            The specified point is over a date from the previous month (partially displayed at the end of the currently displayed month).
            If the user clicks here, the month calendar scrolls its display to the previous month or set of months.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.MonthCalendar.HitArea.DayOfWeek">
            <summary>
            The specified point is over a day abbreviation ("Fri", for example).
            The <see cref="P:OpenNETCF.Windows.Forms.MonthCalendar.HitTestInfo.Time"/> property of <see cref="T:OpenNETCF.Windows.Forms.MonthCalendar.HitTestInfo"/> is set to the corresponding date on the top row.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.MonthCalendar.HitArea.WeekNumbers">
            <summary>
            The specified point is over a week number.
            This occurs only if the <see cref="P:OpenNETCF.Windows.Forms.MonthCalendar.ShowWeekNumbers"/> property of <see cref="T:OpenNETCF.Windows.Forms.MonthCalendar"/> is enabled.
            The <see cref="P:OpenNETCF.Windows.Forms.MonthCalendar.HitTestInfo.Time"/> property of <see cref="T:OpenNETCF.Windows.Forms.MonthCalendar.HitTestInfo"/> is set to the corresponding date in the leftmost column.
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.MonthCalendar.HitTestInfo">
            <summary>
            Contains information about an area of an <see cref="T:OpenNETCF.Windows.Forms.MonthCalendar"/> control.
            <para><b>New in v1.1</b></para>
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.MonthCalendar.HitTestInfo.HitArea">
            <summary>
            Gets the <see cref="T:OpenNETCF.Windows.Forms.MonthCalendar.HitArea"/> that represents the area of the calendar evaluated by the hit-test operation.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.MonthCalendar.HitTestInfo.Point">
            <summary>
            Gets the point that was hit-tested.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.MonthCalendar.HitTestInfo.Time">
            <summary>
            Gets the time information specific to the location that was hit-tested.
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.NotifyIcon">
            <summary>
            Specifies a component that creates an icon in the status area
            </summary>
            <remarks>Icons in the status area are short cuts to processes that are running in the background of a computer, such as a virus protection program or a volume control.
            These processes do not come with their own user interfaces.
            The <see cref="T:OpenNETCF.Windows.Forms.NotifyIcon"/> class provides a way to program in this functionality.
            The Icon property defines the icon that appears in the status area.
            Pop-up menus for an icon are addressed with the ContextMenu property.
            The <see cref="P:OpenNETCF.Windows.Forms.NotifyIcon.Text"/> property assigns ToolTip text (Tooltips are not supported by the Pocket PC interface).
            In order for the icon to show up in the status area, the <see cref="P:OpenNETCF.Windows.Forms.NotifyIcon.Visible"/> property must be set to true.</remarks>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.NotifyIcon.#ctor">
            <summary>
            Initializes a new instance of the NotifyIcon class.
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.NotifyIcon.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:OpenNETCF.Windows.Forms.NotifyIcon"/> and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources;
            false to release only unmanaged resources.</param>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.NotifyIcon.IconHandle">
            <summary>
            Get or set the native Icon handle used to display the NotifyIcon.
            <para><b>New in v1.3</b></para>
            </summary>
            <remarks>Ensure that the value you set to this property is a valid HIcon.
            By default the applications icon is assigned to the NotifyIcon control.</remarks>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.NotifyIcon.Text">
            <summary>
            Gets or sets the ToolTip text displayed when the mouse hovers over a status area icon.
            </summary>
            <remarks>The Pocket PC interface does not display tooptips.</remarks>
            <value>The ToolTip text displayed when the mouse hovers over a status area icon.</value>
            <exception cref="T:System.ArgumentException">ToolTip text must be less than 64 characters long.</exception>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.NotifyIcon.Visible">
            <summary>
            Gets or sets a value indicating whether the icon is visible in the status notification area of the taskbar.
            </summary>
            <value>true if the icon is visible in the status area; otherwise, false. The default value is false.</value>
            <remarks>Since the default value is false, in order for the icon to show up in the status area, you must set the Visible property to true.</remarks>
        </member>
        <member name="E:OpenNETCF.Windows.Forms.NotifyIcon.Click">
            <summary>
            Occurs when the user clicks the icon in the status area.
            </summary>
        </member>
        <member name="E:OpenNETCF.Windows.Forms.NotifyIcon.DoubleClick">
            <summary>
            Occurs when the user double-clicks the icon in the status notification area of the taskbar.
            </summary>
        </member>
        <member name="E:OpenNETCF.Windows.Forms.NotifyIcon.MouseUp">
            <summary>
            Occurs when the user releases the mouse button while the pointer is over the icon in the status notification area of the taskbar.
            </summary>
        </member>
        <member name="E:OpenNETCF.Windows.Forms.NotifyIcon.MouseDown">
            <summary>
            Occurs when the user presses the mouse button while the pointer is over the icon in the status notification area of the taskbar.
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.NotifyIcon.NotifyIconMessage">
            <summary>
            Specifies the action to take with a NotifyIcon.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.NotifyIcon.NotifyIconMessage.Add">
            <summary>
            Add the Icon to the tray.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.NotifyIcon.NotifyIconMessage.Modify">
            <summary>
            Change the Icon properties.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.NotifyIcon.NotifyIconMessage.Delete">
            <summary>
            Delete the Icon from the tray.
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.NotifyIcon.NotifyIconFlags">
            <summary>
            Flags that indicate which of the other members contain valid data.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.NotifyIcon.NotifyIconFlags.Message">
            <summary>
            The uCallbackMessage member is valid.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.NotifyIcon.NotifyIconFlags.Icon">
            <summary>
            The hIcon member is valid.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.NotifyIcon.NotifyIconFlags.ToolTip">
            <summary>
            The szTip member is valid.
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.DrawItemEventHandler">
            <summary>
            Represents the method that will handle the DrawItem.
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.DrawItemState">
            <summary>
            Specifies the state of an item that is being drawn.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.DrawItemState.None">
            <summary>
            The item currently has no state.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.DrawItemState.Selected">
            <summary>
            The item is selected.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.DrawItemState.Disabled">
            <summary>
            The item is disabled.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.DrawItemState.Focus">
            <summary>
            The item has focus.
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.DrawItemEventArgs">
            <summary>
            Provides data for the DrawItem event.
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.DrawItemEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Font,System.Drawing.Rectangle,System.Int32,OpenNETCF.Windows.Forms.DrawItemState,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Initializes a new instance
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.DrawItemEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Font,System.Drawing.Rectangle,System.Int32,OpenNETCF.Windows.Forms.DrawItemState)">
            <summary>
            Initializes a new instance
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.DrawItemEventArgs.DrawBackground">
            <summary>
            Draws the background within the bounds specified in the DrawItemEventArgs constructor and with the appropriate color.
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.DrawItemEventArgs.DrawBackground(System.Drawing.Color)">
            <summary>
            Draws the background within the bounds specified in the DrawItemEventArgs constructor and with the appropriate color.
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.DrawItemEventArgs.DrawFocusRectangle">
            <summary>
            Draws a focus rectangle.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.DrawItemEventArgs.Bounds">
            <summary>
            Gets the rectangle that represents the bounds of the item that is being drawn.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.DrawItemEventArgs.State">
            <summary>
            Gets the state of the item being drawn.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.DrawItemEventArgs.Graphics">
            <summary>
            Gets the graphics surface to draw the item on.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.DrawItemEventArgs.Index">
            <summary>
            Gets the index value of the item that is being drawn.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.DrawItemEventArgs.Font">
            <summary>
            Gets the font assigned to the item being drawn.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.DrawItemEventArgs.BackColor">
            <summary>
            Gets the background color of the item that is being drawn.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.DrawItemEventArgs.ForeColor">
            <summary>
            Gets the foreground color of the of the item being drawn.
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.PowerLineStatus">
            <summary>
            Power line status.
            <para><b>New in v1.3</b></para>
            </summary>
            <remarks>Used by <see cref="T:OpenNETCF.Windows.Forms.PowerStatus"/> class.</remarks>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.PowerLineStatus.Offline">
            <summary>
            AC power is offline.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.PowerLineStatus.Online">
            <summary>
            AC power is online.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.PowerLineStatus.BackupPower">
            <summary>
            Unit is on backup power.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.PowerLineStatus.Unknown">
            <summary>
            AC line status is unknown.
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.PowerStatus">
            <summary>
            Indicates current system power status information.
            <para><b>New in v1.3</b></para>
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.PowerStatus.PowerLineStatus">
            <summary>
            AC power status.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.PowerStatus.BatteryChargeStatus">
            <summary>
            Gets the current battery charge status.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.PowerStatus.BatteryLifePercent">
            <summary>
            Gets the approximate percentage of full battery time remaining.
            </summary>
            <remarks>TThe approximate percentage, from 0 to 100, of full battery time remaining, or 255 if the percentage is unknown.</remarks>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.PowerStatus.BatteryLifeRemaining">
            <summary>
            Gets the approximate number of seconds of battery time remaining.
            </summary>
            <value>The approximate number of seconds of battery life remaining, or -1 if the approximate remaining battery life is unknown.</value>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.PowerStatus.BatteryFullLifeTime">
            <summary>
            Gets the reported full charge lifetime of the primary battery power source in seconds.
            </summary>
            <value>The reported number of seconds of battery life available when the battery is fullly charged, or -1 if the battery life is unknown.</value>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.PowerStatus.BackupBatteryChargeStatus">
            <summary>
            Gets the backup battery charge status.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.PowerStatus.BackupBatteryLifePercent">
            <summary>
            Percentage of full backup battery charge remaining. Must be in the range 0 to 100.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.PowerStatus.BackupBatteryLifeRemaining">
            <summary>
            Number of seconds of backup battery life remaining.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.PowerStatus.BackupBatteryFullLifeTime">
            <summary>
            Number of seconds of backup battery life when at full charge. Or -1 If unknown.
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.GradiantDrawMode">
            <summary>
            Enum to describe how the gradient should draw.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.GradiantDrawMode.Normal">
            <summary>
            Gradient draws normally - top to down)
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.GradiantDrawMode.Middle">
            <summary>
            Draws gradient from the middle out
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.ProgressBarExStyle">
            <summary>
            The style of the progress bar
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.ProgressBarExStyle.Solid">
            <summary>
            Progress bar is drawn using a solid color
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.ProgressBarExStyle.Gradient">
            <summary>
            Progress bar is drawn using gradient
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.ProgressBarEx">
            <summary>
            Summary description for Class1.
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.ProgressBarEx.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.ProgressBarEx.Increment(System.Int32)">
            <summary>
            Advances the current position of the progress bar by the specified amount.
            </summary>
            <param name="value">The amount by which to increment the progress bar's current position.</param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.ProgressBarEx.PerformStep">
            <summary>
            Advances the current position of the progress bar by the amount of the Step property
            </summary>
            <remarks>
            The PerformStep method increments the value of the progress bar by the amount specified by the Step property. 
            You can use the Step property to specify the amount that each completed task in an operation changes the 
            value of the progress bar. For example, if you are copying a group of files, you might want to set the 
            value of the Step property to 1 and the value of the Maximum property to the total number of files to 
            copy. When each file is copied, you can call the PerformStep method to increment the progress bar by 
            the value of the Step property. If you want to have more flexible control of the value of the progress bar, 
            you can use the Increment method or set the value of the Value property directly.
            <br/>
            The Value property specifies the current position of the ProgressBar. If, after calling the PerformStep 
            method, the Value property is greater than the value of the Maximum property, the Value property remains 
            at the value of the Maximum property. If, after calling the PerformStep method with a negative value 
            specified in the value parameter, the Value property is less than the value of the Minimum property, 
            the Value property remains at the value of the Minimum property.
            </remarks>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ProgressBarEx.ShowPercentValueText">
            <summary>
            Gets or sets whether the current percentage of the progress bar should be shown.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ProgressBarEx.ShowValueText">
            <summary>
            Gets or sets whether the current value of the progress bar should be shown.  
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ProgressBarEx.BarGradientColor">
            <summary>
            Gets or sets the gradient color of the progress bar
            </summary>
            <remarks>Only effective when ProgressBarExStyle is set to Gradient</remarks>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ProgressBarEx.BarColor">
            <summary>
            Gets or sets the color of the progress bar
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ProgressBarEx.ProgressBarExStyle">
            <summary>
            Gets or sets the style of the progress bar.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ProgressBarEx.BorderStyle">
            <summary>
            Gets or sets the border style of the control
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ProgressBarEx.BorderColor">
            <summary>
            Gets or sets the color of the border
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ProgressBarEx.GradiantDrawmode">
            <summary>
            Gets or sets the gradient draw mode. Two values are either Normal which is gradient from left to right
            and Middle which starts from the middle out
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ProgressBarEx.Step">
            <summary>
            Gets or sets the amount by which a call to the PerformStep method increases the current position of the progress bar.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ProgressBarEx.Value">
            <summary>
            Gets or sets the current position of the progress bar.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ProgressBarEx.Minimum">
            <summary>
            Gets or sets the minimum value of the range of the control.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ProgressBarEx.Maximum">
            <summary>
            Gets or sets the maximum value of the range of the control.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ProgressBarEx.BackColor">
            <summary>
            Overridden. See <see cref="P:System.Windows.Forms.Control.BackColor">Control.BackColor</see>.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ProgressBarEx.Text">
            <summary>
            Overridden. See <see cref="P:System.Windows.Forms.Control.Text">Control.Text</see>.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ProgressBarEx.ForeColor">
            <summary>
            Overridden. See <see cref="P:System.Windows.Forms.Control.ForeColor">Control.ForeColor</see>.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ProgressBarEx.Font">
            <summary>
            Overridden. See <see cref="P:System.Windows.Forms.Control.Font">Control.Font</see>.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.ProgressBarEx.Handle">
            <summary>
            Gets the window handle that the control is bound to.
            </summary>
            <value>An <see cref="T:System.IntPtr"/> that contains the window handle (HWND) of the control.</value>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.HighWarnHandler">
            <summary>
            Used when a gauge value exceeds its high warn level.
            <para><b>New in v1.1</b></para>
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.LowWarnHandler">
            <summary>
            Used when a gauge value falls below its low warn level.
            <para><b>New in v1.1</b></para>
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.MaxValueHandler">
            <summary>
            Used when a gauge value exceeds its max value.
            <para><b>New in v1.1</b></para>
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.MinValueHandler">
            <summary>
            Used when a gauge value falls below its low value.
            <para><b>New in v1.1</b></para>
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.RoundGauge">
            <summary>
            A representation of a dial gauge with indicator lamps
            <para><b>New in v1.1</b></para>
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.RoundGauge.#ctor">
            <summary>
            Create a RoundGauge object
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.RoundGauge.Refresh">
            <summary>
            Refreshes the control
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.RoundGauge.BeginUpdate">
            <summary>
            Suspends control painting
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.RoundGauge.EndUpdate">
            <summary>
            Resumes control painting
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.RoundGauge.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            OnPaintBackground
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.RoundGauge.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            OnPaint
            </summary>
            <param name="e">PaintEventArgs</param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.RoundGauge.OnResize(System.EventArgs)">
            <summary>
            Fired when the RoundGauge is resized
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.RoundGauge.Dispose(System.Boolean)">
            <summary>
            Dispose of the current object instance
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="E:OpenNETCF.Windows.Forms.RoundGauge.HighWarn">
            <summary>
            Fires when the RoundGauge Value exceeds the HighWarnValue
            <seealso cref="P:OpenNETCF.Windows.Forms.RoundGauge.Value"/>
            <seealso cref="P:OpenNETCF.Windows.Forms.RoundGauge.HighWarnValue"/>
            </summary>
        </member>
        <member name="E:OpenNETCF.Windows.Forms.RoundGauge.LowWarn">
            <summary>
            Fires when the RoundGauge Value falls below the LowWarnValue
            <seealso cref="P:OpenNETCF.Windows.Forms.RoundGauge.Value"/>
            <seealso cref="P:OpenNETCF.Windows.Forms.RoundGauge.LowWarnValue"/>
            </summary>
        </member>
        <member name="E:OpenNETCF.Windows.Forms.RoundGauge.GaugeMax">
            <summary>
            Fires when the RoundGauge Value exceeds the MaxValue
            <seealso cref="P:OpenNETCF.Windows.Forms.RoundGauge.Value"/>
            <seealso cref="P:OpenNETCF.Windows.Forms.RoundGauge.MaxValue"/>
            </summary>
        </member>
        <member name="E:OpenNETCF.Windows.Forms.RoundGauge.GaugeMin">
            <summary>
            Fires when the RoundGauge Value falls below the MinValue
            <seealso cref="P:OpenNETCF.Windows.Forms.RoundGauge.Value"/>
            <seealso cref="P:OpenNETCF.Windows.Forms.RoundGauge.MinValue"/>
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.RoundGauge.Lamps">
            <summary>
            The RoundGauge's collection of Lamps
            <seealso cref="P:OpenNETCF.Windows.Forms.RoundGauge.Lamps"/>
            <seealso cref="T:OpenNETCF.Windows.Forms.Lamp"/>
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.RoundGauge.NeedleWidth">
            <summary>
            Specifies the width of the gauge needle base.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.RoundGauge.ControlName">
            <summary>
            The current instance Name
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.RoundGauge.Diameter">
            <summary>
            Dimaeter of the RoundGauge face
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.RoundGauge.Value">
            <summary>
            Value that the RoundGauge needle points to
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.RoundGauge.ValueArc">
            <summary>
            The arc over which value ticks are drawn (in degrees)
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.RoundGauge.TickLabelInterval">
            <summary>
            Specifies the number of ticks between TickLabels.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.RoundGauge.ShowTickLabels">
            <summary>
            Specifies whether or not TickLabels will be displayed.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.RoundGauge.LineBezelSpacing">
            <summary>
            Specifies the gap between the ValueArc and the gauge bezel.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.RoundGauge.ArcWidth">
            <summary>
            Specifies the thickness of the ValueArc line.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.RoundGauge.TickInterval">
            <summary>
            Specifies the interval, based on Value, between individual Tick lines.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.RoundGauge.TickLabelPadding">
            <summary>
            Specifies the gap between the Tick lines and the TickLabels.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.RoundGauge.TickLength">
            <summary>
            Specifies the length of standard Tick lines.  Tick lines with a label are twice this value.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.RoundGauge.MinValue">
            <summary>
            Specifies the minimum value displayed on the gauge.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.RoundGauge.HighWarnValue">
            <summary>
            Specifies the lower limit of the HighWarn region.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.RoundGauge.LowWarnValue">
            <summary>
            Specifies the upper limit of the LowWarn region.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.RoundGauge.MaxValue">
            <summary>
            Specifies the maximum value displayed on the gauge.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.RoundGauge.ValueDigits">
            <summary>
            Specifies the number of digits to display in the value label.  0 will hide the value label.  -1 sets it to autosize.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.RoundGauge.BezelWidth">
            <summary>
            Specifies the thickness of the gauge bezel.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.RoundGauge.BezelColor">
            <summary>
            Specifies the Color of the gauge bezel.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.RoundGauge.LineColor">
            <summary>
            Specifies the Color of Ticks and the ValueArc between the LowWarn and HighWarn regions.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.RoundGauge.LowWarnColor">
            <summary>
            Specifies the Color of the ValueArc in the LowWarn region.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.RoundGauge.HighWarnColor">
            <summary>
            Specifies the Color of the ValueArc in the HighWarn region.
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.SelectionRange">
            <summary>
            Represents a date selection range in a month calendar control.
            <para><b>New in v1.1</b></para>
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.SelectionRange.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenNETCF.Windows.Forms.SelectionRange"/> class.
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.SelectionRange.#ctor(System.DateTime,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenNETCF.Windows.Forms.SelectionRange"/> class with the specified beginning and ending dates.
            </summary>
            <param name="lower">The starting date in the <see cref="T:OpenNETCF.Windows.Forms.SelectionRange"/>.</param>
            <param name="upper">The ending date in the <see cref="T:OpenNETCF.Windows.Forms.SelectionRange"/>.</param>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.SelectionRange.Start">
            <summary>
            Gets or sets the starting date and time of the selection range.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.SelectionRange.End">
            <summary>
            Gets or sets the ending date and time of the selection range.
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.Signature">
            <summary>
            Captures a signature from the user.
            Can be saved to a control specific byte array or a Bitmap.
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.Signature.#ctor">
            <summary>
            Constructor, creates the graphics object
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.Signature.ToBitmap">
            <summary>
            Converts the signature to a bitmap.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.Signature.DrawBorder(System.Drawing.Graphics)">
            <summary>
            Draw the border of the signature box if it is required.
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.Signature.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Set the start x and y coordinates and capture the mouse.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.Signature.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Draws a line for the signature.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.Signature.Clear">
            <summary>
            Clears the signature area.
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.Signature.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Draws the border for the first time.
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.Signature.BorderColor">
            <summary>
            The color for the border.
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.SmartList">
            <summary>
            Summary description for SearchList.
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.SmartList.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.SmartList.OnFilteringStarted(System.EventArgs)">
            <summary>
            Raises the FilteringStarted event.  
            </summary>
            <param name="e"> An System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.SmartList.OnFilteringComplete(System.EventArgs)">
            <summary>
            Raises the FilteringStarted event.
            </summary>
            <param name="e">An System.EventArgs that contains the event data.</param>
        </member>
        <member name="E:OpenNETCF.Windows.Forms.SmartList.FilteringStarted">
            <summary>
            Occurs when the filtering is started.
            </summary>
        </member>
        <member name="E:OpenNETCF.Windows.Forms.SmartList.FilteringComplete">
            <summary>
            Occurs when the filtering is completed.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.SmartList.Items">
            <summary>
            Gets the items of the SmartList .
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.SmartList.BaseItems">
            <summary>
            Gets a items collection.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.SmartList.AutoNumbering">
            <summary>
            Sets or gets AutoNumbering.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.SmartList.KeyMappings">
            <summary>
            Gets or sets key mappings for filtering.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.SmartList.EvenItemColor">
            <summary>
            Gets or sets the background color of the even item.  
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.SmartList.LineColor">
            <summary>
            Gets or sets the color of the lines. 
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.SmartList.ShowLines">
            <summary>
            Gets or sets text wrapping in the list items
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.SmartList.WrapText">
            <summary>
            Gets or sets text wrapping in the list items
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.SmartList.ImageList">
            <summary>
            Gets or sets the System.Windows.Forms.ImageList to use when displaying item's icons in the control.  
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.SmartList.ItemsMatchedCount">
            <summary>
            Gets a number of items found as a result of filtering.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.SmartList.ItemHeight">
            <summary>
            Gets or sets the item height
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.SmartList.ItemCollection">
            <summary>
            Represents the collection of items in a SmartList . 
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.SmartList.ItemCollection.Add(OpenNETCF.Windows.Forms.SmartListItem)">
            <summary>
            Adds an item to the list of items for a SmartList . 
            </summary>
            <param name="value">SmartListItem to add</param>
            <returns>Newly created SmartListItem</returns>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.SmartList.ItemCollection.Add(System.String)">
            <summary>
            Adds an item to the list of items for a SmartList . 
            </summary>
            <param name="value">string for text property</param>
            <returns>Newly created SmartListItem</returns>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.SmartList.ItemCollection.Clear">
            <summary>
            Removes all elements from the System.Collections.ArrayList.  
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.SmartList.ItemCollection.Remove(OpenNETCF.Windows.Forms.SmartListItem)">
            <summary>
            Removes the specified object from the collection.
            </summary>
            <param name="value">SmartListItem to remove</param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.SmartList.ItemCollection.Insert(System.Int32,OpenNETCF.Windows.Forms.SmartListItem)">
            <summary>
            Inserts an item into the list box at the specified index.  
            </summary>
            <param name="index">The zero-based index location where the item is inserted.</param>
            <param name="value">An object representing the item to insert.</param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.SmartList.ItemCollection.Contains(OpenNETCF.Windows.Forms.SmartListItem)">
            <summary>
            Determines whether the specified item is located within the collection.  
            </summary>
            <param name="value">An object representing the item to locate in the collection.</param>
            <returns>true if the item is located within the collection; otherwise, false .</returns>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.SmartList.ItemCollection.IndexOf(OpenNETCF.Windows.Forms.SmartListItem)">
            <summary>
            Returns the index within the collection of the specified item
            </summary>
            <param name="value">An object representing the item to locate in the collection.</param>
            <returns>The zero-based index where the item is located within the collection; otherwise, negative one (-1). </returns>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.SmartList.ItemCollection.Item(System.Int32)">
            <summary>
            Gets or sets the item.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.SmartList.ItemCollection.Item(System.String)">
            <summary>
            Gets the item.
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.SmartListItem">
            <summary>
            Represents an item in a <see cref="T:OpenNETCF.Windows.Forms.SmartList"/> control.
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.SmartListItem.#ctor">
            <summary>
            Initializes a new instance of the SmartListItem class with default values.
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.SmartListItem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the SmartListItem class with specified item text.
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.SmartListItem.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the SmartListItem class with specified item text and ImageIndex.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.SmartListItem.Text">
            <summary>
            Gets or sets the text associated with this item.   
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.SmartListItem.Font">
            <summary>
            Gets or sets the font associated with this item.   
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.SmartListItem.ForeColor">
            <summary>
            Gets or sets the foreground color of the item's text.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.SmartListItem.ImageList">
            <summary>
            Gets the <see cref="P:OpenNETCF.Windows.Forms.SmartListItem.ImageList"/> that contains the image displayed with the item.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.SmartListItem.ImageIndex">
            <summary>
            Gets or sets the ImageIndex associated with this item.   
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.SoundPlayer">
            <summary>
            Controls playback of a sound from a .wav file.
            <para><b>New in v1.2</b></para>
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.SoundPlayer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenNETCF.Windows.Forms.SoundPlayer"/> class.
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.SoundPlayer.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenNETCF.Windows.Forms.SoundPlayer"/> class, attaches the .wav file within the specified <see cref="P:OpenNETCF.Windows.Forms.SoundPlayer.Stream"/>.
            </summary>
            <param name="stream"></param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.SoundPlayer.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenNETCF.Windows.Forms.SoundPlayer"/> class and attaches the specified .wav file.
            <para><b>New in v1.2</b></para></summary>
            <param name="soundLocation">The location of a .wav file to load.</param>
            <remarks>The string passed to the soundLocation parameter must be a path to a .wav file.
            If the path is invalid, the <see cref="T:OpenNETCF.Windows.Forms.SoundPlayer"/> object will still be constructed, but subsequent calls to a load or play method will fail.</remarks>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.SoundPlayer.Play">
            <summary>
            Plays the .wav file using a new thread.
            <para><b>New in v1.2</b></para></summary>
            <remarks>The Play method plays the sound using a new thread.
            If the .wav file has not been specified or it fails to load, the Play method will play the default beep sound.</remarks>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.SoundPlayer.PlaySync">
            <summary>
            Plays the .wav file using the UI thread.
            <para><b>New in v1.2</b></para></summary>
            <remarks>The PlaySync method uses the current thread to play a .wav file, preventing the thread from handling other messages until the load is complete.
            After a .wav file is successfully loaded from a Stream or URL path, future calls to playback methods for the SoundPlayer object will not need to reload the .wav file until the path for the sound changes.
            If the .wav file has not been specified or it fails to load, the PlaySync method will play the default beep sound.</remarks>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.SoundPlayer.PlayLooping">
            <summary>
            Plays and loops the .wav file using a new thread and loads the .wav file first if it has not been loaded.
            <para><b>New in v1.2</b></para></summary>
            <remarks>The PlayLooping method plays and loops the sound using a new thread.
            If the .wav file has not been specified or it fails to load, the PlayLooping method will play the default beep sound.</remarks>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.SoundPlayer.Stop">
            <summary>
            Stops playback of the sound if playback is occurring.
            <para><b>New in v1.2</b></para></summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.SoundPlayer.SoundLocation">
            <summary>
            Gets or sets the file path of the .wav file to load.
            <para><b>New in v1.2</b></para></summary>
            <value>The file path from which to load a .wav file, or <see cref="F:System.String.Empty"/> if no file path is present.
            The default is <see cref="F:System.String.Empty"/>.</value>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.SoundPlayer.Stream">
            <summary>
            Gets or sets the <see cref="P:OpenNETCF.Windows.Forms.SoundPlayer.Stream"/> from which to load the .wav file.
            <para><b>New in v1.3</b></para>
            </summary>
            <remarks>This property is set to null when the <see cref="P:OpenNETCF.Windows.Forms.SoundPlayer.SoundLocation"/> property is set to a new and valid sound location.</remarks>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.SoundPlayer.Tag">
            <summary>
            <para><b>New in v1.3</b></para>
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.SoundPlayer.SoundFlags">
            <summary>
            PlaySound flags
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.SoundPlayer.SoundFlags.Alias">
            <summary>
            <b>name</b> is a WIN.INI [sounds] entry
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.SoundPlayer.SoundFlags.FileName">
            <summary>
            <b>name</b> is a file name
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.SoundPlayer.SoundFlags.Resource">
            <summary>
            <b>name</b> is a resource name or atom
            </summary>   
        </member>
        <member name="F:OpenNETCF.Windows.Forms.SoundPlayer.SoundFlags.Sync">
            <summary>   
            Play synchronously (default)   
            </summary>   
        </member>
        <member name="F:OpenNETCF.Windows.Forms.SoundPlayer.SoundFlags.Async">
            <summary>   
             Play asynchronously   
            </summary>   
        </member>
        <member name="F:OpenNETCF.Windows.Forms.SoundPlayer.SoundFlags.NoDefault">
            <summary>   
            Silence not default, if sound not found   
            </summary>   
        </member>
        <member name="F:OpenNETCF.Windows.Forms.SoundPlayer.SoundFlags.Memory">
            <summary>   
            <b>name</b> points to a memory file   
            </summary>   
        </member>
        <member name="F:OpenNETCF.Windows.Forms.SoundPlayer.SoundFlags.Loop">
            <summary>   
            Loop the sound until next sndPlaySound   
            </summary>   
        </member>
        <member name="F:OpenNETCF.Windows.Forms.SoundPlayer.SoundFlags.NoStop">
            <summary>   
            Don't stop any currently playing sound   
            </summary>   
        </member>
        <member name="F:OpenNETCF.Windows.Forms.SoundPlayer.SoundFlags.NoWait">
            <summary>   
            Don't wait if the driver is busy   
            </summary>   
        </member>
        <member name="T:OpenNETCF.Windows.Forms.StatusBarEx">
            <summary>
            Represents a Windows status bar control.
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.StatusBarEx.#ctor">
            <summary>
            Constructor of the StatusBarEx control.
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.StatusBarEx.ToString">
            <summary>
            This member overrides Object.ToString.
            </summary>
            <returns>A String that represents the current Object.</returns>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.StatusBarEx.OnResize(System.EventArgs)">
            <summary>
            Raises the Resize event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.StatusBarEx.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the Paint event.
            </summary>
            <param name="e">A PaintEventArgs that contains the event data.</param>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.StatusBarEx.Panels">
            <summary>
            Gets the collection of <see cref="T:OpenNETCF.Windows.Forms.StatusBarEx"/> panels contained within the control.
            </summary>
            <value>A StatusBarEx.StatusBarPanelCollection containing the StatusBarPanel objects of the StatusBar control.</value>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.StatusBarEx.ShowPanels">
            <summary>
            Gets or sets a value indicating whether any panels that have been added to the control are displayed.
            </summary>
            <value>true if panels are displayed; otherwise, false. The default is false.</value>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.StatusBarEx.BackColor">
            <summary>
            Gets or sets the background color for the StatusBarEx control.
            </summary>
            <value>A System.Drawing.Color that represents the background color of the control.</value>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.StatusBarEx.Text">
            <summary>
            Gets or sets the text associated with this StatusBarEx control.
            </summary>
            <value>The text associated with the StatusBarEx control.</value>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.StatusBarEx.Location">
            <summary>
            Gets or sets the coordinates of the upper-left corner of the StatusBarEx control relative to the 
            upper-left corner of its container.
            </summary>
            <value>The Point that represents the upper-left corner of the control relative to the upper-left corner of its container.</value>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.StatusBarEx.Size">
            <summary>
            Gets or sets the height and width of the StatusBarEx control.
            </summary>
            <value>The Size object that represents the height and width of the control in pixels.</value>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.StatusBarEx.StatusBarPanelCollection">
            <summary>
            Represents the collection of panels in a StatusBarEx control.
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.StatusBarEx.StatusBarPanelCollection.#ctor(OpenNETCF.Windows.Forms.StatusBarEx)">
            <summary>
            Constructor for the StatusBarPanelCollection class
            </summary>
            <param name="parent">The StatusBarEx owning the collection of StatusBarPanels</param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.StatusBarEx.StatusBarPanelCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            When implemented by a class, copies the elements of the ICollection to an Array, starting at a particular Array index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination of the elements copied from ICollection. The Array must have zero-based indexing.</param>
            <param name="index">The zero-based index in array at which copying begins.</param>
            <remarks>StatusBarPanelCollection.CopyTo is not implemented and throws an exception!</remarks>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.StatusBarEx.StatusBarPanelCollection.GetEnumerator">
            <summary>
            Returns an enumerator to use to iterate through the item collection.
            </summary>
            <returns>An IEnumerator object that represents the item collection.</returns>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.StatusBarEx.StatusBarPanelCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the StatusBarPanel located at the specified index within the collection.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
            <remarks>
            When you remove a panel from the collection, the indexes change for subsequent panels in the collection.
            All information about the removed panel is deleted. You can use this method to remove a specific panel 
            from the list by specifying the index of the panel to remove from the collection. To specify the panel 
            to remove instead of the index to the panel, use the Remove method. To remove all panels from the 
            StatusBarEx control, use the Clear method.
            </remarks>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.StatusBarEx.StatusBarPanelCollection.Insert(System.Int32,System.Object)">
            <summary>
            Inserts the specified object as long as it is a valid StatusBarPanel into the collection at 
            the specified index.
            </summary>
            <param name="index">The zero-based index location where the panel is inserted.</param>
            <param name="value">A StatusBarPanel representing the panel to insert.</param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.StatusBarEx.StatusBarPanelCollection.Insert(System.Int32,OpenNETCF.Windows.Forms.StatusBarPanel)">
            <summary>
            Inserts the specified StatusBarPanel into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index location where the panel is inserted.</param>
            <param name="value">A StatusBarPanel representing the panel to insert.</param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.StatusBarEx.StatusBarPanelCollection.Remove(System.Object)">
            <summary>
            Removes the specified object from the collection if it is a StatusBarPanel.
            </summary>
            <param name="value">An object representing the panel to remove from the collection.</param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.StatusBarEx.StatusBarPanelCollection.Remove(OpenNETCF.Windows.Forms.StatusBarPanel)">
            <summary>
            Removes the specified StatusBarPanel from the collection.
            </summary>
            <param name="value">The StatusBarPanel representing the panel to remove from the collection.</param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.StatusBarEx.StatusBarPanelCollection.Contains(System.Object)">
            <summary>
            Determines whether the specified object is a StatusBarPanel and if it is located within the collection.
            </summary>
            <param name="value">The object to locate in the collection.</param>
            <returns>true if the object is located within the collection; otherwise, false.</returns>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.StatusBarEx.StatusBarPanelCollection.Contains(OpenNETCF.Windows.Forms.StatusBarPanel)">
            <summary>
            Determines whether the specified panel is located within the collection.
            </summary>
            <param name="panel">The StatusBarPanel to locate in the collection.</param>
            <returns>true if the panel is located within the collection; otherwise, false.</returns>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.StatusBarEx.StatusBarPanelCollection.Clear">
            <summary>
            Removes all items from the collection.
            </summary>
            <remarks>
            To remove a single panel from the StatusBarEx, use the Remove or RemoveAt method.
            </remarks>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.StatusBarEx.StatusBarPanelCollection.IndexOf(System.Object)">
            <summary>
            Returns the index within the collection of the specified object if it is a StatusBarPanel.
            </summary>
            <param name="value">The object to locate in the collection.</param>
            <returns>The zero-based index where the panel is located within the collection; otherwise, negative one (-1).</returns>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.StatusBarEx.StatusBarPanelCollection.IndexOf(OpenNETCF.Windows.Forms.StatusBarPanel)">
            <summary>
            Returns the index within the collection of the specified panel.
            </summary>
            <param name="value">The StatusBarPanel object to locate in the collection.</param>
            <returns>The zero-based index where the panel is located within the collection; otherwise, negative one (-1).</returns>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.StatusBarEx.StatusBarPanelCollection.Add(System.Object)">
            <summary>
            Adds an object to the collection if it is a StatusBarPanel.
            </summary>
            <param name="value">A StatusBarPanel that represents the panel to add to the collection.</param>
            <returns>The zero-based index of the item in the collection.</returns>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.StatusBarEx.StatusBarPanelCollection.Add(OpenNETCF.Windows.Forms.StatusBarPanel)">
            <summary>
            Adds a StatusBarPanel to the collection.
            </summary>
            <param name="value">A StatusBarPanel that represents the panel to add to the collection.</param>
            <returns>The zero-based index of the item in the collection.</returns>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.StatusBarEx.StatusBarPanelCollection.Add(System.String)">
            <summary>
            Adds a StatusBarPanel with the specified text to the collection.
            </summary>
            <param name="text">The text for the StatusBarPanel that is being added.</param>
            <returns>A StatusBarPanel that represents the panel that was added to the collection.</returns>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.StatusBarEx.StatusBarPanelCollection.Item(System.Int32)">
            <summary>
            Gets or sets the StatusBarPanel at the specified index.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.StatusBarEx.StatusBarPanelCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the ICollection is synchronized (thread-safe).
            This property is not implemented and returns always false right now.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.StatusBarEx.StatusBarPanelCollection.Count">
            <summary>
            Gets the number of items in the collection.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.StatusBarEx.StatusBarPanelCollection.SyncRoot">
            <summary>
            When implemented by a class, gets an object that can be used to synchronize access to the ICollection.
            StatusBarPanelCollection.SyncRoot is not implemented.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.StatusBarEx.StatusBarPanelCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether this collection is read-only.
            </summary>
            <remarks>
            This property is always false for this collection.
            </remarks>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.StatusBarEx.StatusBarPanelCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the StatusBarPanel at the specified index.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.StatusBarEx.StatusBarPanelCollection.IsFixedSize">
            <summary>
            Gets a value indicating whether this collection is fixed-sized.
            </summary>
            <remarks>
            This property is always false for this collection.
            </remarks>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.StatusBarPanelBorderStyle">
            <summary>
            Specifies the appearance of the border for a <see cref="T:OpenNETCF.Windows.Forms.StatusBarPanel"/> on a <see cref="T:OpenNETCF.Windows.Forms.StatusBarEx"/> control.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.StatusBarPanelBorderStyle.None">
            <summary>
            Show the StatusBarPanel without any border.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.StatusBarPanelBorderStyle.Raised">
            <summary>
            Show the StatusBarPanel in 3D with a raised border.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.StatusBarPanelBorderStyle.Sunken">
            <summary>
            Show the StatusBarPanel in 3D with a sunken border
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.StatusBarPanel">
            <summary>
            Represents a panel in a <see cref="T:OpenNETCF.Windows.Forms.StatusBarEx"/> control.
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.StatusBarPanel.#ctor">
            <summary>
            Initializes a new instance of the StatusBarPanel class.
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.StatusBarPanel.ToString">
            <summary>
            This member overrides Object.ToString.
            </summary>
            <returns>A String that represents the current Object.</returns>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.StatusBarPanel.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the StatusBarPanel and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.StatusBarPanel.MinWidth">
            <summary>
            Gets or sets the minimum allowed width of the status bar panel within the <see cref="T:OpenNETCF.Windows.Forms.StatusBarEx"/> control.
            </summary>
            <value>The minimum width (in pixels) of the StatusBarPanel.</value>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.StatusBarPanel.Text">
            <summary>
            Gets or sets the text of the status bar panel.
            </summary>
            <value>The text displayed in the panel.</value>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.StatusBarPanel.Width">
            <summary>
            Gets or sets the width of the status bar panel within the StatusBarEx control.
            </summary>
            <value>The width (in pixels) of the StatusBarPanel.</value>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.StatusBarPanel.BorderStyle">
            <summary>
            Gets or sets the border style of the status bar panel.
            </summary>
            <value>One of the StatusBarPanelBorderStyle values. The default is Sunken.</value>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.StatusBarPanel.Parent">
            <summary>
            Gets the <see cref="T:OpenNETCF.Windows.Forms.StatusBarEx"/> control that hosts the status bar panel.
            </summary>
            <value>The StatusBarEx object that contains the panel.</value>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.SystemInformationEx">
            <summary>
            Provides information about the current system environment.
            <para><b>New in v1.3</b></para>
            </summary>
            <remarks>Enhances functionality available in <see cref="T:System.Windows.Forms.SystemInformation"/>.</remarks>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.SystemInformationEx.PowerStatus">
            <summary>
            Gets the current system power status.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.SystemInformationEx.PrimaryMonitorSize">
            <summary>
            Gets the dimensions, in pixels, of the current video mode of the primary display.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.SystemInformationEx.WorkingArea">
            <summary>
            Gets the size, in pixels, of the working area of the screen.
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.SystemSounds">
            <summary>
            Retrieves sounds associated with a set of Windows system sound event types.
            <para><b>New in v1.2</b></para>
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.SystemSounds.Beep">
            <summary>
            Gets the sound associated with the Beep program event.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.SystemSounds.Asterisk">
            <summary>
            Gets the sound associated with the Asterisk program event.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.SystemSounds.Exclamation">
            <summary>
            Gets the sound associated with the Exclamation program event.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.SystemSounds.Question">
            <summary>
            Gets the sound associated with the Question program event.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.SystemSounds.Hand">
            <summary>
            Gets the sound associated with the Hand program event.
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.SystemSound">
            <summary>
            Represents a standard system sound.
            <para><b>New in v1.2</b></para>
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.TextBoxStyle">
            <summary>
            Specifies the style of the <see cref="T:OpenNETCF.Windows.Forms.TextBoxEx"/>.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.TextBoxStyle.Default">
            <summary>
            Default.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.TextBoxStyle.Numeric">
            <summary>
            Text is all numeric.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.TextBoxStyle.UpperCase">
            <summary>
            Text is all upper-case.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.TextBoxStyle.LowerCase">
            <summary>
            Text is all lower-case.
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.TextBoxEx">
            <summary>
            Represents an enhanced TextBox.
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.TextBoxEx.#ctor">
            <summary>
            Create a new instance of TextBoxEx.
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.TextBoxEx.OnTextBoxStyleChanged(System.EventArgs)">
            <summary>
            Raises the OnStyleChanged event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.TextBoxEx.Cut">
            <summary>
            Moves the current selection in the <see cref="T:OpenNETCF.Windows.Forms.TextBoxEx"/> to the Clipboard.
            <para><b>New in v1.1</b></para>
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.TextBoxEx.Copy">
            <summary>
            Copies the current selection in the <see cref="T:OpenNETCF.Windows.Forms.TextBoxEx"/> to the Clipboard.
            <para><b>New in v1.1</b></para>
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.TextBoxEx.Paste">
            <summary>
            Replaces the current selection in the <see cref="T:OpenNETCF.Windows.Forms.TextBoxEx"/> with the contents of the Clipboard.
            <para><b>New in v1.1</b></para>
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.TextBoxEx.Clear">
            <summary>
            Clears all text from the <see cref="T:OpenNETCF.Windows.Forms.TextBoxEx"/> control.
            <para><b>New in v1.1</b></para>
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.TextBoxEx.Undo">
            <summary>
            Undoes the last edit operation in the <see cref="T:OpenNETCF.Windows.Forms.TextBoxEx"/>.
            <para><b>New in v1.1</b></para>
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.TextBoxEx.Handle">
            <summary>
            Gets the window handle that the control is bound to.
            </summary>
            <value>An IntPtr that contains the window handle (HWND) of the control.</value>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.TextBoxEx.Name">
            <summary>
            Gets the name of the control.
            <para><b>New in v1.3</b></para>
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.TextBoxEx.Tag">
            <summary>
            Gets or sets the object that contains data about the control.
            <para><b>New in v1.3</b></para>
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.TextBoxEx.Style">
            <summary>
            Sets the TextBoxStyle.
            </summary>
            <remarks>Similar to the CharacterCasing property in the full framework.</remarks>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.WebBrowser">
            <summary>
            Represents a controls that provides Web browsing capabilities.
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.WebBrowser.#ctor">
            <summary>
            Create a new instance of <see cref="T:OpenNETCF.Windows.Forms.WebBrowser"/>.
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.WebBrowser.AddText(System.String)">
            <summary>
            Adds HTML text to the WebBrowser control.
            </summary>
            <param name="text">HTML text to be added.</param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.WebBrowser.AddText(System.String,System.Boolean)">
            <summary>
            Adds text to the WebBrowser control.
            </summary>
            <param name="text">Text to be added.</param>
            <param name="plain">If TRUE text is treated as plain text, else treated as HTML Source.</param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.WebBrowser.Clear">
            <summary>
            Clears the contents of the WebBrowser.
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.WebBrowser.EndOfSource">
            <summary>
            Inform the WebBrowser that the current document is complete.
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.WebBrowser.GoHome">
            <summary>
            Navigates to the default home page.
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.WebBrowser.GoBack">
            <summary>
            Navigates the <see cref="T:OpenNETCF.Windows.Forms.WebBrowser"/> control to the previous page in the navigation history, if one is available.
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.WebBrowser.JumpToAnchor(System.String)">
            <summary>
            Instruct the WebBrowser to jump to the indicated anchor.
            <para><b>New in v1.3</b></para>
            </summary>
            <param name="anchor">The name of the anchor to which the HTML control is to jump.</param>
            <remarks>If the anchor is already in the document, the jump occurs immediately.
            If the specified anchor is not in the document, the request will be remembered such that, if the anchor is added, the jump will occur as soon as the anchor is available.
            While there is a pending anchor, any navigation commands from the user, such as keyboard scrolling or using the scroll bar, aborts the pending anchor jump.</remarks>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.WebBrowser.Navigate(System.String)">
            <summary>
            Loads the document at the specified URL into the <see cref="T:OpenNETCF.Windows.Forms.WebBrowser"/> control, replacing the previous document.
            </summary>
            <param name="url">The URL of the document to load.</param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.WebBrowser.Refresh">
            <summary>
            Reloads the document currently displayed in the WebBrowser control by checking the server for an updated version.
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.WebBrowser.Stop">
            <summary>
            Cancels any pending navigation and stops any dynamic page elements, such as background sounds and animations.
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.WebBrowser.SelectAll">
            <summary>
            Selects all the text in the current HTML page.
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.WebBrowser.OnDocumentCompleted(OpenNETCF.Windows.Forms.WebBrowserDocumentCompletedEventArgs)">
            <summary>
            Raises the <see cref="E:OpenNETCF.Windows.Forms.WebBrowser.DocumentCompleted"/> event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.WebBrowser.OnDocumentTitleChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:OpenNETCF.Windows.Forms.WebBrowser.DocumentTitleChanged"/> event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.WebBrowser.OnNavigated(OpenNETCF.Windows.Forms.WebBrowserNavigatedEventArgs)">
            <summary>
            Raises the <see cref="E:OpenNETCF.Windows.Forms.WebBrowser.Navigated"/> event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.WebBrowser.OnNavigating(OpenNETCF.Windows.Forms.WebBrowserNavigatingEventArgs)">
            <summary>
            Raises the <see cref="E:OpenNETCF.Windows.Forms.WebBrowser.Navigating"/> event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.WebBrowser.OnGotFocus(System.EventArgs)">
            <summary>
            Handles the control receiving input focus.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.WebBrowser.InitHTMLControl(System.IntPtr)">
            <summary>
            Initialise the native HTML control.
            </summary>
            <param name="hinst">Instance Handle.</param>
            <returns></returns>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.WebBrowser.CanGoBack">
            <summary>
            Gets a value indicating whether a previous page in navigation history is available.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.WebBrowser.DocumentText">
            <summary>
            Gets or sets the HTML contents of the page displayed in the WebBrowser control.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.WebBrowser.DocumentTitle">
            <summary>
            Gets the title of the document currently displayed in the WebBrowser control.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.WebBrowser.EnableClearType">
            <summary>
            Gets or sets a value indicating whether the control renders with ClearType text
            </summary>
            <remarks>By default ClearType is disabled.</remarks>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.WebBrowser.EnableContextMenu">
            <summary>
            Gets or sets a value which determines whether a ContextMenu is available for this control.
            </summary>
            <remarks>Setting this property to true will allow the default context menu to display.
            Note that if you supply a custom context menu using the ContextMenu property there is currently no way to disable the default menu - so it is not recommended you try to use a custom context menu.</remarks>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.WebBrowser.EnableScripting">
            <summary>
            Gets or sets a value indicating whether the control supports Scripting.
            </summary>
            <remarks>By default Scripting is enabled.</remarks>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.WebBrowser.EnableShrink">
            <summary>
            Gets or sets a value indicating whether the control renders with Shrink mode.
            </summary>
            <remarks>If shrink mode is enabled, the HTML control will shrink images as required to make the page fit the window.
            By default Shrink mode is enabled.</remarks>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.WebBrowser.LayoutHeight">
            <summary>
            Gets the height in pixels of the content in the WebBrowser.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.WebBrowser.LayoutWidth">
            <summary>
            Gets the width in pixels of the content in the WebBrowser.
            </summary>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.WebBrowser.Url">
            <summary>
            Gets or sets the URL of the current document.
            </summary>
        </member>
        <member name="E:OpenNETCF.Windows.Forms.WebBrowser.DocumentCompleted">
            <summary>
            Occurs when the <see cref="T:OpenNETCF.Windows.Forms.WebBrowser"/> control finishes loading a document.
            </summary>
        </member>
        <member name="E:OpenNETCF.Windows.Forms.WebBrowser.DocumentTitleChanged">
            <summary>
            Occurs when the <see cref="P:OpenNETCF.Windows.Forms.WebBrowser.DocumentTitle"/> property value changes.
            </summary>
        </member>
        <member name="E:OpenNETCF.Windows.Forms.WebBrowser.Navigated">
            <summary>
            Occurs when the <see cref="T:OpenNETCF.Windows.Forms.WebBrowser"/> control has navigated to a new document and has begun loading it.
            </summary>
        </member>
        <member name="E:OpenNETCF.Windows.Forms.WebBrowser.Navigating">
            <summary>
            Occurs before the <see cref="T:OpenNETCF.Windows.Forms.WebBrowser"/> control navigates to a new document.
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.WebBrowser.NM_HTMLCONTEXT">
            <summary>
            Structure passed with a Context Menu notification
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.WebBrowser.NAVIGATEFLAG.REFRESH">
            <summary>
            Forced refresh of the URL content from the server, without checking expiration time or last-modified time. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.WebBrowser.NAVIGATEFLAG.RELATIVE">
            <summary>
            The navigation is relative to the current page. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.WebBrowser.NAVIGATEFLAG.ENTERED">
            <summary>
            The user entered the URL for the navigation. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.WebBrowser.NAVIGATEFLAG.IGNORETARGET">
            <summary>
            The navigation is ignoring the TARGET attribute (if navigated via an &lt;A HREF&gt; tag. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.WebBrowser.NAVIGATEFLAG.GETFROMCACHE">
            <summary>
            Load the content from the cache, without checking expiration time. Go online only if no cache. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.WebBrowser.NAVIGATEFLAG.NOCACHE">
            <summary>
            Do not cache the content downloaded from the URL.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.WebBrowser.NAVIGATEFLAG.RESYNCHRONIZE">
            <summary>
            Check the server to see that the most recent content is available -- this option will allow the HTML control to go online without checking the expiration time. Then, the underlying code will compare the "last-modified" time with the server, and download the more recent content, if necessary.
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.WebBrowser.DTM">
            <summary>
            Messages which can be sent to the native Html control.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.WebBrowser.DTM.WM_USER">
            <summary>
            Base message
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.WebBrowser.DTM.ADDSTYLE">
            <summary>
            Sent by an application to the HTML viewer control to request that default stylesheet rules be applied to the current HTML window. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.WebBrowser.DTM.ADDTEXT">
            <summary>
            Sent by an application to add text to the HTML Control. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.WebBrowser.DTM.ADDTEXTW">
            <summary>
            Sent by an application to add Unicode text to the HTML control. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.WebBrowser.DTM.ANCHOR">
            <summary>
            Sent by an application to tell the HTML control to jump to the indicated anchor. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.WebBrowser.DTM.ANCHORW">
            <summary>
            Sent by an application to tell the HTML control to jump to the indicated anchor. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.WebBrowser.DTM.BROWSERDISPATCH">
            <summary>
             Sent by an application to the HTML viewer control to request a reference to its IDispatch interface. 	
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.WebBrowser.DTM.CLEAR">
            <summary>
             Sent by an application to clear the contents of the HTML control. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.WebBrowser.DTM.ENABLECLEARTYPE">
            <summary>
             Sent by an application to enable or disable ClearType for HTML text rendering. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.WebBrowser.DTM.ENABLECONTEXTMENU">
            <summary>
             Sent by an application to enable or disable the context-sensitive menu for the HTML control. 
             </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.WebBrowser.DTM.ENABLESCRIPTING">
            <summary>
             Sent by an application to enable or disable scripting for the HTML control. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.WebBrowser.DTM.ENABLESHRINK">
            <summary>
             Sent by an application to command the HTML control to toggle the image shrink enable mode, or shrink mode. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.WebBrowser.DTM.ENDOFSOURCE">
            <summary>
             Sent by an application to inform the HTML control that the document is complete. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.WebBrowser.DTM.IMAGEFAIL">
            <summary>
            Sent by an application to inform the HTML control that the image indicated by the cookie could not be loaded. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.WebBrowser.DTM.ISSELECTION">
            <summary>
             Sent by an application to determine if some text was selected in the HTML control. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.WebBrowser.DTM.LAYOUTHEIGHT">
            <summary>
             Sent by an application to determine the layout height (in pixels) of the content in the HTML control. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.WebBrowser.DTM.LAYOUTWIDTH">
            <summary>
             Sent by an application to determine the layout width (in pixels) of the content in the HTML control. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.WebBrowser.DTM.NAVIGATE">
            <summary>
             Sent by an application to navigate to a particular URL in the HTML control. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.WebBrowser.DTM.SELECTALL">
            <summary>
             Sent by an application to tell an HTML viewer control to select all the text in the current HTML page. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.WebBrowser.DTM.SETIMAGE">
            <summary>
             Sent by an application to associate a bitmap with an image. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.WebBrowser.DTM.STOP">
            <summary>
             Sent by an application to STOP a navigation started in the HTML control. 
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.WebBrowser.DTM.ZOOMLEVEL">
            <summary>
            Sent by an application to specify the zoom level (0-4). 
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.WebBrowser.NM">
            <summary>
            Notifications received from the native control
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.WebBrowser.NM.HOTSPOT">
            <summary>
            Sent by the HTML viewer control if the user taps on a link or submits a form.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.WebBrowser.NM.INLINE_IMAGE">
            <summary>
            Sent by the HTML viewer control to notify the application to load the image.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.WebBrowser.NM.INLINE_SOUND">
            <summary>
            Sent by the HTML viewer control to notify the application to load the sound.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.WebBrowser.NM.TITLE">
            <summary>
            Sent by the HTML viewer control to notify the application and provide the title of the HTML document.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.WebBrowser.NM.META">
            <summary>
            Sent by the HTML viewer control to notify the application and provide the HTTP-EQUIV and CONTENT parameters of the META tag in the HTML document.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.WebBrowser.NM.BASE">
            <summary>
            Sent by the HTML viewer control when it encounters a BASE tag in an HTML document.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.WebBrowser.NM.CONTEXTMENU">
            <summary>
            Sent by the HTML viewer control when a user holds the stylus down in the viewer window before a context menu appears.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.WebBrowser.NM.INLINEXML">
            <summary>
            Sent by the HTML viewer control to notify the application that XML was loaded.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.WebBrowser.NM.BEFORENAVIGATE">
            <summary>
            Sent by the HTML viewer control before a navigation request to a URL begins.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.WebBrowser.NM.DOCUMENTCOMPLETE">
            <summary>
            Sent by the HTML viewer control when the document navigation is complete.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.WebBrowser.NM.NAVIGATECOMPLETE">
            <summary>
            Sent by the HTML viewer control when a navigation request has completed.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.WebBrowser.NM.TITLECHANGE">
            <summary>
            Sent by the HTML viewer control when the document title changes.
            </summary>
        </member>
        <member name="F:OpenNETCF.Windows.Forms.WebBrowser.NM.INLINESTYLE">
            <summary>
            *DOCUMENTATION UNAVAILABLE*
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.WebBrowserDocumentCompletedEventHandler">
            <summary>
            Represents the method that will handle the DocumentCompleted event of a <see cref="T:OpenNETCF.Windows.Forms.WebBrowser"/> control.
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.WebBrowserDocumentCompletedEventArgs">
            <summary>
            Provides data for the DocumentCompleted event.
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.WebBrowserDocumentCompletedEventArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the WebBrowserDocumentCompletedEventArgs class.
            </summary>
            <param name="url">The URL of the newly loaded document.</param>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.WebBrowserDocumentCompletedEventArgs.Url">
            <summary>
            Gets the URL of the document to which the WebBrowser control has navigated.
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.WebBrowserNavigatedEventHandler">
            <summary>
            Represents the method that will handle the Navigated event of a <see cref="T:OpenNETCF.Windows.Forms.WebBrowser"/> control.
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.WebBrowserNavigatedEventArgs">
            <summary>
            Provides data for the Navigated event.
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.WebBrowserNavigatedEventArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the WebBrowserNavigatedEventArgs class.
            </summary>
            <param name="url">The URL of the document to which the WebBrowser control has navigated.</param>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.WebBrowserNavigatedEventArgs.Url">
            <summary>
            Gets the URL of the document to which the WebBrowser control has navigated.
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.WebBrowserNavigatingEventHandler">
            <summary>
            Represents the method that will handle the Navigating event of a <see cref="T:OpenNETCF.Windows.Forms.WebBrowser"/> control.
            </summary>
        </member>
        <member name="T:OpenNETCF.Windows.Forms.WebBrowserNavigatingEventArgs">
            <summary>
            Provides data for the Navigating event.
            </summary>
        </member>
        <member name="M:OpenNETCF.Windows.Forms.WebBrowserNavigatingEventArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the WebBrowserNavigatingEventArgs class.
            </summary>
            <param name="url">The URL of the newly loaded document.</param>
        </member>
        <member name="P:OpenNETCF.Windows.Forms.WebBrowserNavigatingEventArgs.Url">
            <summary>
            Gets the URL of the document to which the WebBrowser control is navigating.
            </summary>
        </member>
        <member name="T:OpenNETCF.Win32.DTN">
            <summary>
            DateTimePicker Notifications.
            <para><b>New in v1.3</b></para>
            </summary>
        </member>
        <member name="T:OpenNETCF.Win32.DTM">
            <summary>
            DateTimePicker Messages.
            <para><b>New in v1.3</b></para>
            </summary>
        </member>
        <member name="T:OpenNETCF.Win32.DTS">
            <summary>
            DateTimePicker Styles.
            <para><b>New in v1.3</b></para>
            </summary>
        </member>
        <member name="T:OpenNETCF.Win32.MCSC">
            <summary>
            MonthCalendar Colors.
            <para><b>New in v1.3</b></para>
            </summary>
        </member>
        <member name="T:OpenNETCF.Win32.MCS">
            <summary>
            MonthCalendar styles.
            <para><b>New in v1.3</b></para>
            </summary>
        </member>
        <member name="T:OpenNETCF.Win32.MCM">
            <summary>
            MonthCalendar Messages.
            <para><b>New in v1.3</b></para>
            </summary>
        </member>
        <member name="T:OpenNETCF.Win32.MCN">
            <summary>
            MonthCalendar notifications.
            <para><b>New in v1.3</b></para>
            </summary>
        </member>
        <member name="T:OpenNETCF.Win32.GDTR">
            <summary>
            GetDateTimeRange.
            <para><b>New in v1.3</b></para>
            </summary>
        </member>
        <member name="T:OpenNETCF.Win32.HS">
            <summary>
            HTML control styles.
            <para><b>New in v1.3</b></para>
            </summary>
        </member>
    </members>
</doc>
