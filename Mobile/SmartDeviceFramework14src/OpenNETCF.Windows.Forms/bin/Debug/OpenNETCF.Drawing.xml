<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OpenNETCF.Drawing</name>
    </assembly>
    <members>
        <member name="T:OpenNETCF.Win32.BitmapFileHeader">
            <summary>
            This structure contains information about the type, size, and layout of a file that containing a device-independent bitmap (DIB).
            </summary>
            <remarks>Wraps the native <b>BITMAPFILEHEADER</b> structure</remarks>
        </member>
        <member name="P:OpenNETCF.Win32.BitmapFileHeader.Type">
            <summary>
            Specifies the file type. It must be BM.
            </summary>
        </member>
        <member name="P:OpenNETCF.Win32.BitmapFileHeader.Size">
            <summary>
            Specifies the size, in bytes, of the bitmap file.
            </summary>
        </member>
        <member name="P:OpenNETCF.Win32.BitmapFileHeader.OffBits">
            <summary>
            Specifies the offset, in bytes, from the <b>BitmapFileHeader</b> structure to the bitmap bits.
            </summary>
        </member>
        <member name="T:OpenNETCF.Drawing.GraphicsEx">
            <summary>
            Encapsulates a GDI+ drawing surface.
            </summary>
        </member>
        <member name="M:OpenNETCF.Drawing.GraphicsEx.FromHdc(System.IntPtr)">
            <summary>
            Creates a new <see cref="T:OpenNETCF.Drawing.GraphicsEx"/> object from the specified native graphics handle.  
            </summary>
            <param name="nativeGraphics">native graphics handle.</param>
        </member>
        <member name="M:OpenNETCF.Drawing.GraphicsEx.FromHwnd(System.IntPtr)">
            <summary>
            Creates a new <see cref="T:OpenNETCF.Drawing.GraphicsEx"/> object from the specified handle to a window.  
            </summary>
            <param name="hwnd">Handle to a window.</param>
            <returns>This method returns a new <see cref="T:OpenNETCF.Drawing.GraphicsEx"/> object for the specified window handle.  </returns>
        </member>
        <member name="M:OpenNETCF.Drawing.GraphicsEx.FromControl(System.Windows.Forms.Control)">
            <summary>
            Creates a new <see cref="T:OpenNETCF.Drawing.GraphicsEx"/> object from the specified <see cref="T:System.Windows.Forms.Control"/> object.  
            </summary>
            <param name="ctl"><see cref="T:System.Windows.Forms.Control"/> object</param>
            <returns>This method returns a new OpenNETCF.Drawing.GraphicsEx object for the specified specified Control object.</returns>
        </member>
        <member name="M:OpenNETCF.Drawing.GraphicsEx.CompatibleGraphics(System.Windows.Forms.Control)">
            <summary>
            Creates a new copy of <see cref="T:OpenNETCF.Drawing.GraphicsEx"/> object from the specified Control object.  
            </summary>
            <param name="ctl"><see cref="T:System.Windows.Forms.Control"/> object.</param>
            <returns>This method returns a new <see cref="T:OpenNETCF.Drawing.GraphicsEx"/> object for the specified specified Control object.</returns>
        </member>
        <member name="M:OpenNETCF.Drawing.GraphicsEx.CompatibleGraphics">
            <summary>
            Creates a new copy of <see cref="T:OpenNETCF.Drawing.GraphicsEx"/> object from the existing <see cref="T:OpenNETCF.Drawing.GraphicsEx"/> objec.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.GraphicsEx.CopyGraphics(System.Windows.Forms.Control,System.Drawing.Rectangle)">
            <summary>
            Copies the graphics.
            </summary>
            <param name="ctl"></param>
            <param name="rc"></param>
        </member>
        <member name="M:OpenNETCF.Drawing.GraphicsEx.CopyGraphics(OpenNETCF.Drawing.GraphicsEx,System.Drawing.Rectangle)">
            <summary>
            Copies the graphics.
            </summary>
            <param name="gx"></param>
            <param name="rc"></param>
        </member>
        <member name="M:OpenNETCF.Drawing.GraphicsEx.CopyGraphics(System.Windows.Forms.Control,System.Drawing.Rectangle,System.Drawing.Color)">
            <summary>
            Copies graphics from <see cref="T:System.Windows.Forms.Control"/> with transparent color.
            </summary>
            <param name="ctl">Control to copy graphics from</param>
            <param name="rc">Rectangle to copy.</param>
            <param name="transpColor">Transaprent color.</param>
        </member>
        <member name="M:OpenNETCF.Drawing.GraphicsEx.DrawRectangle(OpenNETCF.Drawing.PenEx,System.Drawing.Rectangle)">
            <summary>
            Draws a rectangle specified by a <see cref="T:System.Drawing.Rectangle"/> structure. 
            </summary>
            <param name="pen">A <see cref="T:OpenNETCF.Drawing.PenEx"/> object that determines the color, width, and style of the rectangle. </param>
            <param name="rc">A <see cref="T:System.Drawing.Rectangle"/> structure that represents the rectangle to draw. </param>
        </member>
        <member name="M:OpenNETCF.Drawing.GraphicsEx.DrawRectangle(OpenNETCF.Drawing.PenEx,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a rectangle.
            </summary>
            <param name="pen">A <see cref="T:OpenNETCF.Drawing.PenEx"/> object that determines the color, width, and style of the rectangle. </param>
            <param name="x">x: x-coordinate of the upper-left corner of the rectangle to draw. </param>
            <param name="y"> y: y-coordinate of the upper-left corner of the rectangle to draw.  </param>
            <param name="cx">width: width of the rectangle to draw. </param>
            <param name="cy">height: Height of the rectangle to draw. </param>
        </member>
        <member name="M:OpenNETCF.Drawing.GraphicsEx.MeasureString(System.String,OpenNETCF.Drawing.FontEx,System.Int32)">
            <summary>
            Measures the specified string when drawn with the specified <see cref="T:OpenNETCF.Drawing.FontEx"/> object.  
            </summary>
            <param name="text">String to measure.</param>
            <param name="font"><see cref="T:OpenNETCF.Drawing.FontEx"/> object that defines the text format of the string.</param>
            <param name="width">Width to fit the string.</param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.GraphicsEx.MeasureString(System.String,OpenNETCF.Drawing.FontEx)">
            <summary>
            Measures the specified string when drawn with the specified <see cref="T:OpenNETCF.Drawing.FontEx"/> object.  
            </summary>
            <param name="text"><see cref="T:System.String"/> to measure.</param>
            <param name="font"><see cref="T:OpenNETCF.Drawing.FontEx"/> object that defines the text format of the string.</param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Drawing.GraphicsEx.FillRectangle(System.Drawing.Color,System.Drawing.Rectangle)">
            <summary>
            Fills the interior of a rectangle specified by a <see cref="T:System.Drawing.Rectangle"/> structure.  
            </summary>
            <param name="color">The <see cref="T:System.Drawing.Color"/> to fill.</param>
            <param name="rc"><see cref="T:System.Drawing.Rectangle"/> structure that represents the rectangle to fill. </param>
        </member>
        <member name="M:OpenNETCF.Drawing.GraphicsEx.DrawString(System.String,OpenNETCF.Drawing.FontEx,System.Drawing.Color,System.Drawing.Rectangle)">
            <summary>
            Draws the specified text string at the specified location with the specified <see cref="T:System.Drawing.Color"/> and <see cref="T:OpenNETCF.Drawing.FontEx"/> objects.
            </summary>
            <param name="text">String to draw</param>
            <param name="font"><see cref="T:OpenNETCF.Drawing.FontEx"/> object that defines the text format of the string</param>
            <param name="textColor">The <see cref="T:System.Drawing.Color"/> of text draw.</param>
            <param name="rc">Rectangle structure that specifies the location of the drawn text</param>
        </member>
        <member name="M:OpenNETCF.Drawing.GraphicsEx.DrawRoundRectangle(OpenNETCF.Drawing.PenEx,System.Drawing.Rectangle,System.Drawing.Size)">
            <summary>
            Draws a rectangle with rounded corners.
            </summary>
            <param name="pen">A <see cref="T:OpenNETCF.Drawing.PenEx"/> object that determines the color, width, and style of the rectangle</param>
            <param name="rc">A <see cref="T:System.Drawing.Rectangle"/> structure that represents the rectangle to draw.</param>
            <param name="size">A <see cref="T:System.Drawing.Size"/> structre that defines the corner radius.</param>
        </member>
        <member name="M:OpenNETCF.Drawing.GraphicsEx.DrawEllipse(OpenNETCF.Drawing.PenEx,System.Drawing.Rectangle)">
            <summary>
            Draws an ellipse specified by a bounding <see cref="T:System.Drawing.Rectangle"/> structure.
            <para><b>New in v1.3</b></para>
            </summary>
            <param name="pen">A <see cref="T:OpenNETCF.Drawing.PenEx"/> object that determines the color, width, and style of the ellipse.</param>
            <param name="rc">A <see cref="T:System.Drawing.Rectangle"/> structure that represents the rectangle to draw.</param>
        </member>
        <member name="M:OpenNETCF.Drawing.GraphicsEx.DrawEllipse(OpenNETCF.Drawing.PenEx,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws an ellipse defined by a bounding rectangle specified by a pair of coordinates, a height, and a width.
            <para><b>New in v1.3</b></para>
            </summary>
            <param name="pen">A <see cref="T:OpenNETCF.Drawing.PenEx"/> object that determines the color, width, and style of the ellipse.</param>
            <param name="x">x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</param>
            <param name="y">y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</param>
            <param name="width">Width of the bounding rectangle that defines the ellipse.</param>
            <param name="height">Height of the bounding rectangle that defines the ellipse.</param>
        </member>
        <member name="M:OpenNETCF.Drawing.GraphicsEx.DrawImage(OpenNETCF.Drawing.BitmapEx,System.Int32,System.Int32)">
            <summary>
            Draws the specified <see cref="T:OpenNETCF.Drawing.BitmapEx"/> object at the specified location and with the original size.  
            </summary>
            <param name="image"><see cref="T:OpenNETCF.Drawing.BitmapEx"/> object to draw.</param>
            <param name="x">x-coordinate of the upper-left corner of the drawn image.</param>
            <param name="y">y-coordinate of the upper-top corner of the drawn image.</param>
        </member>
        <member name="M:OpenNETCF.Drawing.GraphicsEx.DrawImage(OpenNETCF.Drawing.BitmapEx,System.Drawing.Rectangle,System.Drawing.Rectangle)">
            <summary>
            Draws the specified portion of the specified System.Drawing.Image object at the specified location and with the specified size.  
            </summary>
            <param name="image"><see cref="!:BitmapxEx"/> object to draw.</param>
            <param name="destRect"><see cref="T:System.Drawing.Rectangle"/> structure that specifies the location and size of the drawn image.
            The image is scaled to fit the rectangle.</param>
            <param name="srcRect"><see cref="T:System.Drawing.Rectangle"/> structure that specifies the portion of the image object to draw.</param>
        </member>
        <member name="M:OpenNETCF.Drawing.GraphicsEx.DrawLine(OpenNETCF.Drawing.PenEx,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a line connecting the two points specified by coordinate pairs.  
            </summary>
            <param name="pen">PenEx object that determines the color, width, and style of the line.</param>
            <param name="xStart">x-coordinate of the first point.</param>
            <param name="yStart">y-coordinate of the first point.</param>
            <param name="xEnd">x-coordinate of the second point.</param>
            <param name="yEnd">x-coordinate of the seconf point.</param>
        </member>
        <member name="M:OpenNETCF.Drawing.GraphicsEx.GetHdc">
            <summary>
            Gets the handle to the device context associated with this <see cref="T:OpenNETCF.Drawing.GraphicsEx"/> object.
            <para><b>New in v1.3</b></para>
            </summary>
            <returns>Handle to the device context associated with this <see cref="T:OpenNETCF.Drawing.GraphicsEx"/> object</returns>
        </member>
        <member name="T:OpenNETCF.Drawing.Drawing2D.DashStyle">
            <summary>
            Specifies the style of dashed lines drawn with a <see cref="T:OpenNETCF.Drawing.PenEx"/> object.
            <para><b>New in v1.3</b></para>
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Drawing2D.DashStyle.Dash">
            <summary>
            Specifies a line consisting of dashes.
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.Drawing2D.DashStyle.Solid">
            <summary>
            Specifies a solid line.
            </summary>
        </member>
        <member name="T:OpenNETCF.Win32.GDI">
            <summary>
            GDI P/Invokes and definitions.
            <para><b>New in v1.3</b></para>
            </summary>
            <remarks>Previously part of <see cref="T:OpenNETCF.Win32.Core"/>.</remarks>
        </member>
        <member name="M:OpenNETCF.Win32.GDI.SetTextColor(System.IntPtr,System.Int32)">
            <summary>
            Set the forecolor of text in the selected DC
            </summary>
            <param name="hdc"></param>
            <param name="crColor"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Win32.GDI.GetTextColor(System.IntPtr)">
            <summary>
            Get the forecolor of text in the selected DC
            </summary>
            <param name="hdc"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Win32.GDI.SetBkColor(System.IntPtr,System.Int32)">
            <summary>
            Set the backcolor in the selected DC
            </summary>
            <param name="hdc"></param>
            <param name="crColor"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Win32.GDI.SetBkMode(System.IntPtr,OpenNETCF.Win32.GDI.BackgroundMode)">
            <summary>
            Set the backmode in the selected DC
            </summary>
            <param name="hdc"></param>
            <param name="iBkMode"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Win32.GDI.SelectObject(System.IntPtr,System.IntPtr)">
            <summary>
            Select a system object (FONT, DC, etc.)
            </summary>
            <param name="hdc"></param>
            <param name="hgdiobj"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Win32.GDI.ReleaseDC(System.IntPtr,System.IntPtr)">
            <summary>
            Release a Device Context
            </summary>
            <param name="hWnd"></param>
            <param name="hDC"></param>
        </member>
        <member name="M:OpenNETCF.Win32.GDI.GetWindowDC(System.IntPtr)">
            <summary>
            Get the DC for the specified window
            </summary>
            <param name="hWnd">Native window handle of the window.</param>
            <returns>Device Context Handle for specified window.</returns>
        </member>
        <member name="M:OpenNETCF.Win32.GDI.GetDC(System.IntPtr)">
            <summary>
            Get the DC for the specified window handle
            </summary>
            <param name="hWnd"></param>
            <returns></returns>
        </member>
        <member name="M:OpenNETCF.Win32.GDI.Rectangle(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draw a rectangle in a DC
            </summary>
            <param name="hdc"></param>
            <param name="nLeftRect"></param>
            <param name="nTopRect"></param>
            <param name="nRightRect"></param>
            <param name="nBottomRect"></param>
        </member>
        <member name="M:OpenNETCF.Win32.GDI.GetObject(System.IntPtr,System.Int32,System.Byte[])">
            <summary>
            This function obtains information about a specified graphics object.
            </summary>
            <param name="hObj">Handle to the graphics object of interest.</param>
            <param name="cb">Specifies the number of bytes of information to be written to the buffer.</param>
            <param name="objdata">a buffer that is to receive the information about the specified graphics object.</param>
            <returns>If the function succeeds, and lpvObject is a valid pointer, the return value is the number of bytes stored into the buffer.</returns>
        </member>
        <member name="M:OpenNETCF.Win32.GDI.GetObject(System.IntPtr,System.Int32,OpenNETCF.Win32.DibSection)">
            <summary>
            This function obtains information about a specified graphics object.
            </summary>
            <param name="hObj">Handle to the graphics object of interest.</param>
            <param name="cb">Specifies the number of bytes of information to be written to the buffer.</param>
            <param name="objdata">a buffer that is to receive the information about the specified graphics object.</param>
            <returns>If the function succeeds, and lpvObject is a valid pointer, the return value is the number of bytes stored into the buffer.</returns>
        </member>
        <member name="M:OpenNETCF.Win32.GDI.CreateSolidBrush(System.Int32)">
            <summary>
            This function creates a logical brush that has the specified solid color.
            </summary>
            <param name="crColor">Specifies the color of the brush.</param>
            <returns>A handle that identifies a logical brush indicates success.</returns>
        </member>
        <member name="T:OpenNETCF.Win32.GDI.RegionFlags">
            <summary>
            Region type
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.GDI.RegionFlags.NULLREGION">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.GDI.RegionFlags.SIMPLEREGION">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.GDI.RegionFlags.COMPLEXREGION">
            <summary>
            
            </summary>
        </member>
        <member name="T:OpenNETCF.Win32.GDI.BackgroundMode">
            <summary>
            Background mode
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.GDI.BackgroundMode.TRANSPARENT">
            <summary>
            Background is Transparent.
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.GDI.BackgroundMode.OPAQUE">
            <summary>
            Background is Opaque.
            </summary>
        </member>
        <member name="T:OpenNETCF.Drawing.GDIPlus">
            <summary>
            Summary description for GDIPlus.
            </summary>
        </member>
        <member name="M:OpenNETCF.Drawing.GDIPlus.CreateFontIndirect(System.IntPtr)">
            <summary>
            This function creates a logical font that has the characteristics specified in the specified structure. 
            An application can subsequently select the font as the current font for any device context (DC). 			
            </summary>
            <param name="pLogFont">Long pointer to a <see cref="T:OpenNETCF.Drawing.GDIPlus.LOGFONT"/> that defines the characteristics of the logical font.</param>
            <returns>A handle to a logical font.</returns>
        </member>
        <member name="T:OpenNETCF.Drawing.GDIPlus.LOGFONT">
            <summary>
            This structure defines the attributes of a font.
            </summary>
        </member>
        <member name="T:OpenNETCF.Win32.BitmapInfoHeader">
            <summary>
            Contains information about the dimensions and color format of a device-independent bitmap (DIB).
            </summary>
            <remarks>Wrapper for Win32 <b>BITMAPINFOHEADER</b> structure</remarks>
        </member>
        <member name="P:OpenNETCF.Win32.BitmapInfoHeader.Size">
            <summary>
            Specifies the number of bytes required by the structure.
            </summary>
        </member>
        <member name="P:OpenNETCF.Win32.BitmapInfoHeader.Width">
            <summary>
            Specifies the width of the bitmap, in pixels.
            </summary>
        </member>
        <member name="P:OpenNETCF.Win32.BitmapInfoHeader.Height">
            <summary>
            Specifies the height of the bitmap, in pixels.
            If biHeight is positive, the bitmap is a bottom-up DIB and its origin is the lower-left corner.
            If biHeight is negative, the bitmap is a top-down DIB and its origin is the upper-left corner.
            If biHeight is negative, indicating a top-down DIB, biCompression must be either BI_RGB or BI_BITFIELDS.
            Top-down DIBs cannot be compressed.
            </summary>
        </member>
        <member name="P:OpenNETCF.Win32.BitmapInfoHeader.Planes">
            <summary>
            Specifies the number of planes for the target device.
            This value must be set to 1.
            </summary>
        </member>
        <member name="P:OpenNETCF.Win32.BitmapInfoHeader.BitCount">
            <summary>
            Specifies the number of bits per pixel.
            The biBitCount member determines the number of bits that define each pixel and the maximum number of colors in the bitmap.
            </summary>
        </member>
        <member name="P:OpenNETCF.Win32.BitmapInfoHeader.Compression">
            <summary>
            Specifies the type of compression for a compressed bottom-up bitmap (top-down DIBs cannot be compressed).
            </summary>
        </member>
        <member name="P:OpenNETCF.Win32.BitmapInfoHeader.SizeImage">
            <summary>
            Specifies the size, in bytes, of the image. This may be set to zero for BI_RGB bitmaps.
            </summary>
        </member>
        <member name="P:OpenNETCF.Win32.BitmapInfoHeader.XPelsPerMeter">
            <summary>
            Specifies the horizontal resolution, in pixels per meter, of the target device for the bitmap.
            An application can use this value to select a bitmap from a resource group that best matches the characteristics of the current device.
            </summary>
        </member>
        <member name="P:OpenNETCF.Win32.BitmapInfoHeader.YPelsPerMeter">
            <summary>
            Specifies the vertical resolution, in pixels per meter, of the target device for the bitmap
            </summary>
        </member>
        <member name="P:OpenNETCF.Win32.BitmapInfoHeader.ClrUsed">
            <summary>
            Specifies the number of color indexes in the color table that are actually used by the bitmap.
            If this value is zero, the bitmap uses the maximum number of colors corresponding to the value of the biBitCount member for the compression mode specified by biCompression.
            </summary>
        </member>
        <member name="P:OpenNETCF.Win32.BitmapInfoHeader.ClrImportant">
            <summary>
            Specifies the number of color indexes required for displaying the bitmap.
            If this value is zero, all colors are required.
            </summary>
        </member>
        <member name="T:OpenNETCF.Drawing.ColorTranslator">
            <summary>
            Translates colors to and from <see cref="T:System.Drawing.Color"/> structures.
            </summary>
            <seealso cref="T:System.Drawing.ColorTranslator">System.Drawing.ColorTranslator Class</seealso>
        </member>
        <member name="M:OpenNETCF.Drawing.ColorTranslator.ToHtml(System.Drawing.Color)">
            <summary>
            Translates the specified <see cref="T:System.Drawing.Color"/> structure to an HTML string color representation.
            </summary>
            <param name="c">The <see cref="T:System.Drawing.Color"/> structure to translate.</param>
            <returns>The string that represents the HTML color.</returns>
            <remarks>Unlike the desktop version of this function it does not check for named colors but instead always returns the hex notation values - e.g. Color.Red = "#FF0000"</remarks>
            <seealso cref="M:System.Drawing.ColorTranslator.ToHtml(System.Drawing.Color)">System.Drawing.ColorTranslator.ToHtml Method</seealso>
        </member>
        <member name="M:OpenNETCF.Drawing.ColorTranslator.ToWin32(System.Drawing.Color)">
            <summary>
            Translates the specified <see cref="T:System.Drawing.Color"/> structure to a Windows color.
            </summary>
            <param name="c">The <see cref="T:System.Drawing.Color"/> structure to translate.</param>
            <returns>The Windows color value.</returns>
            <seealso cref="M:System.Drawing.ColorTranslator.ToWin32(System.Drawing.Color)">System.Drawing.ColorTranslator.ToWin32 Method</seealso>
        </member>
        <member name="M:OpenNETCF.Drawing.ColorTranslator.FromHtml(System.String)">
            <summary>
            Translates an HTML color representation to a <see cref="T:System.Drawing.Color"/> structure.
            </summary>
            <param name="htmlColor">The string representation of the Html color to translate.</param>
            <returns>The <see cref="T:System.Drawing.Color"/> structure that represents the translated HTML color.</returns>
            <seealso cref="M:System.Drawing.ColorTranslator.FromHtml(System.String)">System.Drawing.ColorTranslator.FromHtml Method</seealso>
        </member>
        <member name="M:OpenNETCF.Drawing.ColorTranslator.FromWin32(System.Int32)">
            <summary>
            Translates a Windows color value to a <see cref="T:System.Drawing.Color"/> structure.
            </summary>
            <param name="win32Color">The Windows color to translate.</param>
            <returns>The <see cref="T:System.Drawing.Color"/> structure that represents the translated Windows color.</returns>
            <seealso cref="M:System.Drawing.ColorTranslator.FromWin32(System.Int32)">System.Drawing.ColorTranslator.FromWin32 Method</seealso>
        </member>
        <member name="T:OpenNETCF.Drawing.BitmapEx">
            <summary>
            Encapsulates a GDI+ bitmap, which consists of the pixel data for a graphics image and its attributes. A BitmapEx object is an object used to work with images defined by pixel data. 
            </summary>
        </member>
        <member name="M:OpenNETCF.Drawing.BitmapEx.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the BitmapEx class with the specified size.  
            </summary>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:OpenNETCF.Drawing.BitmapEx.#ctor(System.String)">
            <summary>
            Initializes a new instance of the System.Drawing.Bitmap class from the specified file.  
            </summary>
            <param name="filename"></param>
        </member>
        <member name="M:OpenNETCF.Drawing.BitmapEx.GetHbitmap">
            <summary>
            Creates a GDI bitmap object from this BitmapEx object.  
            </summary>
            <returns>A handle to the GDI bitmap object that this method creates.</returns>
        </member>
        <member name="M:OpenNETCF.Drawing.BitmapEx.LockBits(System.Drawing.Rectangle,System.Int32,OpenNETCF.Drawing.Imaging.PixelFormat)">
            <summary>
            BitmapEx object into system memory.  
            </summary>
            <param name="rect">A System.Drawing.Rectangle structure specifying the portion of the BitmapEx to lock.  </param>
            <param name="flags">Access level (read and write) for the BitmapEx object. ></param>
            <param name="format">PixelFormat enumeration specifying the data format of this BitmapEx object.</param>
            <returns>BitmapData object containing information about this lock operation.  </returns>
        </member>
        <member name="M:OpenNETCF.Drawing.BitmapEx.UnlockBits(OpenNETCF.Drawing.Imaging.BitmapData)">
            <summary>
            Unlocks this BitmapEx from system memory.  
            </summary>
            <param name="data"></param>
        </member>
        <member name="P:OpenNETCF.Drawing.BitmapEx.Width">
            <summary>
            Gets the width of this BitmapEx object.
            </summary>
        </member>
        <member name="P:OpenNETCF.Drawing.BitmapEx.Height">
            <summary>
            Gets the height of this BitmapEx object.
            </summary>
        </member>
        <member name="T:OpenNETCF.Drawing.Imaging.BitmapData">
            <summary>
            Specifies the attributes of a bitmap image. The BitmapData class is used by the LockBits and UnlockBits methods of the BitmapEx class.
            </summary>
        </member>
        <member name="P:OpenNETCF.Drawing.Imaging.BitmapData.PixelFormat">
            <summary>
            Gets or sets the format of the pixel information.
            </summary>
        </member>
        <member name="P:OpenNETCF.Drawing.Imaging.BitmapData.Scan0">
            <summary>
            Gets or sets the address of the first pixel data in the bitmap.
            </summary>
        </member>
        <member name="P:OpenNETCF.Drawing.Imaging.BitmapData.Stride">
            <summary>
            Gets or sets the stride width (also called scan width) of the bitmap object.  
            </summary>
        </member>
        <member name="P:OpenNETCF.Drawing.Imaging.BitmapData.Width">
            <summary>
            Gets or sets the pixel width of the BitmapEx object. This can also be thought of as the number of pixels in one scan line.  
            </summary>
        </member>
        <member name="P:OpenNETCF.Drawing.Imaging.BitmapData.Height">
            <summary>
            Gets or sets the pixel height of the BitmapEx object. 
            </summary>
        </member>
        <member name="T:OpenNETCF.Drawing.ContentAlignment">
            <summary>
            Specifies alignment of content on the drawing surface.
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.ContentAlignment.BottomCenter">
            <summary>
            Content is vertically aligned at the bottom, and horizontally aligned at the center.
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.ContentAlignment.BottomLeft">
            <summary>
            Content is vertically aligned at the bottom, and horizontally aligned on the left.
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.ContentAlignment.BottomRight">
            <summary>
            Content is vertically aligned at the bottom, and horizontally aligned on the right.
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.ContentAlignment.MiddleCenter">
            <summary>
            Content is vertically aligned in the middle, and horizontally aligned at the center.
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.ContentAlignment.MiddleLeft">
            <summary>
            Content is vertically aligned in the middle, and horizontally aligned on the left.
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.ContentAlignment.MiddleRight">
            <summary>
            Content is vertically aligned in the middle, and horizontally aligned on the right.
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.ContentAlignment.TopCenter">
            <summary>
            Content is vertically aligned at the top, and horizontally aligned at the center.
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.ContentAlignment.TopLeft">
            <summary>
            Content is vertically aligned at the top, and horizontally aligned on the left.
            </summary>
        </member>
        <member name="F:OpenNETCF.Drawing.ContentAlignment.TopRight">
            <summary>
            Content is vertically aligned at the top, and horizontally aligned on the right.
            </summary>
        </member>
        <member name="T:OpenNETCF.Drawing.FontEx">
            <summary>
            Defines a particular format for text, including font face, size, and style attributes. 
            </summary>
        </member>
        <member name="M:OpenNETCF.Drawing.FontEx.#ctor(System.String,System.Single,System.Drawing.FontStyle)">
            <summary>
            Initializes a new FontEx object that uses the specified attributes.  
            </summary>
            <param name="fontName">A string representation of the System.Drawing.FontFamily object.</param>
            <param name="size">The size of the new FontEx object.</param>
            <param name="fontStyle">The style of the new FontEx object.</param>
        </member>
        <member name="M:OpenNETCF.Drawing.FontEx.ToHfont">
            <summary>
            Returns a handle to this FontEx object.
            <para><b>New in v1.3</b></para>
            </summary>
            <returns>A Windows handle to this FontEx object.</returns>
        </member>
        <member name="P:OpenNETCF.Drawing.FontEx.Name">
            <summary>
            Gets the face name of this FontEx object.
            <para><b>New in v1.3</b></para>
            </summary>
        </member>
        <member name="P:OpenNETCF.Drawing.FontEx.Size">
            <summary>
            Gets the em-size of this FontEx object measured in the unit of this FontEx object.
            <para><b>New in v1.3</b></para>
            </summary>
        </member>
        <member name="P:OpenNETCF.Drawing.FontEx.Style">
            <summary>
            Gets style information for this FontEx object.
            <para><b>New in v1.3</b></para>
            </summary>
        </member>
        <member name="P:OpenNETCF.Drawing.FontEx.Angle">
            <summary>
            Gets sets the angle for the FontEx.
            </summary>
        </member>
        <member name="P:OpenNETCF.Drawing.FontEx.ClearType">
            <summary>
            Gets or sets a clear type for FontEx object.
            </summary>
        </member>
        <member name="T:OpenNETCF.Win32.DibSection">
            <summary>
            Wrapper for WIN32 <b>DIBSECTION</b> structure
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.DibSection.bmType">
            <summary>
            Specifies the bitmap type; set to zero.
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.DibSection.bmWidth">
            <summary>
            Specifies the width, in pixels, of the bitmap.
            The width must be greater than zero.
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.DibSection.bmHeight">
            <summary>
            Specifies the height, in pixels, of the bitmap.
            The height must be greater than zero.
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.DibSection.bmWidthBytes">
            <summary>
            Specifies the number of bytes in each scan line.
            This value must be divisible by 2, because the system assumes that the bit values of a bitmap form an array that is word aligned.
            </summary>
        </member>
        <member name="F:OpenNETCF.Win32.DibSection.bmBits">
            <summary>
            Pointer to the location of the bit values for the bitmap.
            The bmBits member must be a long pointer to an array of character (1-byte) values.
            </summary>
        </member>
        <member name="T:OpenNETCF.Drawing.PenEx">
            <summary>
            Defines an object used to draw lines and curves.
            </summary>
        </member>
        <member name="M:OpenNETCF.Drawing.PenEx.#ctor(System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenNETCF.Drawing.PenEx"/> class with the <see cref="P:OpenNETCF.Drawing.PenEx.Color"/>.  
            </summary>
            <param name="color">The <see cref="P:OpenNETCF.Drawing.PenEx.Color"/> of the <see cref="T:OpenNETCF.Drawing.PenEx"/>.</param>
        </member>
        <member name="M:OpenNETCF.Drawing.PenEx.#ctor(System.Drawing.Color,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenNETCF.Drawing.PenEx"/> class with the Width.  
            </summary>
            <param name="color">The <see cref="P:OpenNETCF.Drawing.PenEx.Color"/> of the <see cref="T:OpenNETCF.Drawing.PenEx"/>.</param>
            <param name="width"></param>
        </member>
        <member name="M:OpenNETCF.Drawing.PenEx.#ctor(System.Drawing.Color,OpenNETCF.Drawing.Drawing2D.DashStyle)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenNETCF.Drawing.PenEx"/> class with the <see cref="P:OpenNETCF.Drawing.PenEx.DashStyle"/>.
            </summary>
            <param name="color">The <see cref="P:OpenNETCF.Drawing.PenEx.Color"/> of the <see cref="T:OpenNETCF.Drawing.PenEx"/>.</param>
            <param name="style"></param>
        </member>
        <member name="P:OpenNETCF.Drawing.PenEx.Color">
            <summary>
            Gets or sets the color of this object.  
            </summary>
        </member>
        <member name="P:OpenNETCF.Drawing.PenEx.DashStyle">
            <summary>
            Gets or sets the style used for dashed lines drawn with this <see cref="T:OpenNETCF.Drawing.PenEx"/> object.
            </summary>
        </member>
        <member name="P:OpenNETCF.Drawing.PenEx.Width">
            <summary>
            Gets or sets the Width of this object.
            </summary>
        </member>
    </members>
</doc>
