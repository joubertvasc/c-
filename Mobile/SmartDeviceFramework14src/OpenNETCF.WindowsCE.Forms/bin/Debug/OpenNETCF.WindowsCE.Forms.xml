<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OpenNETCF.WindowsCE.Forms</name>
    </assembly>
    <members>
        <member name="T:OpenNETCF.WindowsCE.Forms.InkX">
            <summary>
            Displays rich ink and voice content.
            <para><b>Revised in v1.3</b></para>
            </summary>
            <remarks>This class was previously named <b>OpenNETCF.Windows.Forms.InkX</b></remarks>
        </member>
        <member name="M:OpenNETCF.WindowsCE.Forms.InkX.#ctor">
            <summary>
            Creates a new instance of RichInk.
            </summary>
        </member>
        <member name="M:OpenNETCF.WindowsCE.Forms.InkX.Clear">
            <summary>
            Clears the contents of the InkX control.
            </summary>
        </member>
        <member name="M:OpenNETCF.WindowsCE.Forms.InkX.Play">
            <summary>
            Plays the currently selected voice object.
            </summary>
        </member>
        <member name="M:OpenNETCF.WindowsCE.Forms.InkX.Stop">
            <summary>
            Stops the currently playing audio (if applicable).
            </summary>
        </member>
        <member name="M:OpenNETCF.WindowsCE.Forms.InkX.Record">
            <summary>
            Starts recording a new voice clip.
            </summary>
        </member>
        <member name="P:OpenNETCF.WindowsCE.Forms.InkX.EnableVoiceBar">
            <summary>
            Gets or sets a value which determines whether the VoiceBar is displayed.
            </summary>
            <remarks>Setting this property to true will display the VoiceBar.</remarks>
        </member>
        <member name="P:OpenNETCF.WindowsCE.Forms.InkX.DataLength">
            <summary>
            Gets the length in bytes of the ink data in the main compose window.
            </summary>
        </member>
        <member name="P:OpenNETCF.WindowsCE.Forms.InkX.Data">
            <summary>
            Gets or Sets the raw data contained in the compose window.
            </summary>
        </member>
        <member name="P:OpenNETCF.WindowsCE.Forms.InkX.IsPlaying">
            <summary>
            Gets a value indicating whether the control is currently playing audio.
            </summary>
            <value>Returns TRUE if the control is playing voice audio, else returns FALSE.</value>
        </member>
        <member name="P:OpenNETCF.WindowsCE.Forms.InkX.IsRecording">
            <summary>
            Gets a value indicating whether the control is currently recording audio.
            </summary>
            <value>Returns TRUE if the control is recording voice audio, else returns FALSE.</value>
        </member>
        <member name="F:OpenNETCF.WindowsCE.Forms.InkX.InkXMessage.WM_USER">
            <summary>
            Base message
            </summary>
        </member>
        <member name="F:OpenNETCF.WindowsCE.Forms.InkX.InkXMessage.WM_SETTEXT">
            <summary>
            Required 
            </summary>
        </member>
        <member name="F:OpenNETCF.WindowsCE.Forms.InkX.InkXMessage.GetDataLen">
            <summary>
            Used to return the length of the data.
            </summary>
        </member>
        <member name="F:OpenNETCF.WindowsCE.Forms.InkX.InkXMessage.GetData">
            <summary>
            Used to retrieve the data.
            </summary>
        </member>
        <member name="F:OpenNETCF.WindowsCE.Forms.InkX.InkXMessage.SetData">
            <summary>
            Used to set the data.
            Stores the Ink data from a previous IM_GETDATA call which will be inserted into the current compose window.
            </summary>
        </member>
        <member name="F:OpenNETCF.WindowsCE.Forms.InkX.InkXMessage.ClearAll">
            <summary>
            Used to erase all contents from the current compose window.
            </summary>
        </member>
        <member name="F:OpenNETCF.WindowsCE.Forms.InkX.InkXMessage.VoiceBar">
            <summary>
            Sent to toggle the VoiceBar state
            </summary>
        </member>
        <member name="F:OpenNETCF.WindowsCE.Forms.InkX.InkXMessage.GetRichInk">
            <summary>
            Used to get the window handle to the RichInk control.
            </summary>
        </member>
        <member name="F:OpenNETCF.WindowsCE.Forms.InkX.InkXMessage.IsVoiceRecording">
            <summary>
            Returns TRUE if we're currently recording
            </summary>
        </member>
        <member name="F:OpenNETCF.WindowsCE.Forms.InkX.InkXMessage.VoiceStop">
            <summary>
            Causes the voicebar to halt playback or recording (if either is in progress).
            </summary>
        </member>
        <member name="F:OpenNETCF.WindowsCE.Forms.InkX.InkXMessage.VoicePlay">
            <summary>
            Plays a currently selected voice object
            </summary>
        </member>
        <member name="F:OpenNETCF.WindowsCE.Forms.InkX.InkXMessage.VoiceRecord">
            <summary>
            This will begin recording to an inline embedded object.
            </summary>
        </member>
        <member name="F:OpenNETCF.WindowsCE.Forms.InkX.InkXMessage.IsVoicePlaying">
            <summary>
            Returns TRUE if we're currently playing voice data.
            </summary>
        </member>
        <member name="T:OpenNETCF.WindowsCE.Forms.InkX.InkXStyle">
            <summary>
            Window Styles for the InkX control.
            </summary>
        </member>
        <member name="F:OpenNETCF.WindowsCE.Forms.InkX.InkXStyle.NoVoiceBar">
            <summary>
            Don't create a VoiceBar.
            </summary>
        </member>
        <member name="F:OpenNETCF.WindowsCE.Forms.InkX.InkXStyle.BottomVoiceBar">
            <summary>
            VoiceBar appears at bottom of the control.
            </summary>
        </member>
        <member name="T:OpenNETCF.WindowsCE.Forms.InkX.InkXNotification">
            <summary>
            Notifications received from the native control
            </summary>
        </member>
        <member name="T:OpenNETCF.WindowsCE.Forms.BalloonChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:OpenNETCF.WindowsCE.Forms.Notification.BalloonChanged"/> event.
            <para><b>New in v1.3</b></para>
            </summary>
        </member>
        <member name="M:OpenNETCF.WindowsCE.Forms.BalloonChangedEventArgs.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenNETCF.WindowsCE.Forms.BalloonChangedEventArgs"/> class.
            </summary>
            <param name="visible">true to indicate the notification is visible; otherwise, false.</param>
        </member>
        <member name="P:OpenNETCF.WindowsCE.Forms.BalloonChangedEventArgs.Visible">
            <summary>
            Gets or sets a value indicating whether the message balloon was changed to visible.
            </summary>
            <value>true if the Visible property on the Notification is true; otherwise, false.</value>
            <remarks>You can use this property to track whenever a notification is displayed or hidden.</remarks>
        </member>
        <member name="T:OpenNETCF.WindowsCE.Forms.BalloonChangedEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:OpenNETCF.WindowsCE.Forms.Notification.BalloonChanged"/> event of a <see cref="T:OpenNETCF.WindowsCE.Forms.Notification"/>.
            </summary>
        </member>
        <member name="T:OpenNETCF.WindowsCE.Forms.Notification">
            <summary>
            Implements Windows CE functionality for displaying and responding to user notifications.
            <para><b>New in v1.3</b></para>
            </summary>
            <remarks>This class provides a managed implementation of the Windows CE notification functions.
            This class is supported only on the Pocket PC.
            <para>You can create notifications and then display them as needed using the <see cref="P:OpenNETCF.WindowsCE.Forms.Notification.Visible"/> property.
            The <see cref="P:OpenNETCF.WindowsCE.Forms.Notification.InitialDuration"/> property sets the time the message balloon initially displays.
            If you set <see cref="P:OpenNETCF.WindowsCE.Forms.Notification.InitialDuration"/> to zero and Visible to true, the message balloon does not appear but its icon is available in the title bar for reactivation when clicked.
            The <see cref="E:OpenNETCF.WindowsCE.Forms.Notification.BalloonChanged"/> event occurs whenever the balloon is shown or hidden, either programmatically using the <see cref="P:OpenNETCF.WindowsCE.Forms.Notification.Visible"/> property or through user interaction.
            In addition to plain text, you can create a user notification with HTML content in the message balloon.
            The HTML is rendered by the Pocket PC HTML control, and you can respond to values in an HTML form by parsing a response string provided by the <see cref="T:OpenNETCF.WindowsCE.Forms.ResponseSubmittedEventArgs"/> class, through the <see cref="P:OpenNETCF.WindowsCE.Forms.ResponseSubmittedEventArgs.Response"/> property.</para>
            <b>Cmd:2 Identifier</b>
            <para>The identifier "cmd:2" has a special purpose in Windows CE and is used to dismiss notifications.
            If cmd:2 is the name of an HTML button or other element in a message balloon, the <see cref="E:OpenNETCF.WindowsCE.Forms.Notification.ResponseSubmitted"/> event is not raised.
            The notification is dismissed, but its icon is placed on the title bar to be responded to at a later time.</para></remarks>
        </member>
        <member name="M:OpenNETCF.WindowsCE.Forms.Notification.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenNETCF.WindowsCE.Forms.Notification"/> class.
            </summary>
            <remarks>This class is not supported on the Smartphone or other Windows CE devices that are not Pocket PCs.
            You can create multiple notifications, such as an array of notifications, and display them as needed with the Visible property.</remarks>
        </member>
        <member name="M:OpenNETCF.WindowsCE.Forms.Notification.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="P:OpenNETCF.WindowsCE.Forms.Notification.Caption">
            <summary>
            Gets or sets a string specifying the title text for the message balloon.
            </summary>
            <value>A string that specifies the caption text.
            The default value is an empty string ("").</value>
            <remarks>The background color of the caption is dependent on the current theme of the user.
            Use the <see cref="P:OpenNETCF.WindowsCE.Forms.Notification.Text"/> property to modify the text in the body of the message balloon.</remarks>
        </member>
        <member name="P:OpenNETCF.WindowsCE.Forms.Notification.Critical">
            <summary>
            Gets or sets a value indicating whether the notification is of urgent importance.
            </summary>
            <value>true if the notification is critical; otherwise, false. The default is false.</value>
            <remarks>Critical notifications have a red background caption color, or other color, depending on the current Pocket PC theme.</remarks>
        </member>
        <member name="P:OpenNETCF.WindowsCE.Forms.Notification.IconHandle">
            <summary>
            Gets or sets the current native icon handle for the message balloon on the title bar.
            </summary>
        </member>
        <member name="P:OpenNETCF.WindowsCE.Forms.Notification.InitialDuration">
            <summary>
            Gets or sets the number of seconds the message balloon remains visible after initially shown.
            </summary>
            <remarks>The amount of time the balloon is visible, in seconds. The default is 10.</remarks>
        </member>
        <member name="P:OpenNETCF.WindowsCE.Forms.Notification.Text">
            <summary>
            Gets or sets the text for the message balloon.
            </summary>
        </member>
        <member name="P:OpenNETCF.WindowsCE.Forms.Notification.Visible">
            <summary>
            Gets or sets a value indicating whether the message balloon is visible.
            </summary>
        </member>
        <member name="E:OpenNETCF.WindowsCE.Forms.Notification.BalloonChanged">
            <summary>
            Occurs when a message balloon is displayed or hidden.
            </summary>
        </member>
        <member name="E:OpenNETCF.WindowsCE.Forms.Notification.ResponseSubmitted">
            <summary>
            Occurs when the user clicks a button or link in the message balloon.
            </summary>
        </member>
        <member name="T:OpenNETCF.WindowsCE.Forms.DEVMODE">
            <summary>
            DEVMODE struct used with ChangeDisplaySettingsEx
            </summary>
        </member>
        <member name="T:OpenNETCF.WindowsCE.Forms.ResponseSubmittedEventArgs">
            <summary>
            Provides data for the <see cref="E:OpenNETCF.WindowsCE.Forms.Notification.ResponseSubmitted"/> event.
            <para><b>New in v1.3</b></para>
            </summary>
            <remarks>The <see cref="E:OpenNETCF.WindowsCE.Forms.Notification.ResponseSubmitted"/> event occurs when the message balloon is dismissed by user input.
            You can use the Response property to ascertain values entered into an HTML form in the message balloon or to determine the name of a button or link clicked by the user.</remarks>
        </member>
        <member name="M:OpenNETCF.WindowsCE.Forms.ResponseSubmittedEventArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenNETCF.WindowsCE.Forms.ResponseSubmittedEventArgs"/> class.
            </summary>
            <param name="response"></param>
        </member>
        <member name="P:OpenNETCF.WindowsCE.Forms.ResponseSubmittedEventArgs.Response">
            <summary>
            Gets a string containing the name of a selected link or button or the results of a form embedded in the text of the message balloon.
            </summary>
            <remarks>The following table describes possible values for this property and the HTML elements that can create them.
            <list type="table"><listheader><term>Element</term><term></term>HTML example<term>Response value</term></listheader>
            <item><term>Name of a link</term><term>&lt;a href="helplink"&gt;Help&lt;/a&gt;</term><term>helplink</term></item>
            <item><term>Name of a button</term><term>&lt;input type=button name=OKbutton value="OK"&gt;</term><term>OKbutton</term></item>
            <item><term>HTML form results</term><term>&lt;form method=\"GET\" action=notify&gt;</term><term>action=notify</term></item>
            </list>
            Note that using cmd:#, where # is an integer, as the name for a HTML element prevents the <see cref="E:OpenNETCF.WindowsCE.Forms.Notification.ResponseSubmitted"/> event from being raised.
            The cmd:2 identifier performs a special purpose: it displays the notification icon in the title bar making it suitable for Cancel buttons.</remarks>
        </member>
        <member name="T:OpenNETCF.WindowsCE.Forms.ResponseSubmittedEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:OpenNETCF.WindowsCE.Forms.Notification.ResponseSubmitted"/> event of a <see cref="T:OpenNETCF.WindowsCE.Forms.Notification"/>.
            </summary>
        </member>
        <member name="T:OpenNETCF.WindowsCE.Forms.ScreenOrientation">
            <summary>
            Specifies the angle of the device screen that can be accessed by the <see cref="P:OpenNETCF.WindowsCE.Forms.SystemSettings.ScreenOrientation"/> property.
            <para><b>New in v1.3</b></para>
            </summary>
            <remarks>The default portrait orientation is at angle 0.
            Requires Pocket PC 2003 Second Edition.</remarks>
        </member>
        <member name="F:OpenNETCF.WindowsCE.Forms.ScreenOrientation.Angle0">
            <summary>
            Specifies a portrait orientation at 0 degrees.
            </summary>
        </member>
        <member name="F:OpenNETCF.WindowsCE.Forms.ScreenOrientation.Angle90">
            <summary>
            Specifies a landscape orientation at 90 degrees.
            </summary>
        </member>
        <member name="F:OpenNETCF.WindowsCE.Forms.ScreenOrientation.Angle180">
            <summary>
            Specifies an orientation at 180 degrees.
            </summary>
        </member>
        <member name="F:OpenNETCF.WindowsCE.Forms.ScreenOrientation.Angle270">
            <summary>
            Specifies an orientation at 270 degrees.
            </summary>
        </member>
        <member name="T:OpenNETCF.WindowsCE.Forms.InputPanelEx">
            <summary>
            Enhances the <see cref="T:Microsoft.WindowsCE.Forms.InputPanel"/> class for controlling the soft input panel (SIP) for entering data on Pocket PCs and other Windows CE.NET devices
            <para><b>New in v1.3</b></para>
            </summary>
        </member>
        <member name="M:OpenNETCF.WindowsCE.Forms.InputPanelEx.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenNETCF.WindowsCE.Forms.InputPanelEx"/> class for enabling and disabling the soft input panel (SIP).
            </summary>
        </member>
        <member name="P:OpenNETCF.WindowsCE.Forms.InputPanelEx.CurrentInputMethod">
            <summary>
            Gets or sets the input method for the Pocket PC.
            <para><b>New in v1.3</b></para>
            </summary>
        </member>
        <member name="P:OpenNETCF.WindowsCE.Forms.InputPanelEx.InputMethods">
            <summary>
            Gets a collection of the input methods available on a Pocket PC.
            </summary>
        </member>
        <member name="T:OpenNETCF.WindowsCE.Forms.InputPanelEx.InputMethodCollection">
            <summary>
            Provides access to all input method software installed on a Pocket PC.
            </summary>
        </member>
        <member name="M:OpenNETCF.WindowsCE.Forms.InputPanelEx.InputMethodCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:OpenNETCF.WindowsCE.Forms.InputMethod"/> at the specified index.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:OpenNETCF.WindowsCE.Forms.InputPanelEx.InputMethodCollection.Contains(OpenNETCF.WindowsCE.Forms.InputMethod)">
            <summary>
            Determines whether the <see cref="T:OpenNETCF.WindowsCE.Forms.InputPanelEx.InputMethodCollection"/> class contains a specified value.
            </summary>
            <param name="method">An <see cref="T:OpenNETCF.WindowsCE.Forms.InputMethod"/> to locate in the collection.</param>
            <returns>true if present, else false.</returns>
        </member>
        <member name="M:OpenNETCF.WindowsCE.Forms.InputPanelEx.InputMethodCollection.IndexOf(OpenNETCF.WindowsCE.Forms.InputMethod)">
            <summary>
            Determines the index of a specific item in the <see cref="T:OpenNETCF.WindowsCE.Forms.InputPanelEx.InputMethodCollection"/> class.
            </summary>
            <param name="method">The input method to locate in the collection.</param>
            <returns>Index in the array.</returns>
        </member>
        <member name="M:OpenNETCF.WindowsCE.Forms.InputPanelEx.InputMethodCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the collection values to a one-dimensional <see cref="T:System.Array"/> instance at the specified index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the values copied from <see cref="T:OpenNETCF.WindowsCE.Forms.InputPanelEx.InputMethodCollection"/>.</param>
            <param name="index">The index in the array where copying to begins.</param>
        </member>
        <member name="M:OpenNETCF.WindowsCE.Forms.InputPanelEx.InputMethodCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through the <see cref="T:OpenNETCF.WindowsCE.Forms.InputPanelEx.InputMethodCollection"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="P:OpenNETCF.WindowsCE.Forms.InputPanelEx.InputMethodCollection.IsReadOnly">
            <summary>
            Gets a value that indicates whether the collection is read-only.
            </summary>
        </member>
        <member name="P:OpenNETCF.WindowsCE.Forms.InputPanelEx.InputMethodCollection.Item(System.Int32)">
            <summary>
            Gets the item at the specified index.
            </summary>
        </member>
        <member name="P:OpenNETCF.WindowsCE.Forms.InputPanelEx.InputMethodCollection.Count">
            <summary>
            Gets the number of elements in the <see cref="T:OpenNETCF.WindowsCE.Forms.InputPanelEx.InputMethodCollection"/> class.
            </summary>
        </member>
        <member name="T:OpenNETCF.WindowsCE.Forms.Vibrate">
            <summary>
            Controls vibration on the device.
            <para><b>Revised in v1.3</b></para>
            </summary>
            <remarks>Supported only on Smartphone. Previously named <b>OpenNETCF.Notification.Vibrate</b>. Vibration equipped Pocket PC devices emulate the Vibration motorl as a notification Led.</remarks>
            <platform><os>Windows Mobile 2003 for Smartphone</os></platform>
        </member>
        <member name="M:OpenNETCF.WindowsCE.Forms.Vibrate.Play">
            <summary>
            Plays the default looping vibration on the device.
            </summary>
            <returns>TRUE if vibration started successfully else FALSE.</returns>
            <platform><os>Pocket PC Phone Edition, Windows Mobile 2003 for Smartphone</os></platform>
            <preliminary/>
        </member>
        <member name="M:OpenNETCF.WindowsCE.Forms.Vibrate.Stop">
            <summary>
            Stops any current vibration.
            </summary>
            <returns>TRUE on success else FALSE.</returns>
            <platform><os>Pocket PC Phone Edition, Windows Mobile 2003 for Smartphone</os></platform>
            <preliminary/>
        </member>
        <member name="M:OpenNETCF.WindowsCE.Forms.Vibrate.GetDeviceCaps(OpenNETCF.WindowsCE.Forms.Vibrate.VibrationCapabilities)">
            <summary>
            Gets the current device vibration capabilities.
            </summary>
            <param name="caps">Member of the VibrationCapabilities enumeration identifying what capability to query.</param>
            <returns>0 if the capability is not supported, 1 if a single level is supported or a value between 2 and 7 if multiple levels are supported.</returns>
            <remarks>This function returns the number of vibration steps (a number from 0 to 7) that the device hardware supports for the requested vibration capability.</remarks>
            <platform><os>Pocket PC Phone Edition, Windows Mobile 2003 for Smartphone</os></platform>
            <preliminary/>
        </member>
        <member name="T:OpenNETCF.WindowsCE.Forms.Vibrate.VibrationCapabilities">
            <summary>
            Used by the GetDeviceCaps function to query the device vibration capabilities.
            <para><b>New in v1.1</b></para>
            </summary>
            <platform><os>Pocket PC Phone Edition, Windows Mobile 2003 for Smartphone</os></platform>
            <preliminary/>
        </member>
        <member name="F:OpenNETCF.WindowsCE.Forms.Vibrate.VibrationCapabilities.Amplitude">
            <summary>
            Query the amplitude that the device supports.
            </summary>
        </member>
        <member name="F:OpenNETCF.WindowsCE.Forms.Vibrate.VibrationCapabilities.Frequency">
            <summary>
            Query the frequency that the device supports.
            </summary>
        </member>
        <member name="T:OpenNETCF.WindowsCE.Forms.Led">
            <summary>
            Represents the collection of Notification Leds on the device.
            </summary>
            <remarks>Support varies depending on the device but all devices should include at least 1 notification LED</remarks>
        </member>
        <member name="M:OpenNETCF.WindowsCE.Forms.Led.#ctor">
            <summary>
            Initialise the LED collection
            </summary>
        </member>
        <member name="M:OpenNETCF.WindowsCE.Forms.Led.SetLedStatus(System.Int32,OpenNETCF.WindowsCE.Forms.Led.LedState)">
            <summary>
            Set the state of the specified LED
            </summary>
            <param name="led">0 based index of the LED</param>
            <param name="newState">New state of the LED - see LedState enumeration</param>
        </member>
        <member name="P:OpenNETCF.WindowsCE.Forms.Led.Count">
            <summary>
            Returns the number of notification Leds in the system
            </summary>
        </member>
        <member name="T:OpenNETCF.WindowsCE.Forms.Led.LedState">
            <summary>
            Defines the possible states for an LED
            </summary>
        </member>
        <member name="F:OpenNETCF.WindowsCE.Forms.Led.LedState.Off">
            <summary>
            LED is off
            </summary>
        </member>
        <member name="F:OpenNETCF.WindowsCE.Forms.Led.LedState.On">
            <summary>
            LED is on
            </summary>
        </member>
        <member name="F:OpenNETCF.WindowsCE.Forms.Led.LedState.Blink">
            <summary>
            LED cycles between On and Off
            </summary>
        </member>
        <member name="T:OpenNETCF.WindowsCE.Forms.InputMethod">
            <summary>
            Provides the name and class ID for a soft input panel method.
            <para><b>New in v1.3</b></para>
            </summary>
        </member>
        <member name="M:OpenNETCF.WindowsCE.Forms.InputMethod.FromClsid(System.Guid)">
            <summary>
            Returns an instance of InputMethod from a specific Clsid.
            </summary>
            <param name="clsid">Class identifier of SIP class.</param>
            <returns></returns>
        </member>
        <member name="P:OpenNETCF.WindowsCE.Forms.InputMethod.Clsid">
            <summary>
            Gets a GUID value that contains a GUID that identifies a specific input method.
            </summary>
        </member>
        <member name="P:OpenNETCF.WindowsCE.Forms.InputMethod.Name">
            <summary>
            Gets the name of an input method.
            </summary>
        </member>
        <member name="T:OpenNETCF.WindowsCE.Forms.NotificationMessageWindow">
            <summary>
            Handles messages received from the Notification system and throws events in the parent NotificationEngine object
            </summary>
        </member>
        <member name="T:OpenNETCF.WindowsCE.Forms.SystemSettings">
            <summary>
            Provides access to user interface and native Windows CE operating system settings on a device.
            <para><b>New in v1.3</b></para>
            </summary>
        </member>
        <member name="P:OpenNETCF.WindowsCE.Forms.SystemSettings.ScreenOrientation">
            <summary>
            Gets or sets the current screen orientation of a device.
            </summary>
        </member>
        <member name="T:OpenNETCF.WindowsCE.Forms.InputMode">
            <summary>
            Specifies the input modes that can be set on the Smartphone using an <see cref="T:OpenNETCF.WindowsCE.Forms.InputModeEditor"/>.
            <para><b>New in v1.3</b></para>
            </summary>
        </member>
        <member name="F:OpenNETCF.WindowsCE.Forms.InputMode.AlphaABC">
            <summary>
            This is the conventional method for entering text, called multi-tap, which requires up to four key presses depending on the letter being entered.
            </summary>
        </member>
        <member name="F:OpenNETCF.WindowsCE.Forms.InputMode.AlphaCurrent">
            <summary>
            Maintains the current T9 or ABC selection for entering alpha characters as set by the user by holding down the star key (*) on a Smartphone.
            This mode is shared across the system so that any text box set with this mode, including text box controls in native Windows CE applications, will adhere to the last T9 or ABC choice as set by the user.
            This ability to match user preferences makes this the preferred input mode for text boxes that accept alpha characters. 
            <para>Note that if the user selects a numeric input mode (123) with the star key for a text box set to AlphaCurrent, the text box will only accept numeric characters but will be set to the current alpha input mode (T9 or ABC) when the text box loses and regains focus.</para>
            </summary>
        </member>
        <member name="F:OpenNETCF.WindowsCE.Forms.InputMode.AlphaT9">
            <summary>
            This input mode is the T9 predictive text input feature on the Smartphone.
            </summary>
        </member>
        <member name="F:OpenNETCF.WindowsCE.Forms.InputMode.Numeric">
            <summary>
            This input mode accepts only numeric characters and symbols.
            </summary>
        </member>
        <member name="T:OpenNETCF.WindowsCE.Forms.ConfigurationManager">
            <summary>
            Provides access to the Configuration Manager functionality of Smartphone and Pocket PC Phone Edition devices.
            <para><b>New in v1.3</b></para>
            </summary>
        </member>
        <member name="M:OpenNETCF.WindowsCE.Forms.ConfigurationManager.ProcessConfigXml(System.String,OpenNETCF.WindowsCE.Forms.ConfigXmlFlags)">
            <summary>
            Processes the specified Xml and returns a string containing the Xml response.
            </summary>
            <param name="xmlIn">Xml containing configuration settings.</param>
            <param name="flags">Specifies a combination of <see cref="T:OpenNETCF.WindowsCE.Forms.ConfigXmlFlags"/>.</param>
            <returns></returns>
            <remarks>The Configuration Manager component is transactioned and must process only one configuration request at a time to prevent collisions.</remarks>
        </member>
        <member name="M:OpenNETCF.WindowsCE.Forms.ConfigurationManager.ProcessConfigXml(System.Xml.XmlDocument,OpenNETCF.WindowsCE.Forms.ConfigXmlFlags)">
            <summary>
            Processes the specified Xml document and returns the response as a new <see cref="T:System.Xml.XmlDocument"/>.
            </summary>
            <param name="xmlIn">Xml Document containing configuration settings.</param>
            <param name="flags">Specifies a combination of <see cref="T:OpenNETCF.WindowsCE.Forms.ConfigXmlFlags"/>.</param>
            <returns></returns>
        </member>
        <member name="T:OpenNETCF.WindowsCE.Forms.ConfigXmlFlags">
            <summary>
            Flags used with <see cref="M:OpenNETCF.WindowsCE.Forms.ConfigurationManager.ProcessConfigXml(System.String,OpenNETCF.WindowsCE.Forms.ConfigXmlFlags)"/> method.
            </summary>
        </member>
        <member name="F:OpenNETCF.WindowsCE.Forms.ConfigXmlFlags.Test">
            <summary>
            The configuration management service and the Configuration Service Providers (CSPs) test the input data but do not actually commit changes.
            </summary>
        </member>
        <member name="F:OpenNETCF.WindowsCE.Forms.ConfigXmlFlags.Process">
            <summary>
            The configuration management service and the Configuration Service Providers (CSPs) process the input data. 
            </summary>
        </member>
        <member name="F:OpenNETCF.WindowsCE.Forms.ConfigXmlFlags.MetaData">
            <summary>
            The configuration management service gathers and returns metadata for any XML parm elements it encounters. 
            </summary>
        </member>
        <member name="T:OpenNETCF.WindowsCE.Forms.InputModeEditor">
            <summary>
            Provides access to Smartphone input methods for entering text.
            <para><b>New in v1.3</b></para>
            </summary>
        </member>
        <member name="M:OpenNETCF.WindowsCE.Forms.InputModeEditor.SetInputMode(System.Windows.Forms.Control,OpenNETCF.WindowsCE.Forms.InputMode)">
            <summary>
            Specifies the input mode on a Smartphone.
            </summary>
        </member>
        <member name="M:OpenNETCF.WindowsCE.Forms.InputModeEditor.SetSymbols(System.Windows.Forms.Control,System.String)">
            <summary>
            Sets the symbols to use with the control on Smartphone.
            </summary>
            <param name="control">Control for which Symbol collection is to be used.</param>
            <param name="symbols">Collection of characters to be used as symbols.</param>
        </member>
        <member name="F:OpenNETCF.WindowsCE.Forms.SHNOTIFICATIONDATA.csDuration">
            <summary>
            Duration to display the bubble (in seconds).
            </summary>
        </member>
        <member name="F:OpenNETCF.WindowsCE.Forms.SHNOTIFICATIONDATA.grfFlags">
            <summary>
            Flags that affect the behaviour of the Notification bubble
            </summary>
        </member>
        <member name="F:OpenNETCF.WindowsCE.Forms.SHNOTIFICATIONDATA.lParam">
            <summary>
            User defined parameter
            </summary>
        </member>
        <member name="F:OpenNETCF.WindowsCE.Forms.SHNP.INFORM">
            <summary>
            Bubble shown for duration, then goes away
            </summary>
        </member>
        <member name="F:OpenNETCF.WindowsCE.Forms.SHNP.ICONIC">
            <summary>
            No bubble, icon shown for duration then goes away
            </summary>
        </member>
        <member name="T:OpenNETCF.WindowsCE.Forms.SHNF">
            <summary>
            Flags that affect the display behaviour of the Notification
            </summary>
        </member>
        <member name="F:OpenNETCF.WindowsCE.Forms.SHNF.STRAIGHTTOTRAY">
            <summary>
            For SHNP_INFORM priority and above, don't display the notification bubble when it's initially added;
            the icon will display for the duration then it will go straight into the tray.
            The user can view the icon / see the bubble by opening the tray.
            </summary>
        </member>
        <member name="F:OpenNETCF.WindowsCE.Forms.SHNF.CRITICAL">
            <summary>
            Critical information - highlights the border and title of the bubble.
            </summary>
        </member>
        <member name="F:OpenNETCF.WindowsCE.Forms.SHNF.FORCEMESSAGE">
            <summary>
            Force the message (bubble) to display even if settings says not to.
            </summary>
        </member>
        <member name="F:OpenNETCF.WindowsCE.Forms.SHNF.DISPLAYON">
            <summary>
            Force the display to turn on for notification. Added for Windows Mobile 2003.
            </summary>
        </member>
        <member name="F:OpenNETCF.WindowsCE.Forms.SHNF.SILENT">
            <summary>
            Force the notification to be silent and not vibrate, regardless of Settings. Added for Windows Mobile 2003.
            </summary>
        </member>
    </members>
</doc>
